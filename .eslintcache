[{"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/index.js":"1","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/App.js":"2","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/reportWebVitals.js":"3","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/EventStore.js":"4","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Event.js":"5","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Food.js":"6","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Music.js":"7","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Flowers.js":"8","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Place.js":"9","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Organiser.js":"10","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Theme.js":"11","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Client.js":"12","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditEvent.jsx":"13","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/TimePicker.jsx":"14","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditDetails.jsx":"15","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/DatePicker.jsx":"16","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditThemes.jsx":"17","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/Theme.jsx":"18","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/ThemePopup.jsx":"19","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/FullWidthTabs.jsx":"20","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodSection.jsx":"21","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodOption.jsx":"22","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicSection.jsx":"23","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicOption.jsx":"24","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceSection.jsx":"25","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceOption.jsx":"26","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFlowersSection.jsx":"27","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/MarketplaceStore.js":"28","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/AssignmentRequest.js":"29","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/MarketPlace.jsx":"30","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EventCard.jsx":"31"},{"size":775,"mtime":1611507242098,"results":"32","hashOfConfig":"33"},{"size":987,"mtime":1611507704438,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610984653721,"results":"35","hashOfConfig":"33"},{"size":8462,"mtime":1611517632484,"results":"36","hashOfConfig":"33"},{"size":1304,"mtime":1611502676538,"results":"37","hashOfConfig":"33"},{"size":853,"mtime":1611141214984,"results":"38","hashOfConfig":"33"},{"size":685,"mtime":1611394416185,"results":"39","hashOfConfig":"33"},{"size":433,"mtime":1611497730764,"results":"40","hashOfConfig":"33"},{"size":757,"mtime":1611427210326,"results":"41","hashOfConfig":"33"},{"size":377,"mtime":1611050432962,"results":"42","hashOfConfig":"33"},{"size":462,"mtime":1611075468223,"results":"43","hashOfConfig":"33"},{"size":445,"mtime":1610987075822,"results":"44","hashOfConfig":"33"},{"size":2131,"mtime":1611498920235,"results":"45","hashOfConfig":"33"},{"size":1063,"mtime":1611064468639,"results":"46","hashOfConfig":"33"},{"size":4665,"mtime":1611149029196,"results":"47","hashOfConfig":"33"},{"size":826,"mtime":1611065183931,"results":"48","hashOfConfig":"33"},{"size":1777,"mtime":1611088709941,"results":"49","hashOfConfig":"33"},{"size":1187,"mtime":1611088866456,"results":"50","hashOfConfig":"33"},{"size":2319,"mtime":1611088520648,"results":"51","hashOfConfig":"33"},{"size":2450,"mtime":1611499219565,"results":"52","hashOfConfig":"33"},{"size":4378,"mtime":1611394061841,"results":"53","hashOfConfig":"33"},{"size":5420,"mtime":1611182297540,"results":"54","hashOfConfig":"33"},{"size":4568,"mtime":1611476794624,"results":"55","hashOfConfig":"33"},{"size":3803,"mtime":1611397069656,"results":"56","hashOfConfig":"33"},{"size":2757,"mtime":1611478067781,"results":"57","hashOfConfig":"33"},{"size":5408,"mtime":1611478159875,"results":"58","hashOfConfig":"33"},{"size":8454,"mtime":1611498300337,"results":"59","hashOfConfig":"33"},{"size":4185,"mtime":1611510230953,"results":"60","hashOfConfig":"33"},{"size":255,"mtime":1611502868951,"results":"61","hashOfConfig":"33"},{"size":2412,"mtime":1611515801416,"results":"62","hashOfConfig":"33"},{"size":2982,"mtime":1611514337802,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b0kdfg",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/index.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/App.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/reportWebVitals.js",[],["139","140"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/EventStore.js",["141","142","143","144","145","146","147","148","149","150","151","152"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Event.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Food.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Music.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Flowers.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Place.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Organiser.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Theme.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Client.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditEvent.jsx",["153"],"import React, { Component } from 'react'\nimport { observer, inject } from 'mobx-react'\nimport EditInfo from './EditDetails'\nimport EditThemes from './EditThemes';\nimport EditFoodSection from './EditFoodSection'\nimport EditMusicSection from './EditMusicSection'\nimport EditPlaceSection from './EditPlaceSection'\nimport EditFlowersSection from './EditFlowersSection'\nimport { Button } from '@material-ui/core';\n\nclass EditEvent extends Component {\n    constructor() {\n        super()\n        this.state = {\n            event: undefined\n        }\n    }\n\n    componentDidMount(){\n        this.setState({\n            event: this.props.event\n        })\n    }\n\n    updateEventState = (newEvent) => {\n       console.log('updateEventState     '+JSON.stringify(newEvent))\n        this.setState({event: newEvent})\n    }\n\n    saveEvent = () => {\n        this.props.eventsStore.updateEvent(this.state.event)\n    }\n\n    cancelEditing = () => {\n        // route to the view event page\n    }\n\n    render(){\n        if(this.state.event == undefined){\n            return null\n        }\n        return(\n            <div class='pageContent'>\n               <EditInfo event={this.state.event} updateEventState={this.updateEventState}/> \n               <hr></hr>\n               <EditThemes event={this.state.event } updateEventState={this.updateEventState}/>\n               <hr></hr>\n               <EditFoodSection event={this.state.event} updateEventState={this.updateEventState}/>\n               <hr></hr>\n               <EditMusicSection event={this.state.event} updateEventState={this.updateEventState}/>\n               <hr></hr>\n               <EditFlowersSection event={this.state.event} updateEventState={this.updateEventState}/>\n               <hr></hr>\n               <EditPlaceSection event={this.state.event} updateEventState={this.updateEventState}/>\n               <hr></hr>\n               <Button className='tabBtn' onClick={this.cancelEditing}>Cancel</Button>\n               <Button className='tabBtn' onClick={this.saveEvent}>Save</Button>\n            </div>\n        )\n    }\n\n}\n\nexport default inject(\"eventsStore\")(observer(EditEvent))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/TimePicker.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditDetails.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/DatePicker.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditThemes.jsx",["154","155","156"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport Theme from './Theme';\n\n\nclass EditThemes extends Component {\n    constructor() {\n        super()\n        this.state = {\n            toDisplayThemes:[],\n            current: 0\n        }\n    }\n\n    fillThemes(){\n        let themes = []\n        for(let i=this.state.current; i<this.props.eventsStore.themes.length; i++){\n            if(this.state.current+i==3){\n                break;\n            }\n            themes.push(this.props.eventsStore.themes[i])\n        }\n        this.setState({toDisplayThemes: themes})\n    }\n\n    componentDidMount(){\n        this.fillThemes()\n    }\n\n    moveLeft = () =>{\n        if(this.state.current!=0){\n            this.setState({current: this.state.current-1}, this.fillThemes())\n        }\n\n    }\n\n    moveRight = () => {\n        if(this.state.current!=this.props.eventsStore.themes.length-1){\n            this.setState({current: this.state.current+1}, this.fillThemes())\n        }\n    }\n\n    changeTheme = (theme) => {\n        this.props.eventsStore.changeTheme(this.props.event, theme)\n    }\n\n    render() {\n        const allThemes = this.state.toDisplayThemes.map(element => { return <Theme theme={element} key={element.id} changeTheme={this.changeTheme}/> })\n        // console.log(JSON.stringify(allThemes))\n\n        return (<table>\n            <tbody>\n                <tr>\n            {/* Display up to three themes */}\n            <td><button className='arrows' onClick={this.moveLeft}>{'<'}</button></td>\n            {allThemes}\n            <td><button className='arrows' onClick={this.moveRight}>{'>'}</button></td>\n            </tr>\n            </tbody>\n        </table>)\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(EditThemes))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/Theme.jsx",["157"],"\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport ThemePopup from './ThemePopup'\n\nclass Theme extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            openPopup:  false\n        }\n    }\n\n    viewPopup = () => {\n        this.setState({openPopup: true})\n    }\n\n    closePopup = () => {\n        this.setState({openPopup: false})\n    }\n\n    updateEvent = (theme) => {\n        this.props.changeTheme(theme)\n    }\n    \n    render(){\n        let text\n        if (this.props.theme.isChosen){\n            text = <div class=\"chosenTheme\">(Chosen)</div>\n        }\n        let popup\n        if (this.state.openPopup){\n            popup = <ThemePopup closePopup={this.closePopup} theme={this.props.theme} updateEvent={this.updateEvent}/>\n        }else{\n            popup = null\n        }\n        // to be changed later\n        return(<td className=\"ThemeRow\">\n            <img src={this.props.theme.mainImg} onClick={this.viewPopup}></img>\n            <div class=\"centered\">{this.props.theme.title}</div>\n            {text}\n            {popup}\n        </td>)\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(Theme))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/ThemePopup.jsx",["158"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function ThemePopup(props) {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    props.closePopup()\n  };\n\n  const chooseTheme = () => {\n    props.updateEvent(props.theme)\n  }  \n\n  const photos = props.theme.images.map(element => {return <img className='popupImg' src={element}></img>})\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {props.theme.title}\n        </DialogTitle>\n        <DialogContent dividers>\n          {photos}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={chooseTheme} color=\"primary\">\n            Choose\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/FullWidthTabs.jsx",["159","160"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    // width: '90vw',\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  let tabIndex = 0;\n  let tabs = props.labels.map((element, tabIndex) => {return <Tab label={element} {...a11yProps(tabIndex++)} />})\n\n  let contentIndex = 0\n  let tabPanels = props.content.map((element, contentIndex) => {return (<TabPanel value={value} index={contentIndex++} dir={theme.direction} p={props.content.length}>\n    {element}\n    </TabPanel>)})\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n        {tabs}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n      {tabPanels}\n      </SwipeableViews>\n    </div>\n  );\n}","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodSection.jsx",["161","162","163","164","165","166","167","168","169"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditFoodOption from './EditFoodOption';\n\n\nclass EditFoodSection extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            foodOptions: [],\n            foodChosen: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('in cimponentDidMount of the EditFoodSection')\n        this.setState({ foodChosen: this.props.event.food })\n        let finalFoodOptions = []\n\n        this.props.eventsStore.food.forEach(element => {\n            let item = this.props.event.food.filter(e => {\n                return e.id == element.id\n            })\n            if (item.length == 0) {\n                finalFoodOptions.push(element)\n            }\n        });\n        this.setState({ foodOptions: finalFoodOptions })\n\n    }\n\n    updateEventFoodList = () => {\n        let newEvent = { ...this.props.event }\n        newEvent.food = []\n        this.state.foodChosen.forEach(element => newEvent.food.push(element))\n        this.props.updateEventState(newEvent)\n    }\n\n    updateChosenFoodDetails = (food) => {\n        let newEvent = { ...this.props.event }\n        let index = newEvent.food.findIndex(element => { return element.id == food.id })\n        // we are only interested in the chosen items\n        // generates a bug when trying to add a modified food option to list\n        if (index != -1) {\n            newEvent.food[index] = { ...food }\n            this.props.updateEventState(newEvent)\n        }\n    }\n\n    trasnferFoodFromOptions = (food) => {\n        let newFoodOptions = []\n        this.state.foodOptions.forEach(element => {\n            if (element.id != food.id) {\n                newFoodOptions.push(element)\n            }\n        })\n        let newFoodChosen = this.state.foodChosen.map(element => { return element })\n        newFoodChosen.push(food)\n        this.setState({\n            foodOptions: newFoodOptions,\n            foodChosen: newFoodChosen\n        }, () => {\n            this.updateEventFoodList()\n            this.props.eventsStore.addFoodToList(this.props.event, food)\n        })\n\n\n    }\n\n    trasnferFoodFromChosen = (food) => {\n        let newFoodOptions = this.state.foodOptions.map(element => { return element })\n        let newFoodChosen = []\n        this.state.foodChosen.forEach(element => {\n            if (element.id != food.id) {\n                newFoodChosen.push(element)\n            }\n        })\n        newFoodOptions.push(food)\n        this.setState({\n            foodOptions: newFoodOptions,\n            foodChosen: newFoodChosen\n        }, () => {\n            this.updateEventFoodList()\n            this.props.eventsStore.removeFoodFromList(this.props.event, food)\n        })\n\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'sweets') {\n            tabs.sweetsTab.push(content)\n        }\n        else if (element.category == 'Dinner') {\n            tabs.mainDishTab.push(content)\n        }\n        else if (element.category == 'appetiser') {\n            tabs.appetiserTab.push(content)\n        }\n        return tabs\n\n    }\n\n    render() {\n        const labels = ['Sweets', 'Main Dish', 'Appetiser']\n        const tabs = {\n            sweetsTab: [],\n            mainDishTab: [],\n            appetiserTab: []\n        }\n        let content = null\n        this.state.foodChosen.forEach(element => {\n            content = <EditFoodOption key={'chosenFood' + element.id} event={this.props.event} food={element} isChosen={true} moveToOptions={this.trasnferFoodFromChosen} updateFoodDetails={this.updateChosenFoodDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        this.state.foodOptions.forEach(element => {\n            content = <EditFoodOption key={'notChosenFood' + element.id} event={this.props.event} food={element} isChosen={false} moveToChosen={this.trasnferFoodFromOptions} updateFoodDetails={this.updateChosenFoodDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        const contents = [tabs.sweetsTab, tabs.mainDishTab, tabs.appetiserTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditFoodSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodOption.jsx",["170","171","172","173"],"\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditFoodOption extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            numOfServings: 0,\n            specialComment: '',\n            flavor: '',\n            price: 0,\n            isChosen: false,\n            food: undefined\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n        this.setState(\n            {\n                numOfServings: this.props.food.quantity,\n                specialComment: this.props.food.specialComments,\n                flavor: this.props.food.flavor,\n                price: this.props.food.price,\n                isChosen: this.props.isChosen,\n                food: this.props.food\n            }\n        )\n    }\n\n    handlePrice = (e) => {\n        let newFood = {...this.state.food}\n        newFood.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleSpecialComment = (e) => {\n        let newFood = {...this.state.food}\n        newFood.specialComments = e.target.value\n        this.setState({ specialComment: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleNumberOfServings = (e) => {\n        let newFood = {...this.state.food}\n        newFood.quantity = e.target.value\n        this.setState({ numOfServings: e.target.value, food: newFood }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleFlavor = (e) => {\n        let newFood = {...this.state.food}\n        newFood.flavor = e.target.value\n        this.setState({ flavor: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    removeFoodFromList = () => {\n        // this.props.moveToOptions(this.props.food)\n        this.props.moveToOptions(this.state.food)\n    }\n\n    addFoodToList = () => {\n        // this.props.moveToChosen(this.props.food)\n        this.props.moveToChosen(this.state.food)\n    }\n\n    // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n    render() {\n        // console.log(JSON.stringify(this.props.food))\n        let ingredients = null\n        let flavor = null\n        const food = this.props.food\n        if (food.ingredients != null && food.ingredients !='') {\n            ingredients = (<tr>\n                <td>Ingredients:</td>\n                <td>{food.ingredients}</td>\n            </tr>)\n        }\n        if (food.flavor != null && food.flavor!=\"\") {\n            flavor = (<tr>\n                <td>Flavor:</td>\n                <td><select value={this.state.flavor} onChange={this.handleFlavor}>\n                    <option value=\"Nutella\">Nutella</option>\n                    <option value=\"Strawberry\">Strawberry</option>\n                    <option value=\"Orange\">Orange</option>\n                    <option value=\"Lemon\">Lemon</option>\n                    <option value=\"Oreo\">Oreo</option>\n                </select></td>\n            </tr>)\n        }\n        let price = null\n        let actionBtn = null\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price per serving</td>\n                <td>{food.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removeFoodFromList}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addFoodToList}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price per serving</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={food.id}>\n            <tr>\n                <td class='food-details'>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{food.name}</td>\n                                <td></td>\n                            </tr>\n                            {ingredients}\n                            {flavor}\n                            <tr>\n                                <td>Serving quantity</td>\n                                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handleNumberOfServings} value={this.state.numOfServings} /></td>\n                            </tr>\n                            {price}\n                            <tr>\n                                <td>Special comments</td>\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </td>\n                <td class='food-image'>\n                    <img src={food.img}></img>\n                </td>\n                <td class='food-actions'>\n                    {actionBtn}\n                </td>\n            </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditFoodOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicSection.jsx",["174","175","176","177","178","179","180","181","182"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditMusicOption from './EditMusicOption'\n\nclass EditMusicSection extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            musicOptions: [],\n            MusicChosen: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('in cimponentDidMount of the EditFoodSection')\n        this.setState({ MusicChosen: this.props.event.musicList })\n        let finalMusicOptions = []\n\n        this.props.eventsStore.musicList.forEach(element => {\n            let item = this.props.event.musicList.filter(e => {\n                return e.id == element.id\n            })\n            if (item.length == 0) {\n                finalMusicOptions.push(element)\n            }\n        });\n        this.setState({ musicOptions: finalMusicOptions })\n\n    }\n\n    updateEventMusicList = () => {\n        let newEvent = { ...this.props.event }\n        newEvent.musicList = []\n        this.state.MusicChosen.forEach(element => newEvent.musicList.push(element))\n        this.props.updateEventState(newEvent)\n    }\n\n    updateChosenMusicDetails = (musicOption) => {\n        let newEvent = { ...this.props.event }\n        let index = newEvent.musicList.findIndex(element => { return element.id == musicOption.id })\n        // we are only interested in the chosen items\n        // generates a bug when trying to add a modified music option to list\n        if (index != -1) {\n            newEvent.musicList[index] = { ...musicOption }\n            this.props.updateEventState(newEvent)\n        }\n    }\n\n    trasnferMusicFromOptions = (musicOption) => {\n        console.log('In trasnferMusicFromOptions')\n        let newMusicOptions = []\n        this.state.musicOptions.forEach(element => {\n            if (element.id != musicOption.id) {\n                newMusicOptions.push(element)\n            }\n        })\n        let newMusicChosen = this.state.MusicChosen.map(element => { return element })\n        newMusicChosen.push(musicOption)\n        this.setState({\n            musicOptions: newMusicOptions,\n            MusicChosen: newMusicChosen\n        }, () => {\n            this.updateEventMusicList()\n            this.props.eventsStore.addMusicOptionToEvent(this.props.event, musicOption)\n        })\n\n\n    }\n\n    trasnferMusicFromChosen = (musicOption) => {\n        let newMusicOptions = this.state.musicOptions.map(element => { return element })\n        let newMusicChosen = []\n        this.state.MusicChosen.forEach(element => {\n            if (element.id != musicOption.id) {\n                newMusicChosen.push(element)\n            }\n        })\n        newMusicOptions.push(musicOption)\n        this.setState({\n            musicOptions: newMusicOptions,\n            MusicChosen: newMusicChosen\n        }, () => {\n            this.updateEventMusicList()\n            this.props.eventsStore.removeMusicOptionFromEvent(this.props.event, musicOption)\n        })\n\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'D.J') {\n            tabs.djTab.push(content)\n        }\n        else if (element.category == 'Singer') {\n            tabs.singerTab.push(content)\n        }\n        else if (element.category == 'Band') {\n            tabs.bandTab.push(content)\n        }\n        return tabs\n\n    }\n\n    render() {\n        const labels = ['D.J', 'Singer', 'Band']\n        const tabs = {\n            djTab: [],\n            singerTab: [],\n            bandTab: []\n        }\n        let content = null\n        this.state.MusicChosen.forEach(element => {\n            content = <EditMusicOption key={'chosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={true} moveToOptions={this.trasnferMusicFromChosen} updateMusicDetails={this.updateChosenMusicDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        this.state.musicOptions.forEach(element => {\n            content = <EditMusicOption key={'notChosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={false} moveToChosen={this.trasnferMusicFromOptions} updateMusicDetails={this.updateChosenMusicDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        const contents = [tabs.djTab, tabs.singerTab, tabs.bandTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicOption.jsx",["183","184","185"],"\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditMusicOption extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            specialComment: '',\n            isChosen: false,\n            musicOption: undefined\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n        this.setState(\n            {\n                specialComment: this.props.musicOption.specialComments,\n                isChosen: this.props.isChosen,\n                musicOption: this.props.musicOption\n            }\n        )\n    }\n\n    handleSpecialComment = (e) => {\n        let newMusicOption = {...this.state.musicOption}\n        newMusicOption.specialComments = e.target.value\n        this.setState({ specialComment: e.target.value }, this.props.updateMusicDetails(newMusicOption))\n    }\n\n    handlePrice = (e) => {\n        let newMusicOption = {...this.state.musicOption}\n        newMusicOption.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updateMusicDetails(newMusicOption))\n    }\n\n    removeMusicOptionFromList = () => {\n        this.props.moveToOptions(this.state.musicOption)\n    }\n\n    addMusicOptionToList = () => {\n        console.log('In addMusicOptionFromList')\n        this.props.moveToChosen(this.state.musicOption)\n    }\n\n    // id, category, name, phone, price, img, specialComments\n    render() {\n        if(this.state.musicOption == undefined){\n            return null\n        }\n        const musicOption = this.state.musicOption\n        let price = null\n        let actionBtn = null\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price</td>\n                <td>{musicOption.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removeMusicOptionFromList}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addMusicOptionToList}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={musicOption.id}>\n            <tr>\n                <td class='food-details'>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{musicOption.name}</td>\n                                <td></td>\n                            </tr>\n                            <tr>\n                                <td>Phone</td>\n                                <td>{musicOption.phone}</td>\n                            </tr>\n                            {price}\n                            <tr>\n                                <td>Special comments</td>\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </td>\n                <td class='food-image'>\n                    <img src={musicOption.img}></img>\n                </td>\n                <td class='food-actions'>\n                    {actionBtn}\n                </td>\n            </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceSection.jsx",["186","187","188","189","190","191","192"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditPlaceOption from './EditPlaceOption'\nimport { elementRoles } from 'aria-query';\n\nclass EditPlaceSection extends Component {\n    constructor() {\n        super()\n        this.state = {\n            placeOption: null\n        }\n    }\n\n    removePlace = () => {\n        this.setState({placeOption: null}, this.updatePlaceDetails(null))\n    }\n    addPlace = (placeOption) => {\n        this.setState({placeOption: placeOption}, this.updatePlaceDetails(placeOption))\n    }\n\n    updatePlaceDetails = (placeOption) => {\n        let newEvent = { ...this.props.event }\n        if(placeOption == null){\n            newEvent.place = null\n        }else{\n            newEvent.place = { ...placeOption }\n        }\n        this.props.updateEventState(newEvent)\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'private') {\n            tabs.privateTab.push(content)\n        }\n        else if (element.category == 'open space' || element.category == 'Park') {\n            tabs.openSpaceTab.push(content)\n        }\n        else if (element.category == 'hall') {\n            tabs.hallTab.push(content)\n        }\n        return tabs\n\n    }\n\n    componentDidMount(){\n        this.setState({placeOption: this.props.event.place})\n    }\n\n    render() {\n        const labels = ['Private', 'Open Space', 'Hall']\n        const tabs = {\n            privateTab: [],\n            openSpaceTab: [],\n            hallTab: []\n        }\n        let content = null\n        if (this.props.event.place != null && this.props.event.place != undefined) {\n            content = <EditPlaceOption key={'chosenPlace' + this.props.event.place.id} event={this.props.event} placeOption={this.props.event.place} isChosen={true} updatePlaceDetails={this.updatePlaceDetails} removePlace={this.removePlace} />\n            this.assignContentToTab(tabs, this.props.event.place, content)\n        }\n        this.props.eventsStore.places.forEach(element => {\n            if (this.props.event.place == null || element.id != this.props.event.place.id) {\n                content = <EditPlaceOption key={'notChosenPlace' + element.id} event={this.props.event} placeOption={element} isChosen={false} updatePlaceDetails={this.updatePlaceDetails} addPlace={this.addPlace}/>\n                this.assignContentToTab(tabs, element, content)\n            }\n        })\n        const contents = [tabs.privateTab, tabs.openSpaceTab, tabs.hallTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditPlaceSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceOption.jsx",["193","194","195","196"],"\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditMusicOption extends Component {\n    constructor() {\n        super()\n        this.state = {\n            specialComment: '',\n            isChosen: false,\n            placeOption: undefined,\n            name: '',\n            address: '',\n            phone: ''\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, phone, address, price, img, specialComments\n        this.setState(\n            {\n                specialComment: this.props.placeOption.specialComments,\n                isChosen: this.props.isChosen,\n                placeOption: this.props.placeOption,\n                name: this.props.placeOption.name,\n                address: this.props.placeOption.address,\n                phone: this.props.placeOption.phone\n            }\n        )\n    }\n\n    handlePrice = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n    handleSpecialComments = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.specialComments = e.target.value\n        this.setState({ specialComments: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n    handleName = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.name = e.target.value\n        this.setState({ name: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n    handleAddress = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.address = e.target.value\n        this.setState({ address: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n\n    handlePhone = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.phone = e.target.value\n        this.setState({ phone: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n\n    removePlace = () => {\n        this.props.removePlace()\n    }\n    \n    addPlace = () => {\n        this.props.addPlace(this.state.placeOption)\n    }\n\n    render() {\n        if (this.state.placeOption == undefined) {\n            return null\n        }\n        const placeOption = this.state.placeOption\n        let price = null\n        let actionBtn = null\n        let name = null\n        let address = null\n        let phone = null\n        if (placeOption.category == 'private') {\n            name = (<tr>\n                <td>Place</td>\n                <td><input onChange={this.handleName} value={this.state.name} /></td>\n            </tr>)\n            address = (<tr>\n                <td>Address</td>\n                <td><input onChange={this.handleAddress} value={this.state.address} /></td>\n            </tr>)\n            phone = (<tr>\n                <td>Phone</td>\n                <td><input onChange={this.handlePhone} value={this.state.phone} /></td>\n            </tr>)\n        } else {\n            name = (<tr>\n                <td>Address</td>\n                <td>{placeOption.name}</td>\n            </tr>)\n            address = (<tr>\n                <td>Address</td>\n                <td>{placeOption.address}</td>\n            </tr>)\n            address = (<tr>\n                <td>Phone</td>\n                <td>{placeOption.phone}</td>\n            </tr>)\n\n        }\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price</td>\n                <td>{placeOption.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removePlace}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addPlace}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={placeOption.id}>\n                <tr>\n                    <td class='food-details'>\n                        <table>\n                            <tbody>\n                                {name}\n                                {address}\n                                {phone}\n                                {price}\n                                <tr>\n                                    <td>Special comments</td>\n                                    <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComments}></textarea></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </td>\n                    <td class='food-image'>\n                        <img src={placeOption.img}></img>\n                    </td>\n                    <td class='food-actions'>\n                        {actionBtn}\n                    </td>\n                </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFlowersSection.jsx",["197","198","199","200"],"\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass EditFlowersSection extends Component {\n    constructor() {\n        super()\n        this.state = {\n            savedRosesData: null,\n            flowersType: '',\n            flowersOnTable: false,\n            flowersOnTablePrice: 0,\n            flowersOnEntryDoor: false,\n            flowersOnEntryDoorPrice: 0,\n            NumberOfFlowersStands: 0,\n            flowersStandsPRice: 0\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.event.flowers.category)\n        if (this.props.event.flowers != null && this.props.event.flowers != undefined) {\n            this.setState({\n                savedRosesData: {...this.props.event.flowers},\n                flowersType: this.props.event.flowers.category,\n                flowersOnTable: this.props.event.flowers.table.onTable,\n                flowersOnTablePrice: this.props.event.flowers.table.price,\n                flowersOnEntryDoor: this.props.event.flowers.entry.onEntry,\n                flowersOnEntryDoorPrice: this.props.event.flowers.entry.price,\n                NumberOfFlowersStands: this.props.event.flowers.stands.numOfStands,\n                flowersStandsPRice: this.props.event.flowers.stands.price\n            })\n        }\n    }\n\n    handleFlowersType = (e) => {\n        this.setState({ flowersType: e.target.value}, ()=> {\n            let newFlowersDetails\n            if (e.target.value == this.state.savedRosesData.category){\n                newFlowersDetails = {...this.state.savedRosesData}\n                this.setState({\n                    flowersOnTablePrice: this.state.savedRosesData.table.price,\n                    flowersOnEntryDoorPrice: this.state.savedRosesData.entry.price,\n                    flowersStandsPRice: this.state.savedRosesData.stands.price\n                }, this.updateFlowersDetails(newFlowersDetails))\n            }else{\n                const element = this.props.eventsStore.flowers.filter(element => { return e.target.value == element.category})\n                if(element.length!=0){\n                    newFlowersDetails = {\n                        //'Rose', {onTable: true, price: 50}, {onEntry: true, price: 1500}, {numOfStands: 6, price: 150}\n                        category: this.state.flowersType,\n                        table: {\n                            onTable: this.state.flowersOnTable,\n                            price: this.state.flowersOnTablePrice\n                        },\n                        entry: {\n                            onEntry: this.state.flowersOnEntryDoor,\n                            price: this.state.flowersOnEntryDoorPrice\n                        },\n                        stands: {\n                            numOfStands: this.state.NumberOfFlowersStands,\n                            price: this.state.flowersStandsPRice\n                        }\n                    }\n                    this.setState({\n                        flowersOnTablePrice: element[0].onTablePrice,\n                        flowersOnEntryDoorPrice: element[0].onEntryPrice,\n                        flowersStandsPRice: element[0].standPrice\n                    }, this.updateFlowersDetails(newFlowersDetails))\n                }\n                }\n            })\n        \n    }\n\n    updateFlowersDetails = (flowersDetails) => {\n        let newEvent = { ...this.props.event }\n        newEvent.flowers = { ...flowersDetails }\n        this.props.updateEventState(newEvent)\n    }\n\n    handleOnTable= (e) => {\n        const newFlowersDetails = {\n            category: this.state.flowersType,\n            table: {\n                onTable: !(this.state.flowersOnTable),\n                price: this.state.flowersOnTablePrice\n            },\n            entry: {\n                onEntry: this.state.flowersOnEntryDoor,\n                price: this.state.flowersOnEntryDoorPrice\n            },\n            stands: {\n                numOfStands: this.state.NumberOfFlowersStands,\n                price: this.state.flowersStandsPRice\n            }\n        }\n        this.setState({ flowersOnTable: !this.state.flowersOnTable }, this.updateFlowersDetails(newFlowersDetails))\n    }\n    handleOnEntry= (e) => {\n        const newFlowersDetails = {\n            category: this.state.flowersType,\n            table: {\n                onTable: this.state.flowersOnTable,\n                price: this.state.flowersOnTablePrice\n            },\n            entry: {\n                onEntry: !this.state.flowersOnEntryDoor,\n                price: this.state.flowersOnEntryDoorPrice\n            },\n            stands: {\n                numOfStands: this.state.NumberOfFlowersStands,\n                price: this.state.flowersStandsPRice\n            }\n        }\n        this.setState({ flowersOnEntryDoor: !this.state.flowersOnEntryDoor }, this.updateFlowersDetails(newFlowersDetails))\n    }\n\n    handleStandsNumber = (e) =>{\n        const newFlowersDetails = {\n            category: this.state.flowersType,\n            table: {\n                onTable: this.state.flowersOnTable,\n                price: this.state.flowersOnTablePrice\n            },\n            entry: {\n                onEntry: !this.state.flowersOnEntryDoor,\n                price: this.state.flowersOnEntryDoorPrice\n            },\n            stands: {\n                numOfStands: e.target.value,\n                price: this.state.flowersStandsPRice\n            }\n        }\n        this.setState({NumberOfFlowersStands: e.target.value}, this.updateFlowersDetails(newFlowersDetails))\n    }\n\n    render() {\n        return (\n            <table className='flowersSection'>\n                <tbody>\n                    <tr>\n                        <td>Main flowers type in decoration</td>\n                        <td><select value={this.state.flowersType} onChange={this.handleFlowersType}>\n                            <option value=\"Tulip\">Tulip</option>\n                            <option value=\"Rose\">Rose</option>\n                            {/* <option value=\"ANTHURIUM\">ANTHURIUM</option>\n                                <option value=\"HYACINTH\">HYACINTH</option>\n                                <option value=\"RANUNCULUS\">RANUNCULUS</option> */}\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>Flowers on table</td>\n                        <td><FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.flowersOnTable}\n                                    onChange={this.handleOnTable}\n                                    name=\"checkedOnTable\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Primary\"\n                        /></td>\n                        <td>price/table</td>\n                        <td>{this.state.flowersOnTablePrice}₪</td>\n                    </tr>\n                    <tr>\n                        <td>Flowers on entry door</td>\n                        <td><FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.flowersOnEntryDoor}\n                                    onChange={this.handleOnEntry}\n                                    name=\"checkedOnEntry\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Primary\"\n                        /></td>\n                        <td>price</td>\n                        <td>{this.state.flowersOnEntryDoorPrice}₪</td>\n                    </tr>\n                    <tr>\n                        <td>Number of flowers stands</td>\n                        <td><TextField InputLabelProps={{ shrink: true}} type=\"number\" onChange={this.handleStandsNumber} value={this.state.NumberOfFlowersStands} /></td>\n                        <td>price/stand</td>\n                        <td>{this.state.flowersStandsPRice}₪</td>\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(EditFlowersSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/MarketplaceStore.js",["201","202","203"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/AssignmentRequest.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/MarketPlace.jsx",["204","205","206","207"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EventCard.jsx",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":118,"column":26,"nodeType":"214","messageId":"215","endLine":118,"endColumn":28},{"ruleId":"212","severity":1,"message":"213","line":134,"column":88,"nodeType":"214","messageId":"215","endLine":134,"endColumn":90},{"ruleId":"212","severity":1,"message":"213","line":182,"column":80,"nodeType":"214","messageId":"215","endLine":182,"endColumn":82},{"ruleId":"212","severity":1,"message":"213","line":183,"column":96,"nodeType":"214","messageId":"215","endLine":183,"endColumn":98},{"ruleId":"212","severity":1,"message":"213","line":188,"column":75,"nodeType":"214","messageId":"215","endLine":188,"endColumn":77},{"ruleId":"212","severity":1,"message":"213","line":193,"column":75,"nodeType":"214","messageId":"215","endLine":193,"endColumn":77},{"ruleId":"212","severity":1,"message":"213","line":198,"column":80,"nodeType":"214","messageId":"215","endLine":198,"endColumn":82},{"ruleId":"212","severity":1,"message":"213","line":199,"column":102,"nodeType":"214","messageId":"215","endLine":199,"endColumn":104},{"ruleId":"212","severity":1,"message":"213","line":206,"column":73,"nodeType":"214","messageId":"215","endLine":206,"endColumn":75},{"ruleId":"212","severity":1,"message":"213","line":207,"column":76,"nodeType":"214","messageId":"215","endLine":207,"endColumn":78},{"ruleId":"212","severity":1,"message":"213","line":209,"column":74,"nodeType":"214","messageId":"215","endLine":209,"endColumn":76},{"ruleId":"212","severity":1,"message":"213","line":212,"column":74,"nodeType":"214","messageId":"215","endLine":212,"endColumn":76},{"ruleId":"212","severity":1,"message":"213","line":39,"column":29,"nodeType":"214","messageId":"215","endLine":39,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":18,"column":36,"nodeType":"214","messageId":"215","endLine":18,"endColumn":38},{"ruleId":"212","severity":1,"message":"216","line":31,"column":30,"nodeType":"214","messageId":"215","endLine":31,"endColumn":32},{"ruleId":"212","severity":1,"message":"216","line":38,"column":30,"nodeType":"214","messageId":"215","endLine":38,"endColumn":32},{"ruleId":"217","severity":1,"message":"218","line":40,"column":13,"nodeType":"219","endLine":40,"endColumn":74},{"ruleId":"217","severity":1,"message":"218","line":64,"column":60,"nodeType":"219","endLine":64,"endColumn":100},{"ruleId":"220","severity":1,"message":"221","line":64,"column":7,"nodeType":"222","messageId":"223","endLine":64,"endColumn":15},{"ruleId":"220","severity":1,"message":"224","line":67,"column":7,"nodeType":"222","messageId":"223","endLine":67,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":24,"column":29,"nodeType":"214","messageId":"215","endLine":24,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":26,"column":29,"nodeType":"214","messageId":"215","endLine":26,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":43,"column":76,"nodeType":"214","messageId":"215","endLine":43,"endColumn":78},{"ruleId":"212","severity":1,"message":"216","line":46,"column":19,"nodeType":"214","messageId":"215","endLine":46,"endColumn":21},{"ruleId":"212","severity":1,"message":"216","line":55,"column":28,"nodeType":"214","messageId":"215","endLine":55,"endColumn":30},{"ruleId":"212","severity":1,"message":"216","line":76,"column":28,"nodeType":"214","messageId":"215","endLine":76,"endColumn":30},{"ruleId":"212","severity":1,"message":"213","line":92,"column":30,"nodeType":"214","messageId":"215","endLine":92,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":95,"column":35,"nodeType":"214","messageId":"215","endLine":95,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":98,"column":35,"nodeType":"214","messageId":"215","endLine":98,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":76,"column":58,"nodeType":"214","messageId":"215","endLine":76,"endColumn":60},{"ruleId":"212","severity":1,"message":"216","line":82,"column":47,"nodeType":"214","messageId":"215","endLine":82,"endColumn":49},{"ruleId":"212","severity":1,"message":"213","line":97,"column":45,"nodeType":"214","messageId":"215","endLine":97,"endColumn":47},{"ruleId":"217","severity":1,"message":"218","line":138,"column":21,"nodeType":"219","endLine":138,"endColumn":41},{"ruleId":"212","severity":1,"message":"213","line":23,"column":29,"nodeType":"214","messageId":"215","endLine":23,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":25,"column":29,"nodeType":"214","messageId":"215","endLine":25,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":42,"column":81,"nodeType":"214","messageId":"215","endLine":42,"endColumn":83},{"ruleId":"212","severity":1,"message":"216","line":45,"column":19,"nodeType":"214","messageId":"215","endLine":45,"endColumn":21},{"ruleId":"212","severity":1,"message":"216","line":55,"column":28,"nodeType":"214","messageId":"215","endLine":55,"endColumn":30},{"ruleId":"212","severity":1,"message":"216","line":76,"column":28,"nodeType":"214","messageId":"215","endLine":76,"endColumn":30},{"ruleId":"212","severity":1,"message":"213","line":92,"column":30,"nodeType":"214","messageId":"215","endLine":92,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":95,"column":35,"nodeType":"214","messageId":"215","endLine":95,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":98,"column":35,"nodeType":"214","messageId":"215","endLine":98,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":53,"column":35,"nodeType":"214","messageId":"215","endLine":53,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":60,"column":45,"nodeType":"214","messageId":"215","endLine":60,"endColumn":47},{"ruleId":"217","severity":1,"message":"218","line":99,"column":21,"nodeType":"219","endLine":99,"endColumn":48},{"ruleId":"220","severity":1,"message":"225","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":22},{"ruleId":"212","severity":1,"message":"213","line":33,"column":30,"nodeType":"214","messageId":"215","endLine":33,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":36,"column":35,"nodeType":"214","messageId":"215","endLine":36,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":36,"column":71,"nodeType":"214","messageId":"215","endLine":36,"endColumn":73},{"ruleId":"212","severity":1,"message":"213","line":39,"column":35,"nodeType":"214","messageId":"215","endLine":39,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":58,"column":70,"nodeType":"214","messageId":"215","endLine":58,"endColumn":72},{"ruleId":"212","severity":1,"message":"216","line":63,"column":62,"nodeType":"214","messageId":"215","endLine":63,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":70,"column":36,"nodeType":"214","messageId":"215","endLine":70,"endColumn":38},{"ruleId":"212","severity":1,"message":"213","line":79,"column":34,"nodeType":"214","messageId":"215","endLine":79,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":108,"column":45,"nodeType":"214","messageId":"215","endLine":108,"endColumn":47},{"ruleId":"217","severity":1,"message":"218","line":142,"column":25,"nodeType":"219","endLine":142,"endColumn":52},{"ruleId":"212","severity":1,"message":"216","line":26,"column":74,"nodeType":"214","messageId":"215","endLine":26,"endColumn":76},{"ruleId":"212","severity":1,"message":"213","line":43,"column":32,"nodeType":"214","messageId":"215","endLine":43,"endColumn":34},{"ruleId":"212","severity":1,"message":"213","line":51,"column":106,"nodeType":"214","messageId":"215","endLine":51,"endColumn":108},{"ruleId":"212","severity":1,"message":"216","line":52,"column":34,"nodeType":"214","messageId":"215","endLine":52,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":74,"column":81,"nodeType":"214","messageId":"215","endLine":74,"endColumn":83},{"ruleId":"212","severity":1,"message":"216","line":78,"column":24,"nodeType":"214","messageId":"215","endLine":78,"endColumn":26},{"ruleId":"220","severity":1,"message":"226","line":81,"column":23,"nodeType":"222","messageId":"223","endLine":81,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":41,"column":43,"nodeType":"214","messageId":"215","endLine":41,"endColumn":45},{"ruleId":"212","severity":1,"message":"213","line":44,"column":48,"nodeType":"214","messageId":"215","endLine":44,"endColumn":50},{"ruleId":"212","severity":1,"message":"213","line":44,"column":121,"nodeType":"214","messageId":"215","endLine":44,"endColumn":123},{"ruleId":"212","severity":1,"message":"213","line":44,"column":239,"nodeType":"214","messageId":"215","endLine":44,"endColumn":241},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'tabIndex' is assigned a value but never used.","Identifier","unusedVar","'contentIndex' is assigned a value but never used.","'elementRoles' is defined but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]