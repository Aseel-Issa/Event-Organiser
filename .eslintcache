[{"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\index.js":"1","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\reportWebVitals.js":"2","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\App.js":"3","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\EventStore.js":"4","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\MarketplaceStore.js":"5","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Client.js":"6","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\organiser.js":"7","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Theme.js":"8","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Flowers.js":"9","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Event.js":"10","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Food.js":"11","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Music.js":"12","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Place.js":"13","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\AssignmentRequest.js":"14","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\event.js":"15","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\MarketPlace.jsx":"16","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EventsPage.jsx":"17","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditEvent.jsx":"18","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\Details.js":"19","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\theme.js":"20","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\music.js":"21","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\place.js":"22","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\flowers.js":"23","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\food.js":"24","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EventCard.jsx":"25","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditDetails.jsx":"26","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditThemes.jsx":"27","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditMusicSection.jsx":"28","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditFoodSection.jsx":"29","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditFlowersSection.jsx":"30","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditPlaceSection.jsx":"31","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\foodItem.js":"32","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\tabs.js":"33","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\TimePicker.jsx":"34","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\DatePicker.jsx":"35","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\Theme.jsx":"36","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditMusicOption.jsx":"37","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\FullWidthTabs.jsx":"38","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditFoodOption.jsx":"39","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditPlaceOption.jsx":"40","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\tab.js":"41","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\ThemePopup.jsx":"42"},{"size":804,"mtime":1611650679166,"results":"43","hashOfConfig":"44"},{"size":375,"mtime":1610993492571,"results":"45","hashOfConfig":"44"},{"size":1522,"mtime":1611650679126,"results":"46","hashOfConfig":"44"},{"size":12893,"mtime":1611664096172,"results":"47","hashOfConfig":"44"},{"size":6602,"mtime":1611655167956,"results":"48","hashOfConfig":"44"},{"size":477,"mtime":1611664214808,"results":"49","hashOfConfig":"44"},{"size":396,"mtime":1610993952969,"results":"50","hashOfConfig":"44"},{"size":562,"mtime":1611650679138,"results":"51","hashOfConfig":"44"},{"size":540,"mtime":1611655328087,"results":"52","hashOfConfig":"44"},{"size":1344,"mtime":1611650679128,"results":"53","hashOfConfig":"44"},{"size":884,"mtime":1611650679132,"results":"54","hashOfConfig":"44"},{"size":712,"mtime":1611650679135,"results":"55","hashOfConfig":"44"},{"size":785,"mtime":1611650679136,"results":"56","hashOfConfig":"44"},{"size":267,"mtime":1611650679127,"results":"57","hashOfConfig":"44"},{"size":1438,"mtime":1611223344028,"results":"58","hashOfConfig":"44"},{"size":2557,"mtime":1611655445047,"results":"59","hashOfConfig":"44"},{"size":2013,"mtime":1611650679147,"results":"60","hashOfConfig":"44"},{"size":4984,"mtime":1611650679141,"results":"61","hashOfConfig":"44"},{"size":1196,"mtime":1611172893120,"results":"62","hashOfConfig":"44"},{"size":725,"mtime":1611188330900,"results":"63","hashOfConfig":"44"},{"size":1154,"mtime":1611188186857,"results":"64","hashOfConfig":"44"},{"size":1356,"mtime":1611188147384,"results":"65","hashOfConfig":"44"},{"size":1256,"mtime":1611572862665,"results":"66","hashOfConfig":"44"},{"size":1286,"mtime":1611182575497,"results":"67","hashOfConfig":"44"},{"size":3208,"mtime":1611650679147,"results":"68","hashOfConfig":"44"},{"size":6394,"mtime":1611650679139,"results":"69","hashOfConfig":"44"},{"size":2304,"mtime":1611650679146,"results":"70","hashOfConfig":"44"},{"size":4765,"mtime":1611650679144,"results":"71","hashOfConfig":"44"},{"size":4506,"mtime":1611650679143,"results":"72","hashOfConfig":"44"},{"size":8612,"mtime":1611650679141,"results":"73","hashOfConfig":"44"},{"size":2832,"mtime":1611650679145,"results":"74","hashOfConfig":"44"},{"size":1114,"mtime":1611169616694,"results":"75","hashOfConfig":"44"},{"size":1385,"mtime":1611167292249,"results":"76","hashOfConfig":"44"},{"size":1105,"mtime":1611650679163,"results":"77","hashOfConfig":"44"},{"size":864,"mtime":1611650679139,"results":"78","hashOfConfig":"44"},{"size":1234,"mtime":1611650679150,"results":"79","hashOfConfig":"44"},{"size":3911,"mtime":1611650679143,"results":"80","hashOfConfig":"44"},{"size":2543,"mtime":1611650679149,"results":"81","hashOfConfig":"44"},{"size":5567,"mtime":1611650679142,"results":"82","hashOfConfig":"44"},{"size":5559,"mtime":1611650679145,"results":"83","hashOfConfig":"44"},{"size":767,"mtime":1611167171549,"results":"84","hashOfConfig":"44"},{"size":2401,"mtime":1611650679150,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1tup7uu",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"88"},"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\index.js",[],["193","194"],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\reportWebVitals.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\App.js",["195","196"],"import './App.css';\r\nimport { observer, inject } from 'mobx-react'\r\nimport { BrowserRouter as Router, Route, Link, HashRouter } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport EditEvent from './components/EditEvent';\r\nimport Event from './components/viewEventComponents/event'\r\nimport MarketPlace from './components/MarketPlace';\r\nimport EventsPage from './components/EventsPage';\r\nimport { createBrowserHistory as history} from 'history';\r\n// import { hashHistory } from 'react-router';\r\n\r\nexport class App extends Component {\r\n\r\n  async componentDidMount() {\r\n    await this.props.eventsStore.loadDummyDataToStore()\r\n  }\r\n\r\n  render() {\r\n    const editEventPage = this.props.eventsStore.events.map(element => {\r\n      return <EditEvent event={element} />\r\n    })\r\n    return (\r\n      <div className='app'>\r\n      <HashRouter>\r\n        <Router >\r\n          <Link to=\"/editEvent\">EditEventPage</Link>\r\n          &nbsp;&nbsp;\r\n          <Link to=\"/marketplace\">marketplace</Link>\r\n          &nbsp;&nbsp;\r\n          <Link to=\"/events\">EventsPage</Link>\r\n          &nbsp;&nbsp;\r\n            <Route path=\"/editEvent\" component={() => editEventPage} />\r\n            <Route path=\"/createEvent\" component={() => <EditEvent/>} />\r\n            <Route path=\"/marketplace\" component={() => <MarketPlace/>} />\r\n            <Route path=\"/events\" component={() => <EventsPage/>} />\r\n        </Router>\r\n        </HashRouter>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default inject(\"eventsStore\")(observer(App));","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\EventStore.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\MarketplaceStore.js",["217","218","219","220","221","222","223","224","225","226","227"],"\r\nimport { observable, makeObservable, action } from 'mobx'\r\nimport axios from 'axios'\r\nimport Event from './Event'\r\nimport Client from './Client';\r\nimport Theme from './Theme';\r\nimport Food from './Food';\r\nimport Flowers from './Flowers';\r\nimport Music from './Music';\r\nimport Place from './Place';\r\nimport Organiser from './organiser';\r\nimport AssignmentRequest from './AssignmentRequest';\r\n\r\nclass MarketplaceStore {\r\n    constructor() {\r\n        this.events = []\r\n        this.userType = ''\r\n        this.organiser = null\r\n\r\n        makeObservable(this, {\r\n            events: observable,\r\n            userType: observable,\r\n            organiser: observable,\r\n            assignEventRequest: action\r\n        })\r\n    }\r\n\r\n   async getOrganiser(){\r\n        const results = await axios.get(`http://localhost:2011/user/600ef9e9afabd51f0368227e`)\r\n        const user = results.data[0]\r\n        this.userType = 'organiser'\r\n        //id, name, phone, email\r\n        const organiser = new Organiser(user._id, user.name, user.phone, user.email)\r\n        this.organiser = organiser\r\n        return organiser\r\n    }\r\n\r\n    // This function should get all the events of the logged in user\r\n    async loadAllPendingEvents(){\r\n        let results\r\n        if(this.userType == 'client'){\r\n            // results = await axios.get(`http://localhost:2011/events/client/${userId}`)\r\n        }else{\r\n            results = await axios.get(`http://localhost:2011/events/pending`)\r\n        }\r\n        // console.log('Clients events '+JSON.stringify(results.data))\r\n        this.events = results.data.map(element => {\r\n            element.id= element._id\r\n            return new Event(element._id, element.client, element.status, element.title, element.occasion, element.date, element.startHour, element.endHour, element.numOfGuests, element.theme, element.food, element.flowers, element.musicList, element.place, element.organiser, element.assignmentRequests)\r\n        })\r\n    }\r\n\r\n    async loadMarketplaceDummyData() {\r\n\r\n        await this.getOrganiser()\r\n        await this.loadAllPendingEvents()\r\n        // this.events = []\r\n        // this.userType = 'organiser'\r\n\r\n        // const client = new Client('1', 'Johne Smith', '050-123-456', 'johnesmith@gmail.com', 'Jerusalem, Old city, 1234')\r\n\r\n        // const images1 = []\r\n        // images1.push('/images/cinderella1.jpeg')\r\n        // images1.push('/images/cinderella2.jpg')\r\n        // images1.push('/images/cinderella3.jpg')\r\n        // images1.push('/images/cinderella4.jpg')\r\n        // const theme1 = new Theme('1', 'Cinderella', true, '/images/cinderella1.jpeg', images1)\r\n\r\n\r\n        // const food = []\r\n        // const meal1 = new Food('1', 'Dinner', 'Sea Food', 'Shrimps, Calamari, Noodles and Tomato sauce', 100, 120, '/images/sea-food.jpg', 'Add dill to the recipe', true, null)\r\n        // food.push(meal1)\r\n        // const meal2 = new Food('2', 'Dinner', 'Barbecue', 'Dead meat, Chicken', 100, 85, '/images/barbecue.jpg', null, true, null)\r\n        // food.push(meal2)\r\n\r\n        // const flower1 = new Flowers('Rose', { onTable: true, price: 50 }, { onEntry: true, price: 1500 }, { numOfStands: 6, price: 150 })\r\n\r\n        // const musicList = []\r\n        // const music1 = new Music('1', 'D.J', 'Toam Sawyer', '052-123-1234', 2000, '/images/undefindMale.png', 'Please include these songs:1 .... 2 .... 3 ....', true)\r\n        // musicList.push(music1)\r\n        // const music2 = new Music('2', 'D.J', 'Sara Anderson', '052-345-6789', 2200, '/images/undefinedFemale.png', null, false)\r\n        // musicList.push(music2)\r\n\r\n        // // const places = []\r\n        // // id, category, name, phone, address, price, img, specialComments, isChosen\r\n        // const place1 = new Place('1', 'open space', 'Bell Park', '052-123-1234', 'Jerusalem, Tal Piot', 15000, '/images/bellPark.jpg', null, true)\r\n\r\n        // const assignmentRequests = []\r\n        // this.organiser = new Organiser('1', 'Aseel Issa', '054-123-1234', 'fake-email@gmail.com')\r\n        // const event = new Event('1', client, 'Pending', `Johne & Mary's Wedding`, 'Wedding', '2021-04-01', '20:00', '00:00', 100, theme1, food, flower1, musicList, place1, null, assignmentRequests)\r\n        // this.events.push(event)\r\n\r\n        // const event2 = new Event('2', client, 'Pending', `Amanda's birthday party`, 'birthday', '2021-04-01', '20:00', '00:00', 30, theme1, food, flower1, musicList, place1, null, assignmentRequests)\r\n        // this.events.push(event2)\r\n\r\n        // const event3 = new Event('3', client, 'Pending', `George's baptism`, 'baptism', '2021-02-01', '09:00', '10:00', 30, theme1, food, flower1, null, place1, null, assignmentRequests)\r\n        // this.events.push(event3)\r\n    }\r\n\r\n    async assignEventRequest(event) {\r\n        const assignmentReq = new AssignmentRequest(this.organiser)\r\n        const eventIndex = this.events.findIndex(element => { return element.id == event.id })\r\n        const localEvent = { ...this.events[eventIndex] }\r\n        localEvent.assignmentRequests.push(assignmentReq)\r\n        console.log(eventIndex)\r\n        if (eventIndex != -1) {\r\n            // update event in database too\r\n            const newEvent = {...event}\r\n        newEvent.client = event.client.id\r\n        newEvent.theme= event.theme? event.theme.id : null\r\n        newEvent.food = event.food.map(element => {\r\n            return {id: element.id, price: element.price}\r\n        })\r\n        newEvent.musicList = event.musicList.map(element => {\r\n            return {id: element.id, price: element.price}\r\n        })\r\n        const flowersId= this.flowers.find(element => {\r\n            return element.category == event.flowers.category\r\n        })\r\n        newEvent.flowers = {\r\n            id: flowersId,\r\n            table: event.flowers.table,\r\n            entry: event.flowers.entry,\r\n            stands: event.flowers.stands\r\n        }\r\n        newEvent.place = event.place.id\r\n        newEvent.organiser = event.organizer? event.organizer.id: null\r\n        newEvent.assignmentRequests.push(this.organiser.id)\r\n            try {\r\n                const result = await axios.put(`http://localhost:2011/event`, newEvent)\r\n                this.events[eventIndex].assignmentRequests.push(assignmentReq)\r\n                console.log('Event: ' + JSON.stringify(this.events[eventIndex]))\r\n                return true\r\n            } catch (e) {\r\n                console.log('Changes was not save to database')\r\n                console.log(e)\r\n            } finally {\r\n                return false\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default MarketplaceStore","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Client.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\organiser.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Theme.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Flowers.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Event.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Food.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Music.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\Place.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\classes\\AssignmentRequest.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\event.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\MarketPlace.jsx",["228","229","230","231"],"import React, { Component } from \"react\";\r\nimport { observer, inject } from 'mobx-react'\r\nimport EventCard from \"./EventCard\";\r\n\r\n\r\nclass MarketPlace extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            occasionFilter: 'All',\r\n            searchStr: '',\r\n            cardsToShow: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.marketplaceStore.loadMarketplaceDummyData()\r\n        this.setState({\r\n            cardsToShow:  this.props.marketplaceStore.events\r\n        })\r\n    }\r\n\r\n    assignEventRequest = (event) => {\r\n        this.props.marketplaceStore.assignEventRequest(event)\r\n    }\r\n\r\n    filterByOccasion = (e) => {\r\n        this.setState({\r\n            occasionFilter: e.target.value})\r\n\r\n    }\r\n\r\n    search = (e) => {\r\n        this.setState({\r\n            searchStr: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cards = this.state.cardsToShow.map(element=> {\r\n            if(element == null || element == undefined){\r\n                return null\r\n            }\r\n            if((element.occasion.toLowerCase() == this.state.occasionFilter.toLowerCase() ||  this.state.occasionFilter == 'All')&& (element.client.address.toLowerCase().includes(this.state.searchStr.toLowerCase()) || this.state.searchStr=='')){\r\n                return <div className='card' key={'div-' + element.id}><EventCard display={true} key={element.id} event={element} assignEventRequest={this.assignEventRequest} userType={this.props.marketplaceStore.userType} showAssignmentBtn={true}/></div>\r\n            }\r\n            else{\r\n                return null\r\n            }\r\n        })\r\n        return (\r\n            <div className='pageContent'>\r\n            <label>Occasion</label> &nbsp;&nbsp;\r\n                <select value={this.state.occasion} onChange={this.filterByOccasion}>\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"Wedding\">Wedding</option>\r\n                    <option value=\"Birthday\">Birthday</option>\r\n                    <option value=\"Graduation\">Graduation</option>\r\n                    <option value=\"Engagement\">Engagement</option>\r\n                    <option value=\"baptism\">baptism</option>\r\n                </select>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <input placeholder='search on address' value={this.state.searchStr} onChange={this.search}></input>\r\n                <hr></hr>\r\n                {cards}\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default inject(\"marketplaceStore\")(observer(MarketPlace))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EventsPage.jsx",["232","233","234","235","236"],"import React, { Component } from \"react\";\r\nimport { observer, inject } from 'mobx-react'\r\nimport EventCard from \"./EventCard\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Event from '../classes/Event'\r\nimport Flowers from \"../classes/Flowers\";\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\n\r\nclass EventsPage extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            occasionFilter: 'All',\r\n            searchStr: '',\r\n            cardsToShow: [],\r\n            createBtn: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.eventsStore.loadDummyDataToStore()   // data is already loaded in the app.js file\r\n        if (this.props.eventsStore.userType == 'client') {\r\n            console.log('create button should appear')\r\n            this.setState({\r\n                cardsToShow: this.props.eventsStore.events,\r\n                createBtn: <Button onClick={this.createNewEvent}>Create</Button>\r\n            })\r\n        } else {\r\n            console.log('create button should not appear')\r\n            this.setState({\r\n                cardsToShow: this.props.eventsStore.events\r\n            })\r\n        }\r\n    }\r\n\r\n    createNewEvent = () => {\r\n        // route to EditEvent component\r\n        this.props.history.push({\r\n            pathname: '/createEvent'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const cards = this.state.cardsToShow.map(element => {\r\n            if (element == null || element == undefined) {\r\n                return null\r\n            }\r\n            return <div className='card' key={'div-' + element.id}><EventCard display={true} key={element.id} event={element} userType={this.props.eventsStore.userType} showAssignmentBtn={false} /></div>\r\n        })\r\n        return (\r\n            <div class='pageContent'>\r\n                {this.state.createBtn}\r\n                <hr></hr>\r\n                {cards}\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default withRouter(inject(\"eventsStore\")(observer(EventsPage)))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditEvent.jsx",["237","238","239"],"import React, { Component } from 'react'\r\nimport { observer, inject } from 'mobx-react'\r\nimport EditInfo from './EditDetails'\r\nimport EditThemes from './EditThemes';\r\nimport EditFoodSection from './EditFoodSection'\r\nimport EditMusicSection from './EditMusicSection'\r\nimport EditPlaceSection from './EditPlaceSection'\r\nimport EditFlowersSection from './EditFlowersSection'\r\nimport { Button } from '@material-ui/core';\r\nimport Flowers from '../classes/Flowers'\r\nimport Event from '../classes/Event'\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\nclass EditEvent extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            event: undefined,\r\n            saveUpdateBtn: null,\r\n            cancelBtn: null,\r\n            createThemeList: true,\r\n            createThemeList2: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.event == undefined) {\r\n            console.log('create instance')\r\n            const flowersType = this.props.eventsStore.flowers[0]\r\n            const fakeId = Math.floor(Math.random() * 1000000);\r\n            const emptyEvent = new Event(fakeId.toString(), this.props.eventsStore.client, 'Pending', '', 'Wedding', '', '', '', 0, this.props.eventsStore.themes[0], [], new Flowers(flowersType.id, flowersType.category, { onTable: false, price: flowersType.onTablePrice }, { onEntry: false, price: flowersType.onEntryPrice }, { numOfStands: 0, price: flowersType.standPrice }), [], [], null, [])\r\n            this.props.eventsStore.events.push(emptyEvent)\r\n            console.log('emptyEvent: ' + JSON.stringify(emptyEvent))\r\n            this.setState({\r\n                event: emptyEvent,\r\n                saveUpdateBtn: <Button className='tabBtn' onClick={this.saveEvent}>Save</Button>,\r\n                cancelBtn: <Button className='tabBtn' onClick={this.cancelEditingRedirectToEventsPage}>Cancel</Button>\r\n            })\r\n        } else {\r\n            console.log('update instance')\r\n            this.setState({\r\n                event: this.props.event,\r\n                saveUpdateBtn: <Button className='tabBtn' onClick={this.updateEvent}>Update</Button>,\r\n                cancelBtn: <Button className='tabBtn' onClick={this.cancelEditingRedirectToViewPage}>Cancel</Button>\r\n            })\r\n        }\r\n        console.log('this.props.eventsStore.themes')\r\n        console.log('****'+JSON.stringify(this.props.eventsStore.themes))\r\n        // this.setState({ updateThemeList: this.props.eventsStore.themes })\r\n    }\r\n\r\n    updateThemeList = () => {\r\n        this.setState({ createThemeList: !this.state.createThemeList,\r\n            createThemeList2: !this.state.createThemeList2 })\r\n    }\r\n\r\n    updateEventState = (newEvent) => {\r\n        console.log('updateEventState     ' + JSON.stringify(newEvent))\r\n        this.setState({ event: newEvent })\r\n    }\r\n\r\n    updateEvent = () => {\r\n        this.props.eventsStore.updateEvent(this.state.event)\r\n    }\r\n\r\n    saveEvent = async () => {\r\n        // const id = \r\n        // console.log('save this event'+ JSON.stringify(this.state.event))\r\n        await this.props.eventsStore.createEvent({...this.state.event})\r\n        // route to eventsPage component\r\n        this.props.history.push({\r\n            pathname: '/events'\r\n        });\r\n        // route to event view page\r\n    }\r\n\r\n    cancelEditingRedirectToViewPage = () => {\r\n        // route to the view event page o\r\n    }\r\n\r\n    cancelEditingRedirectToEventsPage = () => {\r\n        // route to the events page\r\n    }\r\n\r\n    render() {\r\n        let themes\r\n        if(this.state.createThemeList || this.state.createThemeList2){\r\n            console.log('creating new EditThemes')\r\n            themes = <EditThemes key={Math.random()} event={this.state.event} updateEventState={this.updateEventState} updateThemeList={this.state.updateThemeList}/>\r\n        }\r\n        if (this.state.event == undefined) {\r\n            return null\r\n        }\r\n        return (\r\n            <div class='pageContent'>\r\n                <EditInfo event={this.state.event} updateEventState={this.updateEventState} updateThemeList={this.updateThemeList}/>\r\n                <hr></hr>\r\n                {themes}\r\n                <hr></hr>\r\n                <EditFoodSection event={this.state.event} updateEventState={this.updateEventState} />\r\n                <hr></hr>\r\n                <EditMusicSection event={this.state.event} updateEventState={this.updateEventState} />\r\n                <hr></hr>\r\n                <EditFlowersSection event={this.state.event} updateEventState={this.updateEventState} />\r\n                <hr></hr>\r\n                <EditPlaceSection event={this.state.event} updateEventState={this.updateEventState} />\r\n                <hr></hr>\r\n                <Button className='tabBtn' onClick={this.cancelEditing}>Cancel</Button>\r\n                {this.state.saveUpdateBtn}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(inject(\"eventsStore\")(observer(EditEvent)))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\Details.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\theme.js",["240","241"],"import React, { Component } from 'react';\r\n\r\nclass Theme extends Component {\r\n    render() {\r\n        const theme = this.props.theme\r\n        return(\r\n            <div className=\"themes\">\r\n                <h1>Theme</h1>\r\n                <div className=\"themes-details\">\r\n                <div>\r\n                <h2>{theme.title}</h2>\r\n                <div className=\"main-img\">\r\n                    <img src={theme.mainImg}></img>\r\n                    \r\n                </div>\r\n                </div>\r\n                <div className=\"images\">\r\n                    {theme.images.map(i => {return <img src={i}/>})}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Theme;","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\music.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\place.js",["242"],"import React, { Component } from 'react';\r\n\r\nclass Place extends Component {\r\n    render() {\r\n        const place = this.props.place\r\n        return(\r\n            <div className=\"place\">\r\n                <h1>Place</h1>\r\n                <div className=\"place-details\">\r\n                <div>\r\n                    <div>\r\n                        <h3>Type: </h3>\r\n                        <span>{place.category}</span>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Name: </h3>\r\n                        <span>{place.name}</span>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Phone: </h3>\r\n                        <span>{place.phone}</span>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Address: </h3>\r\n                        <span>{place.address}</span>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Price: </h3>\r\n                        <span>{place.price}</span>\r\n                    </div>\r\n                    <div>\r\n                    <h3>special comments: </h3>\r\n                    <span>{place.specialComments}</span>\r\n                </div>\r\n                </div>\r\n                    <img src={place.img} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Place;","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\flowers.js",["243"],"import React, { Component } from 'react';\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\n\r\nclass Flowers extends Component {\r\n  render() {\r\n    const flowers = this.props.flowers\r\n    const onTable = flowers.table.onTable\r\n    const onEntry = flowers.entry.onEntry\r\n    let yes = <FaCheck /> \r\n    let no = <FaTimes />\r\n    let onTableIcon, onEntryIcon\r\n    onTable ? onTableIcon = yes : onTableIcon = no\r\n    onEntry ? onEntryIcon = yes : onEntryIcon = no\r\n    return(\r\n      <div className=\"flowers\">\r\n        <h1>Flowers</h1>\r\n        <div className=\"flowers-item\">\r\n               <div>\r\n                   <span>Flowers on entry door {onEntryIcon}</span>\r\n                   <span>Flowers on tables {onTableIcon}</span>\r\n                   <span>Number of flower Stands {flowers.stands.numOfStands}</span>\r\n               </div>\r\n               <div>\r\n                   <span>Price: {flowers.entry.price}</span>\r\n                   <span>Price: {flowers.table.price}</span>\r\n                   <span>Price/stand: {flowers.stands.price}</span>\r\n\r\n               </div>\r\n               <div>\r\n                   <img src={flowers.Img} />\r\n               </div>\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Flowers;","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\food.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EventCard.jsx",["244"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function EventCard(props) {\r\n    const classes = useStyles();\r\n\r\n    const viewEvent = () => {\r\n        // Route to view event page\r\n    }\r\n\r\n    const assignEventRequest = () => {\r\n        props.assignEventRequest(props.event)\r\n    }\r\n\r\n    let photoSrc\r\n    const occasion = props.event.occasion.toLowerCase()\r\n    switch (occasion) {\r\n        case 'wedding': photoSrc = '/images/wedding.jpg'\r\n            break\r\n        case 'birthday': photoSrc = '/images/birthday.jpg'\r\n            break\r\n        case 'baptism': photoSrc = '/images/baptism.png'\r\n            break\r\n        case 'engagement': photoSrc = '/images/engagement.jpg'\r\n            break\r\n        case 'graduation': photoSrc = '/images/graduation.png'\r\n            break\r\n        default: photoSrc = ''\r\n    }\r\n    if(!props.display){\r\n            return null\r\n    }\r\n    let requestBtn = null\r\n    if(props.userType== 'organiser' && props.showAssignmentBtn){\r\n        requestBtn = <Button onClick={assignEventRequest}>Request for assignment</Button>\r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                title={props.event.title}\r\n                subheader={props.event.date}\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={photoSrc}\r\n                title={occasion}\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Client's address: {props.event.client.address}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Start hour: {props.event.startHour} - End hour: {props.event.endHour}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Number of guests: {props.event.numOfGuests}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <Button onClick={viewEvent}>View</Button>\r\n                {requestBtn}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditDetails.jsx",["245","246"],"import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport TimePicker from './TimePicker';\r\nimport DatePicker from './DatePicker'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass EditDetails extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            titleInput: '',\r\n            occasion: '',\r\n            startHour: '',\r\n            endHour: '',\r\n            date:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            occasion: this.props.event.occasion,\r\n            startHour: this.props.event.startHour,\r\n            endHour: this.props.event.endHour,\r\n            date: this.props.event.date,\r\n            guests: this.props.event.numOfGuests,\r\n            titleInput: this.props.event.title\r\n        })\r\n    }\r\n\r\n    handleTitle = (e) => {\r\n        const newEvent = {...this.props.event}\r\n        newEvent.title = e.target.value\r\n        this.setState({\r\n            titleInput: e.target.value\r\n        }, this.props.updateEventState(newEvent))\r\n    }\r\n\r\n    handleStartHour = (hour) => {\r\n        const newEvent = {...this.props.event}\r\n        newEvent.startHour = hour\r\n        this.setState({\r\n            startHour: hour\r\n        }, this.props.updateEventState(newEvent))\r\n    }\r\n\r\n    handleEndHour = (hour) => {\r\n        const newEvent = {...this.props.event}\r\n        newEvent.endHour = hour\r\n        this.setState({\r\n            endHour: hour\r\n        }, this.props.updateEventState(newEvent))\r\n    }\r\n\r\n    handleDate = (date) => {\r\n        const newEvent = {...this.props.event}\r\n        newEvent.date = date\r\n        this.setState({\r\n            date: date\r\n        }, this.props.updateEventState(newEvent))\r\n    }\r\n\r\n    handleOccasion = (e) => {\r\n        const newEvent = {...this.props.event}\r\n        newEvent.occasion = e.target.value\r\n        this.setState({\r\n            occasion: e.target.value\r\n        }, async() => {await this.props.eventsStore.LoadAllThemes(e.target.value)\r\n            this.props.updateEventState(newEvent)\r\n            this.props.updateThemeList()})\r\n    }\r\n\r\n    handleGuests = (e) => {\r\n        const newEvent = {...this.props.event}\r\n        newEvent.guests = e.target.value\r\n        this.setState({\r\n            guests: e.target.value\r\n        }, this.props.updateEventState(newEvent))\r\n    }\r\n\r\n    render() {\r\n        let organiserName = null\r\n        let organiserPhone = null\r\n        let organiserEmail = null\r\n        if(this.props.event.organiser != null && this.props.event.organiser!=undefined ){\r\n            organiserName = (<td>{this.props.event.organiser.name}</td>)\r\n            organiserPhone = (<td>{this.props.event.organiser.phone}</td>)\r\n            organiserEmail = (<td>{this.props.event.organiser.email}</td>)\r\n        }\r\n        let clientName = null\r\n        let clientPhone = null\r\n        let clientEmail = null\r\n        let clientAddress = null\r\n        if(this.props.event.client != null && this.props.event.client!=undefined ){\r\n            clientName = (<td>{this.props.event.client.name}</td>)\r\n            clientPhone = (<td>{this.props.event.client.phone}</td>)\r\n            clientEmail = (<td>{this.props.event.client.email}</td>)\r\n            clientAddress = (<td>{this.props.event.client.address}</td>)\r\n        }\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <label className='status'><p>{this.props.event.status}</p></label>\r\n                <br></br>\r\n            <table>\r\n                <tbody>\r\n                    <tr className='info'>\r\n                        <td>Title</td>\r\n                        <td><input value={this.state.titleInput} onChange={this.handleTitle} placeholder='Type the name of your event'></input></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n\r\n                        <td>Client</td>\r\n                        {clientName}\r\n                        <td>Organiser</td>\r\n                        {organiserName}\r\n                    </tr>\r\n                    <tr>\r\n\r\n                        <td>Phone</td>\r\n                        {clientPhone}\r\n                        <td>Phone</td>\r\n                        {organiserPhone}\r\n                    </tr>\r\n                    <tr>\r\n\r\n                        <td>Email</td>\r\n                        {clientEmail}\r\n                        <td>Email</td>\r\n                        {organiserEmail}\r\n                    </tr>\r\n                    <tr>\r\n                        <td>address</td>\r\n                        {clientAddress}\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Occasion</td>\r\n                        <td>\r\n                            <select value={this.state.occasion} onChange={this.handleOccasion}>\r\n                                <option value=\"Wedding\">Wedding</option>\r\n                                <option value=\"Birthday\">Birthday</option>\r\n                                <option value=\"Graduation\">Graduation</option>\r\n                                <option value=\"Engagement\">Engagement</option>\r\n                                <option value=\"baptism\">baptism</option>\r\n                            </select>\r\n                        </td>\r\n                        <td>Date</td>\r\n                        <td><DatePicker date={this.state.date} updateDate={this.handleDate}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Start hour</td>\r\n                        <td><TimePicker hour={this.state.startHour} updateHour={this.handleStartHour}/></td>\r\n                        <td>End hour</td>\r\n                        <td><TimePicker hour={this.state.endHour} updateHour={this.handleEndHour}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Number of guests</td>\r\n                        <td><TextField InputLabelProps={{ shrink: true}} type=\"number\" onChange={this.handleGuests} value={this.state.guests} /></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default inject(\"eventsStore\")(observer(EditDetails))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditThemes.jsx",["247","248","249"],"import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport Theme from './Theme';\r\n\r\n\r\nclass EditThemes extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            toDisplayThemes:[],\r\n            allThemes: [],\r\n            current: 0\r\n        }\r\n    }\r\n\r\n    fillThemes(){\r\n        let themes = []\r\n        for(let i=this.state.current; i<this.props.eventsStore.themes.length; i++){\r\n            if(this.state.current+i==3){\r\n                break;\r\n            }\r\n            themes.push(this.props.eventsStore.themes[i])\r\n        }\r\n        this.setState({toDisplayThemes: themes})\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('did mount')\r\n        this.fillThemes()\r\n    }\r\n    // componentDidUpdate(){\r\n    //     // this.setState({allThemes: this.props.updateThemeList})\r\n    //     this.fillThemes()\r\n    //     // this.fillThemes()\r\n    // }\r\n\r\n    moveLeft = () =>{\r\n        if(this.state.current!=0){\r\n            this.setState({current: this.state.current-1}, this.fillThemes())\r\n        }\r\n\r\n    }\r\n\r\n    moveRight = () => {\r\n        if(this.state.current!=this.props.eventsStore.themes.length-1){\r\n            this.setState({current: this.state.current+1}, this.fillThemes())\r\n        }\r\n    }\r\n\r\n    changeTheme = (theme) => {\r\n        this.props.eventsStore.changeTheme(this.props.event, theme)\r\n    }\r\n\r\n    render() {\r\n        console.log('rendering editThemes component')\r\n        // console.log('this.props.updateThemeList '+this.props.updateThemeList)\r\n        // if(this.props.updateThemeList){\r\n        //     this.fillThemes()\r\n        // }\r\n        const allThemes = this.state.toDisplayThemes.map(element => { return <Theme theme={element} key={element.id} changeTheme={this.changeTheme}/> })\r\n        // console.log(JSON.stringify(allThemes))\r\n\r\n        return (<table>\r\n            <tbody>\r\n                <tr>\r\n            {/* Display up to three themes */}\r\n            <td><button className='arrows' onClick={this.moveLeft}>{'<'}</button></td>\r\n            {allThemes}\r\n            <td><button className='arrows' onClick={this.moveRight}>{'>'}</button></td>\r\n            </tr>\r\n            </tbody>\r\n        </table>)\r\n    }\r\n\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditThemes))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditMusicSection.jsx",["250","251","252","253","254","255","256","257","258"],"import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport FullWidthTabs from './FullWidthTabs'\r\nimport EditMusicOption from './EditMusicOption'\r\n\r\nclass EditMusicSection extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            musicOptions: [],\r\n            MusicChosen: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('in cimponentDidMount of the EditFoodSection')\r\n        this.setState({ MusicChosen: this.props.event.musicList })\r\n        let finalMusicOptions = []\r\n\r\n        this.props.eventsStore.musicList.forEach(element => {\r\n            console.log('event: '+JSON.stringify(this.props.event))\r\n            let item = this.props.event.musicList.filter(e => {\r\n                return e.id == element.id\r\n            })\r\n            if (item.length == 0) {\r\n                finalMusicOptions.push(element)\r\n            }\r\n        });\r\n        this.setState({ musicOptions: finalMusicOptions })\r\n\r\n    }\r\n\r\n    updateEventMusicList = () => {\r\n        let newEvent = { ...this.props.event }\r\n        newEvent.musicList = []\r\n        this.state.MusicChosen.forEach(element => newEvent.musicList.push(element))\r\n        this.props.updateEventState(newEvent)\r\n    }\r\n\r\n    updateChosenMusicDetails = (musicOption) => {\r\n        let newEvent = { ...this.props.event }\r\n        let index = newEvent.musicList.findIndex(element => { return element.id == musicOption.id })\r\n        // we are only interested in the chosen items\r\n        // generates a bug when trying to add a modified music option to list\r\n        if (index != -1) {\r\n            newEvent.musicList[index] = { ...musicOption }\r\n            this.props.updateEventState(newEvent)\r\n        }\r\n    }\r\n\r\n    trasnferMusicFromOptions = (musicOption) => {\r\n        console.log('In trasnferMusicFromOptions')\r\n        let newMusicOptions = []\r\n        this.state.musicOptions.forEach(element => {\r\n            if (element.id != musicOption.id) {\r\n                newMusicOptions.push(element)\r\n            }\r\n        })\r\n        let newMusicChosen = this.state.MusicChosen.map(element => { return element })\r\n        newMusicChosen.push(musicOption)\r\n        this.setState({\r\n            musicOptions: newMusicOptions,\r\n            MusicChosen: newMusicChosen\r\n        }, () => {\r\n            this.updateEventMusicList()\r\n            this.props.eventsStore.addMusicOptionToEvent(this.props.event, musicOption)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    trasnferMusicFromChosen = (musicOption) => {\r\n        let newMusicOptions = this.state.musicOptions.map(element => { return element })\r\n        let newMusicChosen = []\r\n        this.state.MusicChosen.forEach(element => {\r\n            if (element.id != musicOption.id) {\r\n                newMusicChosen.push(element)\r\n            }\r\n        })\r\n        newMusicOptions.push(musicOption)\r\n        this.setState({\r\n            musicOptions: newMusicOptions,\r\n            MusicChosen: newMusicChosen\r\n        }, () => {\r\n            this.updateEventMusicList()\r\n            this.props.eventsStore.removeMusicOptionFromEvent(this.props.event, musicOption)\r\n        })\r\n\r\n    }\r\n\r\n    assignContentToTab(tabs, element, content) {\r\n        if (element.category == 'D.J') {\r\n            tabs.djTab.push(content)\r\n        }\r\n        else if (element.category == 'Singer') {\r\n            tabs.singerTab.push(content)\r\n        }\r\n        else if (element.category == 'Band') {\r\n            tabs.bandTab.push(content)\r\n        }\r\n        return tabs\r\n\r\n    }\r\n\r\n    render() {\r\n        const labels = ['D.J', 'Singer', 'Band']\r\n        const tabs = {\r\n            djTab: [],\r\n            singerTab: [],\r\n            bandTab: []\r\n        }\r\n        let content = null\r\n        this.state.MusicChosen.forEach(element => {\r\n            content = <EditMusicOption key={'chosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={true} moveToOptions={this.trasnferMusicFromChosen} updateMusicDetails={this.updateChosenMusicDetails} />\r\n            this.assignContentToTab(tabs, element, content)\r\n        })\r\n        this.state.musicOptions.forEach(element => {\r\n            content = <EditMusicOption key={'notChosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={false} moveToChosen={this.trasnferMusicFromOptions} updateMusicDetails={this.updateChosenMusicDetails} />\r\n            this.assignContentToTab(tabs, element, content)\r\n        })\r\n        const contents = [tabs.djTab, tabs.singerTab, tabs.bandTab]\r\n        return (\r\n            <div>\r\n                <FullWidthTabs labels={labels} content={contents} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditMusicSection))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditFoodSection.jsx",["259","260","261","262","263","264","265","266","267"],"import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport FullWidthTabs from './FullWidthTabs'\r\nimport EditFoodOption from './EditFoodOption';\r\n\r\n\r\nclass EditFoodSection extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            foodOptions: [],\r\n            foodChosen: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('in cimponentDidMount of the EditFoodSection')\r\n        this.setState({ foodChosen: this.props.event.food })\r\n        let finalFoodOptions = []\r\n\r\n        this.props.eventsStore.food.forEach(element => {\r\n            let item = this.props.event.food.filter(e => {\r\n                return e.id == element.id\r\n            })\r\n            if (item.length == 0) {\r\n                finalFoodOptions.push(element)\r\n            }\r\n        });\r\n        this.setState({ foodOptions: finalFoodOptions })\r\n\r\n    }\r\n\r\n    updateEventFoodList = () => {\r\n        let newEvent = { ...this.props.event }\r\n        newEvent.food = []\r\n        this.state.foodChosen.forEach(element => newEvent.food.push(element))\r\n        this.props.updateEventState(newEvent)\r\n    }\r\n\r\n    updateChosenFoodDetails = (food) => {\r\n        let newEvent = { ...this.props.event }\r\n        let index = newEvent.food.findIndex(element => { return element.id == food.id })\r\n        // we are only interested in the chosen items\r\n        // generates a bug when trying to add a modified food option to list\r\n        if (index != -1) {\r\n            newEvent.food[index] = { ...food }\r\n            this.props.updateEventState(newEvent)\r\n        }\r\n    }\r\n\r\n    trasnferFoodFromOptions = (food) => {\r\n        let newFoodOptions = []\r\n        this.state.foodOptions.forEach(element => {\r\n            if (element.id != food.id) {\r\n                newFoodOptions.push(element)\r\n            }\r\n        })\r\n        let newFoodChosen = this.state.foodChosen.map(element => { return element })\r\n        newFoodChosen.push(food)\r\n        this.setState({\r\n            foodOptions: newFoodOptions,\r\n            foodChosen: newFoodChosen\r\n        }, () => {\r\n            this.updateEventFoodList()\r\n            this.props.eventsStore.addFoodToList(this.props.event, food)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    trasnferFoodFromChosen = (food) => {\r\n        let newFoodOptions = this.state.foodOptions.map(element => { return element })\r\n        let newFoodChosen = []\r\n        this.state.foodChosen.forEach(element => {\r\n            if (element.id != food.id) {\r\n                newFoodChosen.push(element)\r\n            }\r\n        })\r\n        newFoodOptions.push(food)\r\n        this.setState({\r\n            foodOptions: newFoodOptions,\r\n            foodChosen: newFoodChosen\r\n        }, () => {\r\n            this.updateEventFoodList()\r\n            this.props.eventsStore.removeFoodFromList(this.props.event, food)\r\n        })\r\n\r\n    }\r\n\r\n    assignContentToTab(tabs, element, content) {\r\n        if (element.category == 'sweets') {\r\n            tabs.sweetsTab.push(content)\r\n        }\r\n        else if (element.category == 'Dinner') {\r\n            tabs.mainDishTab.push(content)\r\n        }\r\n        else if (element.category == 'appetiser') {\r\n            tabs.appetiserTab.push(content)\r\n        }\r\n        return tabs\r\n\r\n    }\r\n\r\n    render() {\r\n        const labels = ['Sweets', 'Main Dish', 'Appetiser']\r\n        const tabs = {\r\n            sweetsTab: [],\r\n            mainDishTab: [],\r\n            appetiserTab: []\r\n        }\r\n        let content = null\r\n        this.state.foodChosen.forEach(element => {\r\n            content = <EditFoodOption key={'chosenFood' + element.id} event={this.props.event} food={element} isChosen={true} moveToOptions={this.trasnferFoodFromChosen} updateFoodDetails={this.updateChosenFoodDetails} />\r\n            this.assignContentToTab(tabs, element, content)\r\n        })\r\n        this.state.foodOptions.forEach(element => {\r\n            content = <EditFoodOption key={'notChosenFood' + element.id} event={this.props.event} food={element} isChosen={false} moveToChosen={this.trasnferFoodFromOptions} updateFoodDetails={this.updateChosenFoodDetails} />\r\n            this.assignContentToTab(tabs, element, content)\r\n        })\r\n        const contents = [tabs.sweetsTab, tabs.mainDishTab, tabs.appetiserTab]\r\n        return (\r\n            <div>\r\n                <FullWidthTabs labels={labels} content={contents} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditFoodSection))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditFlowersSection.jsx",["268","269","270","271"],"\r\nimport React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass EditFlowersSection extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            savedRosesData: null,\r\n            flowersType: '',\r\n            flowersOnTable: false,\r\n            flowersOnTablePrice: 0,\r\n            flowersOnEntryDoor: false,\r\n            flowersOnEntryDoorPrice: 0,\r\n            NumberOfFlowersStands: 0,\r\n            flowersStandsPRice: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.event.flowers.category)\r\n        if (this.props.event.flowers != null && this.props.event.flowers != undefined) {\r\n            this.setState({\r\n                savedRosesData: {...this.props.event.flowers},\r\n                flowersType: this.props.event.flowers.category,\r\n                flowersOnTable: this.props.event.flowers.table.onTable,\r\n                flowersOnTablePrice: this.props.event.flowers.table.price,\r\n                flowersOnEntryDoor: this.props.event.flowers.entry.onEntry,\r\n                flowersOnEntryDoorPrice: this.props.event.flowers.entry.price,\r\n                NumberOfFlowersStands: this.props.event.flowers.stands.numOfStands,\r\n                flowersStandsPRice: this.props.event.flowers.stands.price\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFlowersType = (e) => {\r\n        this.setState({ flowersType: e.target.value}, ()=> {\r\n            let newFlowersDetails\r\n            if (e.target.value == this.state.savedRosesData.category){\r\n                newFlowersDetails = {...this.state.savedRosesData}\r\n                this.setState({\r\n                    flowersOnTablePrice: this.state.savedRosesData.table.price,\r\n                    flowersOnEntryDoorPrice: this.state.savedRosesData.entry.price,\r\n                    flowersStandsPRice: this.state.savedRosesData.stands.price\r\n                }, this.updateFlowersDetails(newFlowersDetails))\r\n            }else{\r\n                const element = this.props.eventsStore.flowers.filter(element => { return e.target.value == element.category})\r\n                if(element.length!=0){\r\n                    newFlowersDetails = {\r\n                        //'Rose', {onTable: true, price: 50}, {onEntry: true, price: 1500}, {numOfStands: 6, price: 150}\r\n                        category: this.state.flowersType,\r\n                        table: {\r\n                            onTable: this.state.flowersOnTable,\r\n                            price: this.state.flowersOnTablePrice\r\n                        },\r\n                        entry: {\r\n                            onEntry: this.state.flowersOnEntryDoor,\r\n                            price: this.state.flowersOnEntryDoorPrice\r\n                        },\r\n                        stands: {\r\n                            numOfStands: this.state.NumberOfFlowersStands,\r\n                            price: this.state.flowersStandsPRice\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        flowersOnTablePrice: element[0].onTablePrice,\r\n                        flowersOnEntryDoorPrice: element[0].onEntryPrice,\r\n                        flowersStandsPRice: element[0].standPrice\r\n                    }, this.updateFlowersDetails(newFlowersDetails))\r\n                }\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    updateFlowersDetails = (flowersDetails) => {\r\n        let newEvent = { ...this.props.event }\r\n        newEvent.flowers = { ...flowersDetails }\r\n        this.props.updateEventState(newEvent)\r\n    }\r\n\r\n    handleOnTable= (e) => {\r\n        const newFlowersDetails = {\r\n            category: this.state.flowersType,\r\n            table: {\r\n                onTable: !(this.state.flowersOnTable),\r\n                price: this.state.flowersOnTablePrice\r\n            },\r\n            entry: {\r\n                onEntry: this.state.flowersOnEntryDoor,\r\n                price: this.state.flowersOnEntryDoorPrice\r\n            },\r\n            stands: {\r\n                numOfStands: this.state.NumberOfFlowersStands,\r\n                price: this.state.flowersStandsPRice\r\n            }\r\n        }\r\n        this.setState({ flowersOnTable: !this.state.flowersOnTable }, this.updateFlowersDetails(newFlowersDetails))\r\n    }\r\n    handleOnEntry= (e) => {\r\n        const newFlowersDetails = {\r\n            category: this.state.flowersType,\r\n            table: {\r\n                onTable: this.state.flowersOnTable,\r\n                price: this.state.flowersOnTablePrice\r\n            },\r\n            entry: {\r\n                onEntry: !this.state.flowersOnEntryDoor,\r\n                price: this.state.flowersOnEntryDoorPrice\r\n            },\r\n            stands: {\r\n                numOfStands: this.state.NumberOfFlowersStands,\r\n                price: this.state.flowersStandsPRice\r\n            }\r\n        }\r\n        this.setState({ flowersOnEntryDoor: !this.state.flowersOnEntryDoor }, this.updateFlowersDetails(newFlowersDetails))\r\n    }\r\n\r\n    handleStandsNumber = (e) =>{\r\n        const newFlowersDetails = {\r\n            category: this.state.flowersType,\r\n            table: {\r\n                onTable: this.state.flowersOnTable,\r\n                price: this.state.flowersOnTablePrice\r\n            },\r\n            entry: {\r\n                onEntry: !this.state.flowersOnEntryDoor,\r\n                price: this.state.flowersOnEntryDoorPrice\r\n            },\r\n            stands: {\r\n                numOfStands: e.target.value,\r\n                price: this.state.flowersStandsPRice\r\n            }\r\n        }\r\n        this.setState({NumberOfFlowersStands: e.target.value}, this.updateFlowersDetails(newFlowersDetails))\r\n    }\r\n\r\n    render() {\r\n        let options = null\r\n        if(this.props.eventsStore.flowers){\r\n             options = this.props.eventsStore.flowers.map(element => {\r\n                return <option value={element.category} data-id={element.id}>{element.category}</option>\r\n            })\r\n        }\r\n        \r\n        return (\r\n            <table className='flowersSection'>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Main flowers type in decoration</td>\r\n                        <td><select value={this.state.flowersType} onChange={this.handleFlowersType}>\r\n                            {options}\r\n                        </select></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Flowers on table</td>\r\n                        <td><FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={this.state.flowersOnTable}\r\n                                    onChange={this.handleOnTable}\r\n                                    name=\"checkedOnTable\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Primary\"\r\n                        /></td>\r\n                        <td>price/table</td>\r\n                        <td>{this.state.flowersOnTablePrice}₪</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Flowers on entry door</td>\r\n                        <td><FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={this.state.flowersOnEntryDoor}\r\n                                    onChange={this.handleOnEntry}\r\n                                    name=\"checkedOnEntry\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Primary\"\r\n                        /></td>\r\n                        <td>price</td>\r\n                        <td>{this.state.flowersOnEntryDoorPrice}₪</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Number of flowers stands</td>\r\n                        <td><TextField InputLabelProps={{ shrink: true}} type=\"number\" onChange={this.handleStandsNumber} value={this.state.NumberOfFlowersStands} /></td>\r\n                        <td>price/stand</td>\r\n                        <td>{this.state.flowersStandsPRice}₪</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditFlowersSection))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditPlaceSection.jsx",["272","273","274","275","276","277","278"],"import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport FullWidthTabs from './FullWidthTabs'\r\nimport EditPlaceOption from './EditPlaceOption'\r\nimport { elementRoles } from 'aria-query';\r\n\r\nclass EditPlaceSection extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            placeOption: null\r\n        }\r\n    }\r\n\r\n    removePlace = () => {\r\n        this.setState({placeOption: null}, this.updatePlaceDetails(null))\r\n    }\r\n    addPlace = (placeOption) => {\r\n        this.setState({placeOption: placeOption}, this.updatePlaceDetails(placeOption))\r\n    }\r\n\r\n    updatePlaceDetails = (placeOption) => {\r\n        let newEvent = { ...this.props.event }\r\n        if(placeOption == null){\r\n            newEvent.place = null\r\n        }else{\r\n            newEvent.place = { ...placeOption }\r\n        }\r\n        this.props.updateEventState(newEvent)\r\n    }\r\n\r\n    assignContentToTab(tabs, element, content) {\r\n        if (element.category == 'private') {\r\n            tabs.privateTab.push(content)\r\n        }\r\n        else if (element.category == 'open space' || element.category == 'Park') {\r\n            tabs.openSpaceTab.push(content)\r\n        }\r\n        else if (element.category == 'hall') {\r\n            tabs.hallTab.push(content)\r\n        }\r\n        return tabs\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({placeOption: this.props.event.place})\r\n    }\r\n\r\n    render() {\r\n        const labels = ['Private', 'Open Space', 'Hall']\r\n        const tabs = {\r\n            privateTab: [],\r\n            openSpaceTab: [],\r\n            hallTab: []\r\n        }\r\n        let content = null\r\n        if (this.props.event.place != null && this.props.event.place != undefined) {\r\n            content = <EditPlaceOption key={'chosenPlace' + this.props.event.place.id} event={this.props.event} placeOption={this.props.event.place} isChosen={true} updatePlaceDetails={this.updatePlaceDetails} removePlace={this.removePlace} />\r\n            this.assignContentToTab(tabs, this.props.event.place, content)\r\n        }\r\n        this.props.eventsStore.places.forEach(element => {\r\n            if (this.props.event.place == null || element.id != this.props.event.place.id) {\r\n                content = <EditPlaceOption key={'notChosenPlace' + element.id} event={this.props.event} placeOption={element} isChosen={false} updatePlaceDetails={this.updatePlaceDetails} addPlace={this.addPlace}/>\r\n                this.assignContentToTab(tabs, element, content)\r\n            }\r\n        })\r\n        const contents = [tabs.privateTab, tabs.openSpaceTab, tabs.hallTab]\r\n        return (\r\n            <div>\r\n                <FullWidthTabs labels={labels} content={contents} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditPlaceSection))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\foodItem.js",["279"],"import React, { Component } from 'react';\r\n\r\nclass FoodItem extends Component {\r\n    render() {\r\n        const item = this.props.item\r\n        return(\r\n            <div className=\"food-item\">\r\n                <div>\r\n                <h2>{item.name}</h2>\r\n                <div>\r\n                    <h3>Ingredients: </h3>\r\n                    <span>{item.ingredients}</span>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <h3>Quantity/Dish: </h3>\r\n                        <span>{item.quantity}</span>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Price/Dish: </h3>\r\n                        <span>{item.price}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h3>special comments: </h3>\r\n                    <span>{item.specialComments}</span>\r\n                </div>\r\n                </div>\r\n                <div>\r\n                    <img src={item.img}></img>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FoodItem;","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\tabs.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\TimePicker.jsx",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\DatePicker.jsx",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\Theme.jsx",["280"],"\r\nimport React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport ThemePopup from './ThemePopup'\r\n\r\nclass Theme extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            openPopup:  false\r\n        }\r\n    }\r\n\r\n    viewPopup = () => {\r\n        this.setState({openPopup: true})\r\n    }\r\n\r\n    closePopup = () => {\r\n        this.setState({openPopup: false})\r\n    }\r\n\r\n    updateEvent = (theme) => {\r\n        this.props.changeTheme(theme)\r\n    }\r\n    \r\n    render(){\r\n        let text\r\n        if (this.props.theme.isChosen){\r\n            text = <div class=\"chosenTheme\">(Chosen)</div>\r\n        }\r\n        let popup\r\n        if (this.state.openPopup){\r\n            popup = <ThemePopup closePopup={this.closePopup} theme={this.props.theme} updateEvent={this.updateEvent}/>\r\n        }else{\r\n            popup = null\r\n        }\r\n        // to be changed later\r\n        return(<td className=\"ThemeRow\">\r\n            <img src={this.props.theme.mainImg} onClick={this.viewPopup}></img>\r\n            <div class=\"centered\">{this.props.theme.title}</div>\r\n            {text}\r\n            {popup}\r\n        </td>)\r\n    }\r\n\r\n}\r\nexport default inject(\"eventsStore\")(observer(Theme))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditMusicOption.jsx",["281","282","283"],"\r\n\r\nimport React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass EditMusicOption extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            specialComment: '',\r\n            isChosen: false,\r\n            musicOption: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\r\n        this.setState(\r\n            {\r\n                specialComment: this.props.musicOption.specialComments,\r\n                isChosen: this.props.isChosen,\r\n                musicOption: this.props.musicOption\r\n            }\r\n        )\r\n    }\r\n\r\n    handleSpecialComment = (e) => {\r\n        let newMusicOption = {...this.state.musicOption}\r\n        newMusicOption.specialComments = e.target.value\r\n        this.setState({ specialComment: e.target.value }, this.props.updateMusicDetails(newMusicOption))\r\n    }\r\n\r\n    handlePrice = (e) => {\r\n        let newMusicOption = {...this.state.musicOption}\r\n        newMusicOption.price = e.target.value\r\n        this.setState({ price: e.target.value }, this.props.updateMusicDetails(newMusicOption))\r\n    }\r\n\r\n    removeMusicOptionFromList = () => {\r\n        this.props.moveToOptions(this.state.musicOption)\r\n    }\r\n\r\n    addMusicOptionToList = () => {\r\n        console.log('In addMusicOptionFromList')\r\n        this.props.moveToChosen(this.state.musicOption)\r\n    }\r\n\r\n    // id, category, name, phone, price, img, specialComments\r\n    render() {\r\n        if(this.state.musicOption == undefined){\r\n            return null\r\n        }\r\n        const musicOption = this.state.musicOption\r\n        let price = null\r\n        let actionBtn = null\r\n        // User is either a client or an organiser\r\n        if (this.props.eventsStore.userType == 'client') {\r\n            price = (<tr>\r\n                <td>Price</td>\r\n                <td>{musicOption.price} ₪</td>\r\n            </tr>)\r\n            if (this.state.isChosen) {\r\n                actionBtn = <Button className='tabBtn' onClick={this.removeMusicOptionFromList}>Remove</Button>\r\n            } else {\r\n                actionBtn = <Button className='tabBtn' onClick={this.addMusicOptionToList}>Add</Button>\r\n            }\r\n        } else {\r\n            price = (<tr>\r\n                <td>Price</td>\r\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\r\n            </tr>)\r\n        }\r\n        return (\r\n            <table class=\"food-option\" data-id={musicOption.id}>\r\n            <tr>\r\n                <td class='food-details'>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{musicOption.name}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td>{musicOption.phone}</td>\r\n                            </tr>\r\n                            {price}\r\n                            <tr>\r\n                                <td>Special comments</td>\r\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </td>\r\n                <td class='food-image'>\r\n                    <img src={musicOption.img}></img>\r\n                </td>\r\n                <td class='food-actions'>\r\n                    {actionBtn}\r\n                </td>\r\n            </tr>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditMusicOption))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\FullWidthTabs.jsx",["284","285"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    // width: '90vw',\r\n  },\r\n}));\r\n\r\nexport default function FullWidthTabs(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  let tabIndex = 0;\r\n  let tabs = props.labels.map((element, tabIndex) => {return <Tab label={element} {...a11yProps(tabIndex++)} />})\r\n\r\n  let contentIndex = 0\r\n  let tabPanels = props.content.map((element, contentIndex) => {return (<TabPanel value={value} index={contentIndex++} dir={theme.direction} p={props.content.length}>\r\n    {element}\r\n    </TabPanel>)})\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n        {tabs}\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n      {tabPanels}\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditFoodOption.jsx",["286","287","288","289"],"\r\n\r\nimport React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass EditFoodOption extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            numOfServings: 0,\r\n            specialComment: '',\r\n            flavor: '',\r\n            price: 0,\r\n            isChosen: false,\r\n            food: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\r\n        this.setState(\r\n            {\r\n                numOfServings: this.props.food.quantity,\r\n                specialComment: this.props.food.specialComments,\r\n                flavor: this.props.food.flavor,\r\n                price: this.props.food.price,\r\n                isChosen: this.props.isChosen,\r\n                food: this.props.food\r\n            }\r\n        )\r\n    }\r\n\r\n    handlePrice = (e) => {\r\n        let newFood = {...this.state.food}\r\n        newFood.price = e.target.value\r\n        this.setState({ price: e.target.value }, this.props.updateFoodDetails(newFood))\r\n    }\r\n\r\n    handleSpecialComment = (e) => {\r\n        let newFood = {...this.state.food}\r\n        newFood.specialComments = e.target.value\r\n        this.setState({ specialComment: e.target.value }, this.props.updateFoodDetails(newFood))\r\n    }\r\n\r\n    handleNumberOfServings = (e) => {\r\n        let newFood = {...this.state.food}\r\n        newFood.quantity = e.target.value\r\n        this.setState({ numOfServings: e.target.value, food: newFood }, this.props.updateFoodDetails(newFood))\r\n    }\r\n\r\n    handleFlavor = (e) => {\r\n        let newFood = {...this.state.food}\r\n        newFood.flavor = e.target.value\r\n        this.setState({ flavor: e.target.value }, this.props.updateFoodDetails(newFood))\r\n    }\r\n\r\n    removeFoodFromList = () => {\r\n        // this.props.moveToOptions(this.props.food)\r\n        this.props.moveToOptions(this.state.food)\r\n    }\r\n\r\n    addFoodToList = () => {\r\n        // this.props.moveToChosen(this.props.food)\r\n        this.props.moveToChosen(this.state.food)\r\n    }\r\n\r\n    // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\r\n    render() {\r\n        // console.log(JSON.stringify(this.props.food))\r\n        let ingredients = null\r\n        let flavor = null\r\n        const food = this.props.food\r\n        if (food.ingredients != null && food.ingredients !='') {\r\n            ingredients = (<tr>\r\n                <td>Ingredients:</td>\r\n                <td>{food.ingredients}</td>\r\n            </tr>)\r\n        }\r\n        if (food.flavor != null && food.flavor!=\"\") {\r\n            flavor = (<tr>\r\n                <td>Flavor:</td>\r\n                <td><select value={this.state.flavor} onChange={this.handleFlavor}>\r\n                    <option value=\"Nutella\">Nutella</option>\r\n                    <option value=\"Strawberry\">Strawberry</option>\r\n                    <option value=\"Orange\">Orange</option>\r\n                    <option value=\"Lemon\">Lemon</option>\r\n                    <option value=\"Oreo\">Oreo</option>\r\n                </select></td>\r\n            </tr>)\r\n        }\r\n        let price = null\r\n        let actionBtn = null\r\n        // User is either a client or an organiser\r\n        if (this.props.eventsStore.userType == 'client') {\r\n            price = (<tr>\r\n                <td>Price per serving</td>\r\n                <td>{food.price} ₪</td>\r\n            </tr>)\r\n            if (this.state.isChosen) {\r\n                actionBtn = <Button className='tabBtn' onClick={this.removeFoodFromList}>Remove</Button>\r\n            } else {\r\n                actionBtn = <Button className='tabBtn' onClick={this.addFoodToList}>Add</Button>\r\n            }\r\n        } else {\r\n            price = (<tr>\r\n                <td>Price per serving</td>\r\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\r\n            </tr>)\r\n        }\r\n        return (\r\n            <table class=\"food-option\" data-id={food.id}>\r\n            <tr>\r\n                <td class='food-details'>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{food.name}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            {ingredients}\r\n                            {flavor}\r\n                            <tr>\r\n                                <td>Serving quantity</td>\r\n                                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handleNumberOfServings} value={this.state.numOfServings} /></td>\r\n                            </tr>\r\n                            {price}\r\n                            <tr>\r\n                                <td>Special comments</td>\r\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </td>\r\n                <td class='food-image'>\r\n                    <img src={food.img}></img>\r\n                </td>\r\n                <td class='food-actions'>\r\n                    {actionBtn}\r\n                </td>\r\n            </tr>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditFoodOption))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\EditPlaceOption.jsx",["290","291","292","293"],"\r\nimport React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass EditMusicOption extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            specialComment: '',\r\n            isChosen: false,\r\n            placeOption: undefined,\r\n            name: '',\r\n            address: '',\r\n            phone: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // id, category, name, phone, address, price, img, specialComments\r\n        this.setState(\r\n            {\r\n                specialComment: this.props.placeOption.specialComments,\r\n                isChosen: this.props.isChosen,\r\n                placeOption: this.props.placeOption,\r\n                name: this.props.placeOption.name,\r\n                address: this.props.placeOption.address,\r\n                phone: this.props.placeOption.phone\r\n            }\r\n        )\r\n    }\r\n\r\n    handlePrice = (e) => {\r\n        let newPlaceOption = { ...this.state.placeOption }\r\n        newPlaceOption.price = e.target.value\r\n        this.setState({ price: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\r\n    }\r\n    handleSpecialComments = (e) => {\r\n        let newPlaceOption = { ...this.state.placeOption }\r\n        newPlaceOption.specialComments = e.target.value\r\n        this.setState({ specialComments: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\r\n    }\r\n    handleName = (e) => {\r\n        let newPlaceOption = { ...this.state.placeOption }\r\n        newPlaceOption.name = e.target.value\r\n        this.setState({ name: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\r\n    }\r\n    handleAddress = (e) => {\r\n        let newPlaceOption = { ...this.state.placeOption }\r\n        newPlaceOption.address = e.target.value\r\n        this.setState({ address: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\r\n    }\r\n\r\n    handlePhone = (e) => {\r\n        let newPlaceOption = { ...this.state.placeOption }\r\n        newPlaceOption.phone = e.target.value\r\n        this.setState({ phone: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\r\n    }\r\n\r\n    removePlace = () => {\r\n        this.props.removePlace()\r\n    }\r\n    \r\n    addPlace = () => {\r\n        this.props.addPlace(this.state.placeOption)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.placeOption == undefined) {\r\n            return null\r\n        }\r\n        const placeOption = this.state.placeOption\r\n        let price = null\r\n        let actionBtn = null\r\n        let name = null\r\n        let address = null\r\n        let phone = null\r\n        if (placeOption.category == 'private') {\r\n            name = (<tr>\r\n                <td>Place</td>\r\n                <td><input onChange={this.handleName} value={this.state.name} /></td>\r\n            </tr>)\r\n            address = (<tr>\r\n                <td>Address</td>\r\n                <td><input onChange={this.handleAddress} value={this.state.address} /></td>\r\n            </tr>)\r\n            phone = (<tr>\r\n                <td>Phone</td>\r\n                <td><input onChange={this.handlePhone} value={this.state.phone} /></td>\r\n            </tr>)\r\n        } else {\r\n            name = (<tr>\r\n                <td>Address</td>\r\n                <td>{placeOption.name}</td>\r\n            </tr>)\r\n            address = (<tr>\r\n                <td>Address</td>\r\n                <td>{placeOption.address}</td>\r\n            </tr>)\r\n            address = (<tr>\r\n                <td>Phone</td>\r\n                <td>{placeOption.phone}</td>\r\n            </tr>)\r\n\r\n        }\r\n        // User is either a client or an organiser\r\n        if (this.props.eventsStore.userType == 'client') {\r\n            price = (<tr>\r\n                <td>Price</td>\r\n                <td>{placeOption.price} ₪</td>\r\n            </tr>)\r\n            if (this.state.isChosen) {\r\n                actionBtn = <Button className='tabBtn' onClick={this.removePlace}>Remove</Button>\r\n            } else {\r\n                actionBtn = <Button className='tabBtn' onClick={this.addPlace}>Add</Button>\r\n            }\r\n        } else {\r\n            price = (<tr>\r\n                <td>Price</td>\r\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\r\n            </tr>)\r\n        }\r\n        return (\r\n            <table class=\"food-option\" data-id={placeOption.id}>\r\n                <tr>\r\n                    <td class='food-details'>\r\n                        <table>\r\n                            <tbody>\r\n                                {name}\r\n                                {address}\r\n                                {phone}\r\n                                {price}\r\n                                <tr>\r\n                                    <td>Special comments</td>\r\n                                    <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComments}></textarea></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td class='food-image'>\r\n                        <img src={placeOption.img}></img>\r\n                    </td>\r\n                    <td class='food-actions'>\r\n                        {actionBtn}\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default inject(\"eventsStore\")(observer(EditMusicOption))","C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\viewEventComponents\\tab.js",[],"C:\\Users\\מוחמד\\Desktop\\code\\bootcamp\\projects\\Event-Organiser\\src\\components\\ThemePopup.jsx",["294"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function ThemePopup(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.closePopup()\r\n  };\r\n\r\n  const chooseTheme = () => {\r\n    props.updateEvent(props.theme)\r\n  }  \r\n\r\n  const photos = props.theme.images.map(element => {return <img className='popupImg' src={element}></img>})\r\n\r\n  return (\r\n    <div>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          {props.theme.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {photos}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={chooseTheme} color=\"primary\">\r\n            Choose\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}",{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":13},{"ruleId":"299","severity":1,"message":"303","line":9,"column":34,"nodeType":"301","messageId":"302","endLine":9,"endColumn":41},{"ruleId":"299","severity":1,"message":"304","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":13},{"ruleId":"299","severity":1,"message":"305","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":12},{"ruleId":"299","severity":1,"message":"306","line":7,"column":8,"nodeType":"301","messageId":"302","endLine":7,"endColumn":15},{"ruleId":"299","severity":1,"message":"307","line":8,"column":8,"nodeType":"301","messageId":"302","endLine":8,"endColumn":13},{"ruleId":"299","severity":1,"message":"308","line":9,"column":8,"nodeType":"301","messageId":"302","endLine":9,"endColumn":13},{"ruleId":"299","severity":1,"message":"309","line":10,"column":8,"nodeType":"301","messageId":"302","endLine":10,"endColumn":17},{"ruleId":"310","severity":1,"message":"311","line":140,"column":26,"nodeType":"312","messageId":"313","endLine":140,"endColumn":28},{"ruleId":"310","severity":1,"message":"311","line":157,"column":88,"nodeType":"312","messageId":"313","endLine":157,"endColumn":90},{"ruleId":"310","severity":1,"message":"311","line":180,"column":37,"nodeType":"312","messageId":"313","endLine":180,"endColumn":39},{"ruleId":"310","severity":1,"message":"311","line":197,"column":88,"nodeType":"312","messageId":"313","endLine":197,"endColumn":90},{"ruleId":"310","severity":1,"message":"311","line":279,"column":80,"nodeType":"312","messageId":"313","endLine":279,"endColumn":82},{"ruleId":"310","severity":1,"message":"311","line":280,"column":96,"nodeType":"312","messageId":"313","endLine":280,"endColumn":98},{"ruleId":"310","severity":1,"message":"311","line":285,"column":75,"nodeType":"312","messageId":"313","endLine":285,"endColumn":77},{"ruleId":"310","severity":1,"message":"311","line":290,"column":75,"nodeType":"312","messageId":"313","endLine":290,"endColumn":77},{"ruleId":"310","severity":1,"message":"311","line":295,"column":80,"nodeType":"312","messageId":"313","endLine":295,"endColumn":82},{"ruleId":"310","severity":1,"message":"311","line":296,"column":102,"nodeType":"312","messageId":"313","endLine":296,"endColumn":104},{"ruleId":"310","severity":1,"message":"311","line":303,"column":73,"nodeType":"312","messageId":"313","endLine":303,"endColumn":75},{"ruleId":"310","severity":1,"message":"311","line":304,"column":76,"nodeType":"312","messageId":"313","endLine":304,"endColumn":78},{"ruleId":"310","severity":1,"message":"311","line":306,"column":74,"nodeType":"312","messageId":"313","endLine":306,"endColumn":76},{"ruleId":"310","severity":1,"message":"311","line":309,"column":74,"nodeType":"312","messageId":"313","endLine":309,"endColumn":76},{"ruleId":"299","severity":1,"message":"314","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"304","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":13},{"ruleId":"299","severity":1,"message":"305","line":7,"column":8,"nodeType":"301","messageId":"302","endLine":7,"endColumn":12},{"ruleId":"299","severity":1,"message":"306","line":8,"column":8,"nodeType":"301","messageId":"302","endLine":8,"endColumn":15},{"ruleId":"299","severity":1,"message":"307","line":9,"column":8,"nodeType":"301","messageId":"302","endLine":9,"endColumn":13},{"ruleId":"299","severity":1,"message":"308","line":10,"column":8,"nodeType":"301","messageId":"302","endLine":10,"endColumn":13},{"ruleId":"310","severity":1,"message":"311","line":41,"column":26,"nodeType":"312","messageId":"313","endLine":41,"endColumn":28},{"ruleId":"310","severity":1,"message":"311","line":102,"column":81,"nodeType":"312","messageId":"313","endLine":102,"endColumn":83},{"ruleId":"310","severity":1,"message":"315","line":106,"column":24,"nodeType":"312","messageId":"313","endLine":106,"endColumn":26},{"ruleId":"310","severity":1,"message":"311","line":118,"column":37,"nodeType":"312","messageId":"313","endLine":118,"endColumn":39},{"ruleId":"299","severity":1,"message":"316","line":130,"column":23,"nodeType":"301","messageId":"302","endLine":130,"endColumn":29},{"ruleId":"310","severity":1,"message":"311","line":41,"column":43,"nodeType":"312","messageId":"313","endLine":41,"endColumn":45},{"ruleId":"310","severity":1,"message":"311","line":44,"column":48,"nodeType":"312","messageId":"313","endLine":44,"endColumn":50},{"ruleId":"310","severity":1,"message":"311","line":44,"column":121,"nodeType":"312","messageId":"313","endLine":44,"endColumn":123},{"ruleId":"310","severity":1,"message":"311","line":44,"column":239,"nodeType":"312","messageId":"313","endLine":44,"endColumn":241},{"ruleId":"299","severity":1,"message":"300","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":13},{"ruleId":"299","severity":1,"message":"306","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":15},{"ruleId":"299","severity":1,"message":"317","line":7,"column":10,"nodeType":"301","messageId":"302","endLine":7,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":23,"column":45,"nodeType":"312","messageId":"313","endLine":23,"endColumn":47},{"ruleId":"310","severity":1,"message":"311","line":46,"column":44,"nodeType":"312","messageId":"313","endLine":46,"endColumn":46},{"ruleId":"299","severity":1,"message":"317","line":12,"column":10,"nodeType":"301","messageId":"302","endLine":12,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":27,"column":30,"nodeType":"312","messageId":"313","endLine":27,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":91,"column":30,"nodeType":"312","messageId":"313","endLine":91,"endColumn":32},{"ruleId":"318","severity":1,"message":"319","line":13,"column":21,"nodeType":"320","endLine":13,"endColumn":46},{"ruleId":"318","severity":1,"message":"319","line":18,"column":52,"nodeType":"320","endLine":18,"endColumn":66},{"ruleId":"318","severity":1,"message":"319","line":36,"column":21,"nodeType":"320","endLine":36,"endColumn":44},{"ruleId":"318","severity":1,"message":"319","line":30,"column":20,"nodeType":"320","endLine":30,"endColumn":45},{"ruleId":"310","severity":1,"message":"311","line":65,"column":22,"nodeType":"312","messageId":"313","endLine":65,"endColumn":24},{"ruleId":"310","severity":1,"message":"315","line":86,"column":76,"nodeType":"312","messageId":"313","endLine":86,"endColumn":78},{"ruleId":"310","severity":1,"message":"315","line":95,"column":70,"nodeType":"312","messageId":"313","endLine":95,"endColumn":72},{"ruleId":"310","severity":1,"message":"311","line":19,"column":36,"nodeType":"312","messageId":"313","endLine":19,"endColumn":38},{"ruleId":"310","severity":1,"message":"315","line":38,"column":30,"nodeType":"312","messageId":"313","endLine":38,"endColumn":32},{"ruleId":"310","severity":1,"message":"315","line":45,"column":30,"nodeType":"312","messageId":"313","endLine":45,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":24,"column":29,"nodeType":"312","messageId":"313","endLine":24,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":26,"column":29,"nodeType":"312","messageId":"313","endLine":26,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":43,"column":81,"nodeType":"312","messageId":"313","endLine":43,"endColumn":83},{"ruleId":"310","severity":1,"message":"315","line":46,"column":19,"nodeType":"312","messageId":"313","endLine":46,"endColumn":21},{"ruleId":"310","severity":1,"message":"315","line":56,"column":28,"nodeType":"312","messageId":"313","endLine":56,"endColumn":30},{"ruleId":"310","severity":1,"message":"315","line":77,"column":28,"nodeType":"312","messageId":"313","endLine":77,"endColumn":30},{"ruleId":"310","severity":1,"message":"311","line":93,"column":30,"nodeType":"312","messageId":"313","endLine":93,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":96,"column":35,"nodeType":"312","messageId":"313","endLine":96,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":99,"column":35,"nodeType":"312","messageId":"313","endLine":99,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":24,"column":29,"nodeType":"312","messageId":"313","endLine":24,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":26,"column":29,"nodeType":"312","messageId":"313","endLine":26,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":43,"column":76,"nodeType":"312","messageId":"313","endLine":43,"endColumn":78},{"ruleId":"310","severity":1,"message":"315","line":46,"column":19,"nodeType":"312","messageId":"313","endLine":46,"endColumn":21},{"ruleId":"310","severity":1,"message":"315","line":55,"column":28,"nodeType":"312","messageId":"313","endLine":55,"endColumn":30},{"ruleId":"310","severity":1,"message":"315","line":76,"column":28,"nodeType":"312","messageId":"313","endLine":76,"endColumn":30},{"ruleId":"310","severity":1,"message":"311","line":92,"column":30,"nodeType":"312","messageId":"313","endLine":92,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":95,"column":35,"nodeType":"312","messageId":"313","endLine":95,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":98,"column":35,"nodeType":"312","messageId":"313","endLine":98,"endColumn":37},{"ruleId":"310","severity":1,"message":"315","line":26,"column":74,"nodeType":"312","messageId":"313","endLine":26,"endColumn":76},{"ruleId":"310","severity":1,"message":"311","line":43,"column":32,"nodeType":"312","messageId":"313","endLine":43,"endColumn":34},{"ruleId":"310","severity":1,"message":"311","line":51,"column":106,"nodeType":"312","messageId":"313","endLine":51,"endColumn":108},{"ruleId":"310","severity":1,"message":"315","line":52,"column":34,"nodeType":"312","messageId":"313","endLine":52,"endColumn":36},{"ruleId":"299","severity":1,"message":"321","line":5,"column":10,"nodeType":"301","messageId":"302","endLine":5,"endColumn":22},{"ruleId":"310","severity":1,"message":"311","line":33,"column":30,"nodeType":"312","messageId":"313","endLine":33,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":36,"column":35,"nodeType":"312","messageId":"313","endLine":36,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":36,"column":71,"nodeType":"312","messageId":"313","endLine":36,"endColumn":73},{"ruleId":"310","severity":1,"message":"311","line":39,"column":35,"nodeType":"312","messageId":"313","endLine":39,"endColumn":37},{"ruleId":"310","severity":1,"message":"315","line":58,"column":70,"nodeType":"312","messageId":"313","endLine":58,"endColumn":72},{"ruleId":"310","severity":1,"message":"315","line":63,"column":62,"nodeType":"312","messageId":"313","endLine":63,"endColumn":64},{"ruleId":"318","severity":1,"message":"319","line":30,"column":21,"nodeType":"320","endLine":30,"endColumn":41},{"ruleId":"318","severity":1,"message":"319","line":40,"column":13,"nodeType":"320","endLine":40,"endColumn":74},{"ruleId":"310","severity":1,"message":"311","line":53,"column":35,"nodeType":"312","messageId":"313","endLine":53,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":60,"column":45,"nodeType":"312","messageId":"313","endLine":60,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":99,"column":21,"nodeType":"320","endLine":99,"endColumn":48},{"ruleId":"299","severity":1,"message":"322","line":64,"column":7,"nodeType":"301","messageId":"302","endLine":64,"endColumn":15},{"ruleId":"299","severity":1,"message":"323","line":67,"column":7,"nodeType":"301","messageId":"302","endLine":67,"endColumn":19},{"ruleId":"310","severity":1,"message":"315","line":76,"column":58,"nodeType":"312","messageId":"313","endLine":76,"endColumn":60},{"ruleId":"310","severity":1,"message":"315","line":82,"column":47,"nodeType":"312","messageId":"313","endLine":82,"endColumn":49},{"ruleId":"310","severity":1,"message":"311","line":97,"column":45,"nodeType":"312","messageId":"313","endLine":97,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":138,"column":21,"nodeType":"320","endLine":138,"endColumn":41},{"ruleId":"310","severity":1,"message":"311","line":70,"column":36,"nodeType":"312","messageId":"313","endLine":70,"endColumn":38},{"ruleId":"310","severity":1,"message":"311","line":79,"column":34,"nodeType":"312","messageId":"313","endLine":79,"endColumn":36},{"ruleId":"310","severity":1,"message":"311","line":108,"column":45,"nodeType":"312","messageId":"313","endLine":108,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":142,"column":25,"nodeType":"320","endLine":142,"endColumn":52},{"ruleId":"318","severity":1,"message":"319","line":64,"column":60,"nodeType":"320","endLine":64,"endColumn":100},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'Event' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","'Theme' is defined but never used.","'Food' is defined but never used.","'Flowers' is defined but never used.","'Music' is defined but never used.","'Place' is defined but never used.","'Organiser' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Client' is defined but never used.","Expected '!==' and instead saw '!='.","'result' is assigned a value but never used.","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'elementRoles' is defined but never used.","'tabIndex' is assigned a value but never used.","'contentIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]