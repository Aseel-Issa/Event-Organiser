[{"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/index.js":"1","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/App.js":"2","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/reportWebVitals.js":"3","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/EventStore.js":"4","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Event.js":"5","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Food.js":"6","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Music.js":"7","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Flowers.js":"8","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Place.js":"9","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Organiser.js":"10","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Theme.js":"11","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Client.js":"12","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditEvent.jsx":"13","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/TimePicker.jsx":"14","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditDetails.jsx":"15","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/DatePicker.jsx":"16","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditThemes.jsx":"17","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/Theme.jsx":"18","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/ThemePopup.jsx":"19","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/FullWidthTabs.jsx":"20","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodSection.jsx":"21","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodOption.jsx":"22","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicSection.jsx":"23","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicOption.jsx":"24","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceSection.jsx":"25","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceOption.jsx":"26","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFlowersSection.jsx":"27"},{"size":651,"mtime":1611051193921,"results":"28","hashOfConfig":"29"},{"size":784,"mtime":1611159375970,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1610984653721,"results":"31","hashOfConfig":"29"},{"size":7839,"mtime":1611498767916,"results":"32","hashOfConfig":"29"},{"size":1187,"mtime":1611425860862,"results":"33","hashOfConfig":"29"},{"size":853,"mtime":1611141214984,"results":"34","hashOfConfig":"29"},{"size":685,"mtime":1611394416185,"results":"35","hashOfConfig":"29"},{"size":433,"mtime":1611497730764,"results":"36","hashOfConfig":"29"},{"size":757,"mtime":1611427210326,"results":"37","hashOfConfig":"29"},{"size":377,"mtime":1611050432962,"results":"38","hashOfConfig":"29"},{"size":462,"mtime":1611075468223,"results":"39","hashOfConfig":"29"},{"size":445,"mtime":1610987075822,"results":"40","hashOfConfig":"29"},{"size":2131,"mtime":1611498920235,"results":"41","hashOfConfig":"29"},{"size":1063,"mtime":1611064468639,"results":"42","hashOfConfig":"29"},{"size":4665,"mtime":1611149029196,"results":"43","hashOfConfig":"29"},{"size":826,"mtime":1611065183931,"results":"44","hashOfConfig":"29"},{"size":1777,"mtime":1611088709941,"results":"45","hashOfConfig":"29"},{"size":1187,"mtime":1611088866456,"results":"46","hashOfConfig":"29"},{"size":2319,"mtime":1611088520648,"results":"47","hashOfConfig":"29"},{"size":2450,"mtime":1611499219565,"results":"48","hashOfConfig":"29"},{"size":4378,"mtime":1611394061841,"results":"49","hashOfConfig":"29"},{"size":5420,"mtime":1611182297540,"results":"50","hashOfConfig":"29"},{"size":4568,"mtime":1611476794624,"results":"51","hashOfConfig":"29"},{"size":3803,"mtime":1611397069656,"results":"52","hashOfConfig":"29"},{"size":2757,"mtime":1611478067781,"results":"53","hashOfConfig":"29"},{"size":5408,"mtime":1611478159875,"results":"54","hashOfConfig":"29"},{"size":8454,"mtime":1611498300337,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1b0kdfg",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/index.js",[],["118","119"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/App.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/reportWebVitals.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/EventStore.js",["120","121","122","123","124","125","126","127","128","129","130"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Event.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Food.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Music.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Flowers.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Place.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Organiser.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Theme.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Client.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditEvent.jsx",["131"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/TimePicker.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditDetails.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/DatePicker.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditThemes.jsx",["132","133","134"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport Theme from './Theme';\n\n\nclass EditThemes extends Component {\n    constructor() {\n        super()\n        this.state = {\n            toDisplayThemes:[],\n            current: 0\n        }\n    }\n\n    fillThemes(){\n        let themes = []\n        for(let i=this.state.current; i<this.props.eventsStore.themes.length; i++){\n            if(this.state.current+i==3){\n                break;\n            }\n            themes.push(this.props.eventsStore.themes[i])\n        }\n        this.setState({toDisplayThemes: themes})\n    }\n\n    componentDidMount(){\n        this.fillThemes()\n    }\n\n    moveLeft = () =>{\n        if(this.state.current!=0){\n            this.setState({current: this.state.current-1}, this.fillThemes())\n        }\n\n    }\n\n    moveRight = () => {\n        if(this.state.current!=this.props.eventsStore.themes.length-1){\n            this.setState({current: this.state.current+1}, this.fillThemes())\n        }\n    }\n\n    changeTheme = (theme) => {\n        this.props.eventsStore.changeTheme(this.props.event, theme)\n    }\n\n    render() {\n        const allThemes = this.state.toDisplayThemes.map(element => { return <Theme theme={element} key={element.id} changeTheme={this.changeTheme}/> })\n        // console.log(JSON.stringify(allThemes))\n\n        return (<table>\n            <tbody>\n                <tr>\n            {/* Display up to three themes */}\n            <td><button className='arrows' onClick={this.moveLeft}>{'<'}</button></td>\n            {allThemes}\n            <td><button className='arrows' onClick={this.moveRight}>{'>'}</button></td>\n            </tr>\n            </tbody>\n        </table>)\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(EditThemes))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/Theme.jsx",["135"],"\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport ThemePopup from './ThemePopup'\n\nclass Theme extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            openPopup:  false\n        }\n    }\n\n    viewPopup = () => {\n        this.setState({openPopup: true})\n    }\n\n    closePopup = () => {\n        this.setState({openPopup: false})\n    }\n\n    updateEvent = (theme) => {\n        this.props.changeTheme(theme)\n    }\n    \n    render(){\n        let text\n        if (this.props.theme.isChosen){\n            text = <div class=\"chosenTheme\">(Chosen)</div>\n        }\n        let popup\n        if (this.state.openPopup){\n            popup = <ThemePopup closePopup={this.closePopup} theme={this.props.theme} updateEvent={this.updateEvent}/>\n        }else{\n            popup = null\n        }\n        // to be changed later\n        return(<td className=\"ThemeRow\">\n            <img src={this.props.theme.mainImg} onClick={this.viewPopup}></img>\n            <div class=\"centered\">{this.props.theme.title}</div>\n            {text}\n            {popup}\n        </td>)\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(Theme))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/ThemePopup.jsx",["136"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function ThemePopup(props) {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    props.closePopup()\n  };\n\n  const chooseTheme = () => {\n    props.updateEvent(props.theme)\n  }  \n\n  const photos = props.theme.images.map(element => {return <img className='popupImg' src={element}></img>})\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {props.theme.title}\n        </DialogTitle>\n        <DialogContent dividers>\n          {photos}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={chooseTheme} color=\"primary\">\n            Choose\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/FullWidthTabs.jsx",["137","138"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodSection.jsx",["139","140","141","142","143","144","145","146","147"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditFoodOption from './EditFoodOption';\n\n\nclass EditFoodSection extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            foodOptions: [],\n            foodChosen: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('in cimponentDidMount of the EditFoodSection')\n        this.setState({ foodChosen: this.props.event.food })\n        let finalFoodOptions = []\n\n        this.props.eventsStore.food.forEach(element => {\n            let item = this.props.event.food.filter(e => {\n                return e.id == element.id\n            })\n            if (item.length == 0) {\n                finalFoodOptions.push(element)\n            }\n        });\n        this.setState({ foodOptions: finalFoodOptions })\n\n    }\n\n    updateEventFoodList = () => {\n        let newEvent = { ...this.props.event }\n        newEvent.food = []\n        this.state.foodChosen.forEach(element => newEvent.food.push(element))\n        this.props.updateEventState(newEvent)\n    }\n\n    updateChosenFoodDetails = (food) => {\n        let newEvent = { ...this.props.event }\n        let index = newEvent.food.findIndex(element => { return element.id == food.id })\n        // we are only interested in the chosen items\n        // generates a bug when trying to add a modified food option to list\n        if (index != -1) {\n            newEvent.food[index] = { ...food }\n            this.props.updateEventState(newEvent)\n        }\n    }\n\n    trasnferFoodFromOptions = (food) => {\n        let newFoodOptions = []\n        this.state.foodOptions.forEach(element => {\n            if (element.id != food.id) {\n                newFoodOptions.push(element)\n            }\n        })\n        let newFoodChosen = this.state.foodChosen.map(element => { return element })\n        newFoodChosen.push(food)\n        this.setState({\n            foodOptions: newFoodOptions,\n            foodChosen: newFoodChosen\n        }, () => {\n            this.updateEventFoodList()\n            this.props.eventsStore.addFoodToList(this.props.event, food)\n        })\n\n\n    }\n\n    trasnferFoodFromChosen = (food) => {\n        let newFoodOptions = this.state.foodOptions.map(element => { return element })\n        let newFoodChosen = []\n        this.state.foodChosen.forEach(element => {\n            if (element.id != food.id) {\n                newFoodChosen.push(element)\n            }\n        })\n        newFoodOptions.push(food)\n        this.setState({\n            foodOptions: newFoodOptions,\n            foodChosen: newFoodChosen\n        }, () => {\n            this.updateEventFoodList()\n            this.props.eventsStore.removeFoodFromList(this.props.event, food)\n        })\n\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'sweets') {\n            tabs.sweetsTab.push(content)\n        }\n        else if (element.category == 'Dinner') {\n            tabs.mainDishTab.push(content)\n        }\n        else if (element.category == 'appetiser') {\n            tabs.appetiserTab.push(content)\n        }\n        return tabs\n\n    }\n\n    render() {\n        const labels = ['Sweets', 'Main Dish', 'Appetiser']\n        const tabs = {\n            sweetsTab: [],\n            mainDishTab: [],\n            appetiserTab: []\n        }\n        let content = null\n        this.state.foodChosen.forEach(element => {\n            content = <EditFoodOption key={'chosenFood' + element.id} event={this.props.event} food={element} isChosen={true} moveToOptions={this.trasnferFoodFromChosen} updateFoodDetails={this.updateChosenFoodDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        this.state.foodOptions.forEach(element => {\n            content = <EditFoodOption key={'notChosenFood' + element.id} event={this.props.event} food={element} isChosen={false} moveToChosen={this.trasnferFoodFromOptions} updateFoodDetails={this.updateChosenFoodDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        const contents = [tabs.sweetsTab, tabs.mainDishTab, tabs.appetiserTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditFoodSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodOption.jsx",["148","149","150","151"],"\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditFoodOption extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            numOfServings: 0,\n            specialComment: '',\n            flavor: '',\n            price: 0,\n            isChosen: false,\n            food: undefined\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n        this.setState(\n            {\n                numOfServings: this.props.food.quantity,\n                specialComment: this.props.food.specialComments,\n                flavor: this.props.food.flavor,\n                price: this.props.food.price,\n                isChosen: this.props.isChosen,\n                food: this.props.food\n            }\n        )\n    }\n\n    handlePrice = (e) => {\n        let newFood = {...this.state.food}\n        newFood.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleSpecialComment = (e) => {\n        let newFood = {...this.state.food}\n        newFood.specialComments = e.target.value\n        this.setState({ specialComment: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleNumberOfServings = (e) => {\n        let newFood = {...this.state.food}\n        newFood.quantity = e.target.value\n        this.setState({ numOfServings: e.target.value, food: newFood }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleFlavor = (e) => {\n        let newFood = {...this.state.food}\n        newFood.flavor = e.target.value\n        this.setState({ flavor: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    removeFoodFromList = () => {\n        // this.props.moveToOptions(this.props.food)\n        this.props.moveToOptions(this.state.food)\n    }\n\n    addFoodToList = () => {\n        // this.props.moveToChosen(this.props.food)\n        this.props.moveToChosen(this.state.food)\n    }\n\n    // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n    render() {\n        // console.log(JSON.stringify(this.props.food))\n        let ingredients = null\n        let flavor = null\n        const food = this.props.food\n        if (food.ingredients != null && food.ingredients !='') {\n            ingredients = (<tr>\n                <td>Ingredients:</td>\n                <td>{food.ingredients}</td>\n            </tr>)\n        }\n        if (food.flavor != null && food.flavor!=\"\") {\n            flavor = (<tr>\n                <td>Flavor:</td>\n                <td><select value={this.state.flavor} onChange={this.handleFlavor}>\n                    <option value=\"Nutella\">Nutella</option>\n                    <option value=\"Strawberry\">Strawberry</option>\n                    <option value=\"Orange\">Orange</option>\n                    <option value=\"Lemon\">Lemon</option>\n                    <option value=\"Oreo\">Oreo</option>\n                </select></td>\n            </tr>)\n        }\n        let price = null\n        let actionBtn = null\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price per serving</td>\n                <td>{food.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removeFoodFromList}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addFoodToList}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price per serving</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={food.id}>\n            <tr>\n                <td class='food-details'>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{food.name}</td>\n                                <td></td>\n                            </tr>\n                            {ingredients}\n                            {flavor}\n                            <tr>\n                                <td>Serving quantity</td>\n                                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handleNumberOfServings} value={this.state.numOfServings} /></td>\n                            </tr>\n                            {price}\n                            <tr>\n                                <td>Special comments</td>\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </td>\n                <td class='food-image'>\n                    <img src={food.img}></img>\n                </td>\n                <td class='food-actions'>\n                    {actionBtn}\n                </td>\n            </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditFoodOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicSection.jsx",["152","153","154","155","156","157","158","159","160"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditMusicOption from './EditMusicOption'\n\nclass EditMusicSection extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            musicOptions: [],\n            MusicChosen: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('in cimponentDidMount of the EditFoodSection')\n        this.setState({ MusicChosen: this.props.event.musicList })\n        let finalMusicOptions = []\n\n        this.props.eventsStore.musicList.forEach(element => {\n            let item = this.props.event.musicList.filter(e => {\n                return e.id == element.id\n            })\n            if (item.length == 0) {\n                finalMusicOptions.push(element)\n            }\n        });\n        this.setState({ musicOptions: finalMusicOptions })\n\n    }\n\n    updateEventMusicList = () => {\n        let newEvent = { ...this.props.event }\n        newEvent.musicList = []\n        this.state.MusicChosen.forEach(element => newEvent.musicList.push(element))\n        this.props.updateEventState(newEvent)\n    }\n\n    updateChosenMusicDetails = (musicOption) => {\n        let newEvent = { ...this.props.event }\n        let index = newEvent.musicList.findIndex(element => { return element.id == musicOption.id })\n        // we are only interested in the chosen items\n        // generates a bug when trying to add a modified music option to list\n        if (index != -1) {\n            newEvent.musicList[index] = { ...musicOption }\n            this.props.updateEventState(newEvent)\n        }\n    }\n\n    trasnferMusicFromOptions = (musicOption) => {\n        console.log('In trasnferMusicFromOptions')\n        let newMusicOptions = []\n        this.state.musicOptions.forEach(element => {\n            if (element.id != musicOption.id) {\n                newMusicOptions.push(element)\n            }\n        })\n        let newMusicChosen = this.state.MusicChosen.map(element => { return element })\n        newMusicChosen.push(musicOption)\n        this.setState({\n            musicOptions: newMusicOptions,\n            MusicChosen: newMusicChosen\n        }, () => {\n            this.updateEventMusicList()\n            this.props.eventsStore.addMusicOptionToEvent(this.props.event, musicOption)\n        })\n\n\n    }\n\n    trasnferMusicFromChosen = (musicOption) => {\n        let newMusicOptions = this.state.musicOptions.map(element => { return element })\n        let newMusicChosen = []\n        this.state.MusicChosen.forEach(element => {\n            if (element.id != musicOption.id) {\n                newMusicChosen.push(element)\n            }\n        })\n        newMusicOptions.push(musicOption)\n        this.setState({\n            musicOptions: newMusicOptions,\n            MusicChosen: newMusicChosen\n        }, () => {\n            this.updateEventMusicList()\n            this.props.eventsStore.removeMusicOptionFromEvent(this.props.event, musicOption)\n        })\n\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'D.J') {\n            tabs.djTab.push(content)\n        }\n        else if (element.category == 'Singer') {\n            tabs.singerTab.push(content)\n        }\n        else if (element.category == 'Band') {\n            tabs.bandTab.push(content)\n        }\n        return tabs\n\n    }\n\n    render() {\n        const labels = ['D.J', 'Singer', 'Band']\n        const tabs = {\n            djTab: [],\n            singerTab: [],\n            bandTab: []\n        }\n        let content = null\n        this.state.MusicChosen.forEach(element => {\n            content = <EditMusicOption key={'chosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={true} moveToOptions={this.trasnferMusicFromChosen} updateMusicDetails={this.updateChosenMusicDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        this.state.musicOptions.forEach(element => {\n            content = <EditMusicOption key={'notChosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={false} moveToChosen={this.trasnferMusicFromOptions} updateMusicDetails={this.updateChosenMusicDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        const contents = [tabs.djTab, tabs.singerTab, tabs.bandTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicOption.jsx",["161","162","163"],"\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditMusicOption extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            specialComment: '',\n            isChosen: false,\n            musicOption: undefined\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n        this.setState(\n            {\n                specialComment: this.props.musicOption.specialComments,\n                isChosen: this.props.isChosen,\n                musicOption: this.props.musicOption\n            }\n        )\n    }\n\n    handleSpecialComment = (e) => {\n        let newMusicOption = {...this.state.musicOption}\n        newMusicOption.specialComments = e.target.value\n        this.setState({ specialComment: e.target.value }, this.props.updateMusicDetails(newMusicOption))\n    }\n\n    handlePrice = (e) => {\n        let newMusicOption = {...this.state.musicOption}\n        newMusicOption.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updateMusicDetails(newMusicOption))\n    }\n\n    removeMusicOptionFromList = () => {\n        this.props.moveToOptions(this.state.musicOption)\n    }\n\n    addMusicOptionToList = () => {\n        console.log('In addMusicOptionFromList')\n        this.props.moveToChosen(this.state.musicOption)\n    }\n\n    // id, category, name, phone, price, img, specialComments\n    render() {\n        if(this.state.musicOption == undefined){\n            return null\n        }\n        const musicOption = this.state.musicOption\n        let price = null\n        let actionBtn = null\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price</td>\n                <td>{musicOption.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removeMusicOptionFromList}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addMusicOptionToList}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={musicOption.id}>\n            <tr>\n                <td class='food-details'>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{musicOption.name}</td>\n                                <td></td>\n                            </tr>\n                            <tr>\n                                <td>Phone</td>\n                                <td>{musicOption.phone}</td>\n                            </tr>\n                            {price}\n                            <tr>\n                                <td>Special comments</td>\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </td>\n                <td class='food-image'>\n                    <img src={musicOption.img}></img>\n                </td>\n                <td class='food-actions'>\n                    {actionBtn}\n                </td>\n            </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceSection.jsx",["164","165","166","167","168","169","170"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceOption.jsx",["171","172","173","174"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFlowersSection.jsx",["175","176","177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":127,"column":88,"nodeType":"185","messageId":"186","endLine":127,"endColumn":90},{"ruleId":"183","severity":1,"message":"184","line":159,"column":80,"nodeType":"185","messageId":"186","endLine":159,"endColumn":82},{"ruleId":"183","severity":1,"message":"184","line":160,"column":96,"nodeType":"185","messageId":"186","endLine":160,"endColumn":98},{"ruleId":"183","severity":1,"message":"184","line":165,"column":75,"nodeType":"185","messageId":"186","endLine":165,"endColumn":77},{"ruleId":"183","severity":1,"message":"184","line":170,"column":75,"nodeType":"185","messageId":"186","endLine":170,"endColumn":77},{"ruleId":"183","severity":1,"message":"184","line":175,"column":80,"nodeType":"185","messageId":"186","endLine":175,"endColumn":82},{"ruleId":"183","severity":1,"message":"184","line":176,"column":102,"nodeType":"185","messageId":"186","endLine":176,"endColumn":104},{"ruleId":"183","severity":1,"message":"184","line":183,"column":73,"nodeType":"185","messageId":"186","endLine":183,"endColumn":75},{"ruleId":"183","severity":1,"message":"184","line":184,"column":76,"nodeType":"185","messageId":"186","endLine":184,"endColumn":78},{"ruleId":"183","severity":1,"message":"184","line":186,"column":74,"nodeType":"185","messageId":"186","endLine":186,"endColumn":76},{"ruleId":"183","severity":1,"message":"184","line":189,"column":74,"nodeType":"185","messageId":"186","endLine":189,"endColumn":76},{"ruleId":"183","severity":1,"message":"184","line":39,"column":29,"nodeType":"185","messageId":"186","endLine":39,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":18,"column":36,"nodeType":"185","messageId":"186","endLine":18,"endColumn":38},{"ruleId":"183","severity":1,"message":"187","line":31,"column":30,"nodeType":"185","messageId":"186","endLine":31,"endColumn":32},{"ruleId":"183","severity":1,"message":"187","line":38,"column":30,"nodeType":"185","messageId":"186","endLine":38,"endColumn":32},{"ruleId":"188","severity":1,"message":"189","line":40,"column":13,"nodeType":"190","endLine":40,"endColumn":74},{"ruleId":"188","severity":1,"message":"189","line":64,"column":60,"nodeType":"190","endLine":64,"endColumn":100},{"ruleId":"191","severity":1,"message":"192","line":64,"column":7,"nodeType":"193","messageId":"194","endLine":64,"endColumn":15},{"ruleId":"191","severity":1,"message":"195","line":67,"column":7,"nodeType":"193","messageId":"194","endLine":67,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":24,"column":29,"nodeType":"185","messageId":"186","endLine":24,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":26,"column":29,"nodeType":"185","messageId":"186","endLine":26,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":43,"column":76,"nodeType":"185","messageId":"186","endLine":43,"endColumn":78},{"ruleId":"183","severity":1,"message":"187","line":46,"column":19,"nodeType":"185","messageId":"186","endLine":46,"endColumn":21},{"ruleId":"183","severity":1,"message":"187","line":55,"column":28,"nodeType":"185","messageId":"186","endLine":55,"endColumn":30},{"ruleId":"183","severity":1,"message":"187","line":76,"column":28,"nodeType":"185","messageId":"186","endLine":76,"endColumn":30},{"ruleId":"183","severity":1,"message":"184","line":92,"column":30,"nodeType":"185","messageId":"186","endLine":92,"endColumn":32},{"ruleId":"183","severity":1,"message":"184","line":95,"column":35,"nodeType":"185","messageId":"186","endLine":95,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":98,"column":35,"nodeType":"185","messageId":"186","endLine":98,"endColumn":37},{"ruleId":"183","severity":1,"message":"187","line":76,"column":58,"nodeType":"185","messageId":"186","endLine":76,"endColumn":60},{"ruleId":"183","severity":1,"message":"187","line":82,"column":47,"nodeType":"185","messageId":"186","endLine":82,"endColumn":49},{"ruleId":"183","severity":1,"message":"184","line":97,"column":45,"nodeType":"185","messageId":"186","endLine":97,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":138,"column":21,"nodeType":"190","endLine":138,"endColumn":41},{"ruleId":"183","severity":1,"message":"184","line":23,"column":29,"nodeType":"185","messageId":"186","endLine":23,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":25,"column":29,"nodeType":"185","messageId":"186","endLine":25,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":42,"column":81,"nodeType":"185","messageId":"186","endLine":42,"endColumn":83},{"ruleId":"183","severity":1,"message":"187","line":45,"column":19,"nodeType":"185","messageId":"186","endLine":45,"endColumn":21},{"ruleId":"183","severity":1,"message":"187","line":55,"column":28,"nodeType":"185","messageId":"186","endLine":55,"endColumn":30},{"ruleId":"183","severity":1,"message":"187","line":76,"column":28,"nodeType":"185","messageId":"186","endLine":76,"endColumn":30},{"ruleId":"183","severity":1,"message":"184","line":92,"column":30,"nodeType":"185","messageId":"186","endLine":92,"endColumn":32},{"ruleId":"183","severity":1,"message":"184","line":95,"column":35,"nodeType":"185","messageId":"186","endLine":95,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":98,"column":35,"nodeType":"185","messageId":"186","endLine":98,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":53,"column":35,"nodeType":"185","messageId":"186","endLine":53,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":60,"column":45,"nodeType":"185","messageId":"186","endLine":60,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":99,"column":21,"nodeType":"190","endLine":99,"endColumn":48},{"ruleId":"191","severity":1,"message":"196","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":22},{"ruleId":"183","severity":1,"message":"184","line":33,"column":30,"nodeType":"185","messageId":"186","endLine":33,"endColumn":32},{"ruleId":"183","severity":1,"message":"184","line":36,"column":35,"nodeType":"185","messageId":"186","endLine":36,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":36,"column":71,"nodeType":"185","messageId":"186","endLine":36,"endColumn":73},{"ruleId":"183","severity":1,"message":"184","line":39,"column":35,"nodeType":"185","messageId":"186","endLine":39,"endColumn":37},{"ruleId":"183","severity":1,"message":"187","line":58,"column":70,"nodeType":"185","messageId":"186","endLine":58,"endColumn":72},{"ruleId":"183","severity":1,"message":"187","line":63,"column":62,"nodeType":"185","messageId":"186","endLine":63,"endColumn":64},{"ruleId":"183","severity":1,"message":"184","line":70,"column":36,"nodeType":"185","messageId":"186","endLine":70,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":79,"column":34,"nodeType":"185","messageId":"186","endLine":79,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":108,"column":45,"nodeType":"185","messageId":"186","endLine":108,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":142,"column":25,"nodeType":"190","endLine":142,"endColumn":52},{"ruleId":"183","severity":1,"message":"187","line":26,"column":74,"nodeType":"185","messageId":"186","endLine":26,"endColumn":76},{"ruleId":"183","severity":1,"message":"184","line":43,"column":32,"nodeType":"185","messageId":"186","endLine":43,"endColumn":34},{"ruleId":"183","severity":1,"message":"184","line":51,"column":106,"nodeType":"185","messageId":"186","endLine":51,"endColumn":108},{"ruleId":"183","severity":1,"message":"187","line":52,"column":34,"nodeType":"185","messageId":"186","endLine":52,"endColumn":36},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'tabIndex' is assigned a value but never used.","Identifier","unusedVar","'contentIndex' is assigned a value but never used.","'elementRoles' is defined but never used.","no-global-assign","no-unsafe-negation"]