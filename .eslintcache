[{"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/index.js":"1","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/App.js":"2","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/reportWebVitals.js":"3","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/EventStore.js":"4","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Event.js":"5","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Food.js":"6","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Music.js":"7","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Flowers.js":"8","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Place.js":"9","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Organiser.js":"10","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Theme.js":"11","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Client.js":"12","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditEvent.jsx":"13","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/TimePicker.jsx":"14","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditDetails.jsx":"15","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/DatePicker.jsx":"16","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditThemes.jsx":"17","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/Theme.jsx":"18","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/ThemePopup.jsx":"19","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/FullWidthTabs.jsx":"20","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodSection.jsx":"21","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodOption.jsx":"22","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicSection.jsx":"23","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicOption.jsx":"24","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceSection.jsx":"25","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceOption.jsx":"26","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFlowersSection.jsx":"27","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/MarketplaceStore.js":"28","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/AssignmentRequest.js":"29","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/MarketPlace.jsx":"30","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EventCard.jsx":"31","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EventsPage.jsx":"32","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/event.js":"33","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/Details.js":"34","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/theme.js":"35","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/food.js":"36","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/flowers.js":"37","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/music.js":"38","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/place.js":"39","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/tabs.js":"40","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/foodItem.js":"41","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/tab.js":"42"},{"size":775,"mtime":1611507242098,"results":"43","hashOfConfig":"44"},{"size":1854,"mtime":1611662483221,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1610984653721,"results":"46","hashOfConfig":"44"},{"size":13295,"mtime":1611661901003,"results":"47","hashOfConfig":"44"},{"size":1303,"mtime":1611650134321,"results":"48","hashOfConfig":"44"},{"size":853,"mtime":1611141214984,"results":"49","hashOfConfig":"44"},{"size":685,"mtime":1611394416185,"results":"50","hashOfConfig":"44"},{"size":514,"mtime":1611659454445,"results":"51","hashOfConfig":"44"},{"size":757,"mtime":1611427210326,"results":"52","hashOfConfig":"44"},{"size":377,"mtime":1611050432962,"results":"53","hashOfConfig":"44"},{"size":539,"mtime":1611592330304,"results":"54","hashOfConfig":"44"},{"size":445,"mtime":1610987075822,"results":"55","hashOfConfig":"44"},{"size":6015,"mtime":1611665227448,"results":"56","hashOfConfig":"44"},{"size":1063,"mtime":1611064468639,"results":"57","hashOfConfig":"44"},{"size":6217,"mtime":1611618912807,"results":"58","hashOfConfig":"44"},{"size":826,"mtime":1611065183931,"results":"59","hashOfConfig":"44"},{"size":2229,"mtime":1611618150253,"results":"60","hashOfConfig":"44"},{"size":1187,"mtime":1611088866456,"results":"61","hashOfConfig":"44"},{"size":2319,"mtime":1611088520648,"results":"62","hashOfConfig":"44"},{"size":2450,"mtime":1611499219565,"results":"63","hashOfConfig":"44"},{"size":4378,"mtime":1611394061841,"results":"64","hashOfConfig":"44"},{"size":5420,"mtime":1611182297540,"results":"65","hashOfConfig":"44"},{"size":4636,"mtime":1611573615015,"results":"66","hashOfConfig":"44"},{"size":3803,"mtime":1611397069656,"results":"67","hashOfConfig":"44"},{"size":2757,"mtime":1611478067781,"results":"68","hashOfConfig":"44"},{"size":5408,"mtime":1611478159875,"results":"69","hashOfConfig":"44"},{"size":8410,"mtime":1611596827125,"results":"70","hashOfConfig":"44"},{"size":6674,"mtime":1611664729321,"results":"71","hashOfConfig":"44"},{"size":255,"mtime":1611502868951,"results":"72","hashOfConfig":"44"},{"size":2809,"mtime":1611664943053,"results":"73","hashOfConfig":"44"},{"size":3204,"mtime":1611653478234,"results":"74","hashOfConfig":"44"},{"size":2291,"mtime":1611662182229,"results":"75","hashOfConfig":"44"},{"size":2258,"mtime":1611665260962,"results":"76","hashOfConfig":"44"},{"size":1168,"mtime":1611650134324,"results":"77","hashOfConfig":"44"},{"size":700,"mtime":1611650134329,"results":"78","hashOfConfig":"44"},{"size":1237,"mtime":1611650134326,"results":"79","hashOfConfig":"44"},{"size":1218,"mtime":1611650134326,"results":"80","hashOfConfig":"44"},{"size":1117,"mtime":1611650134328,"results":"81","hashOfConfig":"44"},{"size":1314,"mtime":1611650134328,"results":"82","hashOfConfig":"44"},{"size":1326,"mtime":1611650134329,"results":"83","hashOfConfig":"44"},{"size":1077,"mtime":1611650134327,"results":"84","hashOfConfig":"44"},{"size":726,"mtime":1611650134329,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1b0kdfg",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"88"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/index.js",[],["189","190"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/App.js",["191"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/reportWebVitals.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/EventStore.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Event.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Food.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Music.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Flowers.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Place.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Organiser.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Theme.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/Client.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditEvent.jsx",["213","214","215","216"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/TimePicker.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditDetails.jsx",["217","218"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TimePicker from './TimePicker';\nimport DatePicker from './DatePicker'\nimport TextField from '@material-ui/core/TextField';\n\n\nclass EditDetails extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            titleInput: '',\n            occasion: '',\n            startHour: '',\n            endHour: '',\n            date:''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            occasion: this.props.event.occasion,\n            startHour: this.props.event.startHour,\n            endHour: this.props.event.endHour,\n            date: this.props.event.date,\n            guests: this.props.event.numOfGuests,\n            titleInput: this.props.event.title\n        })\n    }\n\n    handleTitle = (e) => {\n        const newEvent = {...this.props.event}\n        newEvent.title = e.target.value\n        this.setState({\n            titleInput: e.target.value\n        }, this.props.updateEventState(newEvent))\n    }\n\n    handleStartHour = (hour) => {\n        const newEvent = {...this.props.event}\n        newEvent.startHour = hour\n        this.setState({\n            startHour: hour\n        }, this.props.updateEventState(newEvent))\n    }\n\n    handleEndHour = (hour) => {\n        const newEvent = {...this.props.event}\n        newEvent.endHour = hour\n        this.setState({\n            endHour: hour\n        }, this.props.updateEventState(newEvent))\n    }\n\n    handleDate = (date) => {\n        const newEvent = {...this.props.event}\n        newEvent.date = date\n        this.setState({\n            date: date\n        }, this.props.updateEventState(newEvent))\n    }\n\n    handleOccasion = (e) => {\n        const newEvent = {...this.props.event}\n        newEvent.occasion = e.target.value\n        this.setState({\n            occasion: e.target.value\n        }, async() => {await this.props.eventsStore.LoadAllThemes(e.target.value)\n            this.props.updateEventState(newEvent)\n            this.props.updateThemeList()})\n    }\n\n    handleGuests = (e) => {\n        const newEvent = {...this.props.event}\n        newEvent.guests = e.target.value\n        this.setState({\n            guests: e.target.value\n        }, this.props.updateEventState(newEvent))\n    }\n\n    render() {\n        let organiserName = null\n        let organiserPhone = null\n        let organiserEmail = null\n        if(this.props.event.organiser != null && this.props.event.organiser!=undefined ){\n            organiserName = (<td>{this.props.event.organiser.name}</td>)\n            organiserPhone = (<td>{this.props.event.organiser.phone}</td>)\n            organiserEmail = (<td>{this.props.event.organiser.email}</td>)\n        }\n        let clientName = null\n        let clientPhone = null\n        let clientEmail = null\n        let clientAddress = null\n        if(this.props.event.client != null && this.props.event.client!=undefined ){\n            clientName = (<td>{this.props.event.client.name}</td>)\n            clientPhone = (<td>{this.props.event.client.phone}</td>)\n            clientEmail = (<td>{this.props.event.client.email}</td>)\n            clientAddress = (<td>{this.props.event.client.address}</td>)\n        }\n        return (\n            <div>\n                <br></br>\n                <label className='status'><p>{this.props.event.status}</p></label>\n                <br></br>\n            <table>\n                <tbody>\n                    <tr className='info'>\n                        <td>Title</td>\n                        <td><input value={this.state.titleInput} onChange={this.handleTitle} placeholder='Type the name of your event'></input></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    <tr>\n\n                        <td>Client</td>\n                        {clientName}\n                        <td>Organiser</td>\n                        {organiserName}\n                    </tr>\n                    <tr>\n\n                        <td>Phone</td>\n                        {clientPhone}\n                        <td>Phone</td>\n                        {organiserPhone}\n                    </tr>\n                    <tr>\n\n                        <td>Email</td>\n                        {clientEmail}\n                        <td>Email</td>\n                        {organiserEmail}\n                    </tr>\n                    <tr>\n                        <td>address</td>\n                        {clientAddress}\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <td>Occasion</td>\n                        <td>\n                            <select value={this.state.occasion} onChange={this.handleOccasion}>\n                                <option value=\"Wedding\">Wedding</option>\n                                <option value=\"Birthday\">Birthday</option>\n                                <option value=\"Graduation\">Graduation</option>\n                                <option value=\"Engagement\">Engagement</option>\n                                <option value=\"baptism\">baptism</option>\n                            </select>\n                        </td>\n                        <td>Date</td>\n                        <td><DatePicker date={this.state.date} updateDate={this.handleDate}/></td>\n                    </tr>\n                    <tr>\n                        <td>Start hour</td>\n                        <td><TimePicker hour={this.state.startHour} updateHour={this.handleStartHour}/></td>\n                        <td>End hour</td>\n                        <td><TimePicker hour={this.state.endHour} updateHour={this.handleEndHour}/></td>\n                    </tr>\n                    <tr>\n                        <td>Number of guests</td>\n                        <td><TextField InputLabelProps={{ shrink: true}} type=\"number\" onChange={this.handleGuests} value={this.state.guests} /></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </table>\n            </div>\n\n        )\n    }\n\n\n\n}\n\nexport default inject(\"eventsStore\")(observer(EditDetails))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/DatePicker.jsx",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditThemes.jsx",["219","220","221"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport Theme from './Theme';\n\n\nclass EditThemes extends Component {\n    constructor() {\n        super()\n        this.state = {\n            toDisplayThemes:[],\n            allThemes: [],\n            current: 0\n        }\n    }\n\n    fillThemes(){\n        let themes = []\n        for(let i=this.state.current; i<this.props.eventsStore.themes.length; i++){\n            if(this.state.current+i==3){\n                break;\n            }\n            themes.push(this.props.eventsStore.themes[i])\n        }\n        this.setState({toDisplayThemes: themes})\n    }\n\n    componentDidMount(){\n        console.log('did mount')\n        this.fillThemes()\n    }\n    // componentDidUpdate(){\n    //     // this.setState({allThemes: this.props.updateThemeList})\n    //     this.fillThemes()\n    //     // this.fillThemes()\n    // }\n\n    moveLeft = () =>{\n        if(this.state.current!=0){\n            this.setState({current: this.state.current-1}, this.fillThemes())\n        }\n\n    }\n\n    moveRight = () => {\n        if(this.state.current!=this.props.eventsStore.themes.length-1){\n            this.setState({current: this.state.current+1}, this.fillThemes())\n        }\n    }\n\n    changeTheme = (theme) => {\n        this.props.eventsStore.changeTheme(this.props.event, theme)\n    }\n\n    render() {\n        console.log('rendering editThemes component')\n        // console.log('this.props.updateThemeList '+this.props.updateThemeList)\n        // if(this.props.updateThemeList){\n        //     this.fillThemes()\n        // }\n        const allThemes = this.state.toDisplayThemes.map(element => { return <Theme theme={element} key={element.id} changeTheme={this.changeTheme}/> })\n        // console.log(JSON.stringify(allThemes))\n\n        return (<table>\n            <tbody>\n                <tr>\n            {/* Display up to three themes */}\n            <td><button className='arrows' onClick={this.moveLeft}>{'<'}</button></td>\n            {allThemes}\n            <td><button className='arrows' onClick={this.moveRight}>{'>'}</button></td>\n            </tr>\n            </tbody>\n        </table>)\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(EditThemes))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/Theme.jsx",["222"],"\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport ThemePopup from './ThemePopup'\n\nclass Theme extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            openPopup:  false\n        }\n    }\n\n    viewPopup = () => {\n        this.setState({openPopup: true})\n    }\n\n    closePopup = () => {\n        this.setState({openPopup: false})\n    }\n\n    updateEvent = (theme) => {\n        this.props.changeTheme(theme)\n    }\n    \n    render(){\n        let text\n        if (this.props.theme.isChosen){\n            text = <div class=\"chosenTheme\">(Chosen)</div>\n        }\n        let popup\n        if (this.state.openPopup){\n            popup = <ThemePopup closePopup={this.closePopup} theme={this.props.theme} updateEvent={this.updateEvent}/>\n        }else{\n            popup = null\n        }\n        // to be changed later\n        return(<td className=\"ThemeRow\">\n            <img src={this.props.theme.mainImg} onClick={this.viewPopup}></img>\n            <div class=\"centered\">{this.props.theme.title}</div>\n            {text}\n            {popup}\n        </td>)\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(Theme))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/ThemePopup.jsx",["223"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function ThemePopup(props) {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    props.closePopup()\n  };\n\n  const chooseTheme = () => {\n    props.updateEvent(props.theme)\n  }  \n\n  const photos = props.theme.images.map(element => {return <img className='popupImg' src={element}></img>})\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {props.theme.title}\n        </DialogTitle>\n        <DialogContent dividers>\n          {photos}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={chooseTheme} color=\"primary\">\n            Choose\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/FullWidthTabs.jsx",["224","225"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    // width: '90vw',\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  let tabIndex = 0;\n  let tabs = props.labels.map((element, tabIndex) => {return <Tab label={element} {...a11yProps(tabIndex++)} />})\n\n  let contentIndex = 0\n  let tabPanels = props.content.map((element, contentIndex) => {return (<TabPanel value={value} index={contentIndex++} dir={theme.direction} p={props.content.length}>\n    {element}\n    </TabPanel>)})\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n        {tabs}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n      {tabPanels}\n      </SwipeableViews>\n    </div>\n  );\n}","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodSection.jsx",["226","227","228","229","230","231","232","233","234"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditFoodOption from './EditFoodOption';\n\n\nclass EditFoodSection extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            foodOptions: [],\n            foodChosen: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('in cimponentDidMount of the EditFoodSection')\n        this.setState({ foodChosen: this.props.event.food })\n        let finalFoodOptions = []\n\n        this.props.eventsStore.food.forEach(element => {\n            let item = this.props.event.food.filter(e => {\n                return e.id == element.id\n            })\n            if (item.length == 0) {\n                finalFoodOptions.push(element)\n            }\n        });\n        this.setState({ foodOptions: finalFoodOptions })\n\n    }\n\n    updateEventFoodList = () => {\n        let newEvent = { ...this.props.event }\n        newEvent.food = []\n        this.state.foodChosen.forEach(element => newEvent.food.push(element))\n        this.props.updateEventState(newEvent)\n    }\n\n    updateChosenFoodDetails = (food) => {\n        let newEvent = { ...this.props.event }\n        let index = newEvent.food.findIndex(element => { return element.id == food.id })\n        // we are only interested in the chosen items\n        // generates a bug when trying to add a modified food option to list\n        if (index != -1) {\n            newEvent.food[index] = { ...food }\n            this.props.updateEventState(newEvent)\n        }\n    }\n\n    trasnferFoodFromOptions = (food) => {\n        let newFoodOptions = []\n        this.state.foodOptions.forEach(element => {\n            if (element.id != food.id) {\n                newFoodOptions.push(element)\n            }\n        })\n        let newFoodChosen = this.state.foodChosen.map(element => { return element })\n        newFoodChosen.push(food)\n        this.setState({\n            foodOptions: newFoodOptions,\n            foodChosen: newFoodChosen\n        }, () => {\n            this.updateEventFoodList()\n            this.props.eventsStore.addFoodToList(this.props.event, food)\n        })\n\n\n    }\n\n    trasnferFoodFromChosen = (food) => {\n        let newFoodOptions = this.state.foodOptions.map(element => { return element })\n        let newFoodChosen = []\n        this.state.foodChosen.forEach(element => {\n            if (element.id != food.id) {\n                newFoodChosen.push(element)\n            }\n        })\n        newFoodOptions.push(food)\n        this.setState({\n            foodOptions: newFoodOptions,\n            foodChosen: newFoodChosen\n        }, () => {\n            this.updateEventFoodList()\n            this.props.eventsStore.removeFoodFromList(this.props.event, food)\n        })\n\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'sweets') {\n            tabs.sweetsTab.push(content)\n        }\n        else if (element.category == 'Dinner') {\n            tabs.mainDishTab.push(content)\n        }\n        else if (element.category == 'appetiser') {\n            tabs.appetiserTab.push(content)\n        }\n        return tabs\n\n    }\n\n    render() {\n        const labels = ['Sweets', 'Main Dish', 'Appetiser']\n        const tabs = {\n            sweetsTab: [],\n            mainDishTab: [],\n            appetiserTab: []\n        }\n        let content = null\n        this.state.foodChosen.forEach(element => {\n            content = <EditFoodOption key={'chosenFood' + element.id} event={this.props.event} food={element} isChosen={true} moveToOptions={this.trasnferFoodFromChosen} updateFoodDetails={this.updateChosenFoodDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        this.state.foodOptions.forEach(element => {\n            content = <EditFoodOption key={'notChosenFood' + element.id} event={this.props.event} food={element} isChosen={false} moveToChosen={this.trasnferFoodFromOptions} updateFoodDetails={this.updateChosenFoodDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        const contents = [tabs.sweetsTab, tabs.mainDishTab, tabs.appetiserTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditFoodSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFoodOption.jsx",["235","236","237","238"],"\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditFoodOption extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            numOfServings: 0,\n            specialComment: '',\n            flavor: '',\n            price: 0,\n            isChosen: false,\n            food: undefined\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n        this.setState(\n            {\n                numOfServings: this.props.food.quantity,\n                specialComment: this.props.food.specialComments,\n                flavor: this.props.food.flavor,\n                price: this.props.food.price,\n                isChosen: this.props.isChosen,\n                food: this.props.food\n            }\n        )\n    }\n\n    handlePrice = (e) => {\n        let newFood = {...this.state.food}\n        newFood.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleSpecialComment = (e) => {\n        let newFood = {...this.state.food}\n        newFood.specialComments = e.target.value\n        this.setState({ specialComment: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleNumberOfServings = (e) => {\n        let newFood = {...this.state.food}\n        newFood.quantity = e.target.value\n        this.setState({ numOfServings: e.target.value, food: newFood }, this.props.updateFoodDetails(newFood))\n    }\n\n    handleFlavor = (e) => {\n        let newFood = {...this.state.food}\n        newFood.flavor = e.target.value\n        this.setState({ flavor: e.target.value }, this.props.updateFoodDetails(newFood))\n    }\n\n    removeFoodFromList = () => {\n        // this.props.moveToOptions(this.props.food)\n        this.props.moveToOptions(this.state.food)\n    }\n\n    addFoodToList = () => {\n        // this.props.moveToChosen(this.props.food)\n        this.props.moveToChosen(this.state.food)\n    }\n\n    // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n    render() {\n        // console.log(JSON.stringify(this.props.food))\n        let ingredients = null\n        let flavor = null\n        const food = this.props.food\n        if (food.ingredients != null && food.ingredients !='') {\n            ingredients = (<tr>\n                <td>Ingredients:</td>\n                <td>{food.ingredients}</td>\n            </tr>)\n        }\n        if (food.flavor != null && food.flavor!=\"\") {\n            flavor = (<tr>\n                <td>Flavor:</td>\n                <td><select value={this.state.flavor} onChange={this.handleFlavor}>\n                    <option value=\"Nutella\">Nutella</option>\n                    <option value=\"Strawberry\">Strawberry</option>\n                    <option value=\"Orange\">Orange</option>\n                    <option value=\"Lemon\">Lemon</option>\n                    <option value=\"Oreo\">Oreo</option>\n                </select></td>\n            </tr>)\n        }\n        let price = null\n        let actionBtn = null\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price per serving</td>\n                <td>{food.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removeFoodFromList}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addFoodToList}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price per serving</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={food.id}>\n            <tr>\n                <td class='food-details'>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{food.name}</td>\n                                <td></td>\n                            </tr>\n                            {ingredients}\n                            {flavor}\n                            <tr>\n                                <td>Serving quantity</td>\n                                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handleNumberOfServings} value={this.state.numOfServings} /></td>\n                            </tr>\n                            {price}\n                            <tr>\n                                <td>Special comments</td>\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </td>\n                <td class='food-image'>\n                    <img src={food.img}></img>\n                </td>\n                <td class='food-actions'>\n                    {actionBtn}\n                </td>\n            </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditFoodOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicSection.jsx",["239","240","241","242","243","244","245","246","247"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditMusicOption from './EditMusicOption'\n\nclass EditMusicSection extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            musicOptions: [],\n            MusicChosen: []\n        }\n    }\n\n    componentDidMount() {\n        console.log('in cimponentDidMount of the EditFoodSection')\n        this.setState({ MusicChosen: this.props.event.musicList })\n        let finalMusicOptions = []\n\n        this.props.eventsStore.musicList.forEach(element => {\n            console.log('event: '+JSON.stringify(this.props.event))\n            let item = this.props.event.musicList.filter(e => {\n                return e.id == element.id\n            })\n            if (item.length == 0) {\n                finalMusicOptions.push(element)\n            }\n        });\n        this.setState({ musicOptions: finalMusicOptions })\n\n    }\n\n    updateEventMusicList = () => {\n        let newEvent = { ...this.props.event }\n        newEvent.musicList = []\n        this.state.MusicChosen.forEach(element => newEvent.musicList.push(element))\n        this.props.updateEventState(newEvent)\n    }\n\n    updateChosenMusicDetails = (musicOption) => {\n        let newEvent = { ...this.props.event }\n        let index = newEvent.musicList.findIndex(element => { return element.id == musicOption.id })\n        // we are only interested in the chosen items\n        // generates a bug when trying to add a modified music option to list\n        if (index != -1) {\n            newEvent.musicList[index] = { ...musicOption }\n            this.props.updateEventState(newEvent)\n        }\n    }\n\n    trasnferMusicFromOptions = (musicOption) => {\n        console.log('In trasnferMusicFromOptions')\n        let newMusicOptions = []\n        this.state.musicOptions.forEach(element => {\n            if (element.id != musicOption.id) {\n                newMusicOptions.push(element)\n            }\n        })\n        let newMusicChosen = this.state.MusicChosen.map(element => { return element })\n        newMusicChosen.push(musicOption)\n        this.setState({\n            musicOptions: newMusicOptions,\n            MusicChosen: newMusicChosen\n        }, () => {\n            this.updateEventMusicList()\n            this.props.eventsStore.addMusicOptionToEvent(this.props.event, musicOption)\n        })\n\n\n    }\n\n    trasnferMusicFromChosen = (musicOption) => {\n        let newMusicOptions = this.state.musicOptions.map(element => { return element })\n        let newMusicChosen = []\n        this.state.MusicChosen.forEach(element => {\n            if (element.id != musicOption.id) {\n                newMusicChosen.push(element)\n            }\n        })\n        newMusicOptions.push(musicOption)\n        this.setState({\n            musicOptions: newMusicOptions,\n            MusicChosen: newMusicChosen\n        }, () => {\n            this.updateEventMusicList()\n            this.props.eventsStore.removeMusicOptionFromEvent(this.props.event, musicOption)\n        })\n\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'D.J') {\n            tabs.djTab.push(content)\n        }\n        else if (element.category == 'Singer') {\n            tabs.singerTab.push(content)\n        }\n        else if (element.category == 'Band') {\n            tabs.bandTab.push(content)\n        }\n        return tabs\n\n    }\n\n    render() {\n        const labels = ['D.J', 'Singer', 'Band']\n        const tabs = {\n            djTab: [],\n            singerTab: [],\n            bandTab: []\n        }\n        let content = null\n        this.state.MusicChosen.forEach(element => {\n            content = <EditMusicOption key={'chosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={true} moveToOptions={this.trasnferMusicFromChosen} updateMusicDetails={this.updateChosenMusicDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        this.state.musicOptions.forEach(element => {\n            content = <EditMusicOption key={'notChosenMusic' + element.id} event={this.props.event} musicOption={element} isChosen={false} moveToChosen={this.trasnferMusicFromOptions} updateMusicDetails={this.updateChosenMusicDetails} />\n            this.assignContentToTab(tabs, element, content)\n        })\n        const contents = [tabs.djTab, tabs.singerTab, tabs.bandTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditMusicOption.jsx",["248","249","250"],"\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditMusicOption extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            specialComment: '',\n            isChosen: false,\n            musicOption: undefined\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, ingredients, quantity, price, img, specialComments, isChosen, flavor\n        this.setState(\n            {\n                specialComment: this.props.musicOption.specialComments,\n                isChosen: this.props.isChosen,\n                musicOption: this.props.musicOption\n            }\n        )\n    }\n\n    handleSpecialComment = (e) => {\n        let newMusicOption = {...this.state.musicOption}\n        newMusicOption.specialComments = e.target.value\n        this.setState({ specialComment: e.target.value }, this.props.updateMusicDetails(newMusicOption))\n    }\n\n    handlePrice = (e) => {\n        let newMusicOption = {...this.state.musicOption}\n        newMusicOption.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updateMusicDetails(newMusicOption))\n    }\n\n    removeMusicOptionFromList = () => {\n        this.props.moveToOptions(this.state.musicOption)\n    }\n\n    addMusicOptionToList = () => {\n        console.log('In addMusicOptionFromList')\n        this.props.moveToChosen(this.state.musicOption)\n    }\n\n    // id, category, name, phone, price, img, specialComments\n    render() {\n        if(this.state.musicOption == undefined){\n            return null\n        }\n        const musicOption = this.state.musicOption\n        let price = null\n        let actionBtn = null\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price</td>\n                <td>{musicOption.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removeMusicOptionFromList}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addMusicOptionToList}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={musicOption.id}>\n            <tr>\n                <td class='food-details'>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>{musicOption.name}</td>\n                                <td></td>\n                            </tr>\n                            <tr>\n                                <td>Phone</td>\n                                <td>{musicOption.phone}</td>\n                            </tr>\n                            {price}\n                            <tr>\n                                <td>Special comments</td>\n                                <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComment}></textarea></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </td>\n                <td class='food-image'>\n                    <img src={musicOption.img}></img>\n                </td>\n                <td class='food-actions'>\n                    {actionBtn}\n                </td>\n            </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceSection.jsx",["251","252","253","254","255","256","257"],"import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FullWidthTabs from './FullWidthTabs'\nimport EditPlaceOption from './EditPlaceOption'\nimport { elementRoles } from 'aria-query';\n\nclass EditPlaceSection extends Component {\n    constructor() {\n        super()\n        this.state = {\n            placeOption: null\n        }\n    }\n\n    removePlace = () => {\n        this.setState({placeOption: null}, this.updatePlaceDetails(null))\n    }\n    addPlace = (placeOption) => {\n        this.setState({placeOption: placeOption}, this.updatePlaceDetails(placeOption))\n    }\n\n    updatePlaceDetails = (placeOption) => {\n        let newEvent = { ...this.props.event }\n        if(placeOption == null){\n            newEvent.place = null\n        }else{\n            newEvent.place = { ...placeOption }\n        }\n        this.props.updateEventState(newEvent)\n    }\n\n    assignContentToTab(tabs, element, content) {\n        if (element.category == 'private') {\n            tabs.privateTab.push(content)\n        }\n        else if (element.category == 'open space' || element.category == 'Park') {\n            tabs.openSpaceTab.push(content)\n        }\n        else if (element.category == 'hall') {\n            tabs.hallTab.push(content)\n        }\n        return tabs\n\n    }\n\n    componentDidMount(){\n        this.setState({placeOption: this.props.event.place})\n    }\n\n    render() {\n        const labels = ['Private', 'Open Space', 'Hall']\n        const tabs = {\n            privateTab: [],\n            openSpaceTab: [],\n            hallTab: []\n        }\n        let content = null\n        if (this.props.event.place != null && this.props.event.place != undefined) {\n            content = <EditPlaceOption key={'chosenPlace' + this.props.event.place.id} event={this.props.event} placeOption={this.props.event.place} isChosen={true} updatePlaceDetails={this.updatePlaceDetails} removePlace={this.removePlace} />\n            this.assignContentToTab(tabs, this.props.event.place, content)\n        }\n        this.props.eventsStore.places.forEach(element => {\n            if (this.props.event.place == null || element.id != this.props.event.place.id) {\n                content = <EditPlaceOption key={'notChosenPlace' + element.id} event={this.props.event} placeOption={element} isChosen={false} updatePlaceDetails={this.updatePlaceDetails} addPlace={this.addPlace}/>\n                this.assignContentToTab(tabs, element, content)\n            }\n        })\n        const contents = [tabs.privateTab, tabs.openSpaceTab, tabs.hallTab]\n        return (\n            <div>\n                <FullWidthTabs labels={labels} content={contents} />\n            </div>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditPlaceSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditPlaceOption.jsx",["258","259","260","261"],"\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nclass EditMusicOption extends Component {\n    constructor() {\n        super()\n        this.state = {\n            specialComment: '',\n            isChosen: false,\n            placeOption: undefined,\n            name: '',\n            address: '',\n            phone: ''\n        }\n    }\n\n    componentDidMount() {\n        // id, category, name, phone, address, price, img, specialComments\n        this.setState(\n            {\n                specialComment: this.props.placeOption.specialComments,\n                isChosen: this.props.isChosen,\n                placeOption: this.props.placeOption,\n                name: this.props.placeOption.name,\n                address: this.props.placeOption.address,\n                phone: this.props.placeOption.phone\n            }\n        )\n    }\n\n    handlePrice = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.price = e.target.value\n        this.setState({ price: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n    handleSpecialComments = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.specialComments = e.target.value\n        this.setState({ specialComments: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n    handleName = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.name = e.target.value\n        this.setState({ name: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n    handleAddress = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.address = e.target.value\n        this.setState({ address: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n\n    handlePhone = (e) => {\n        let newPlaceOption = { ...this.state.placeOption }\n        newPlaceOption.phone = e.target.value\n        this.setState({ phone: e.target.value }, this.props.updatePlaceDetails(newPlaceOption))\n    }\n\n    removePlace = () => {\n        this.props.removePlace()\n    }\n    \n    addPlace = () => {\n        this.props.addPlace(this.state.placeOption)\n    }\n\n    render() {\n        if (this.state.placeOption == undefined) {\n            return null\n        }\n        const placeOption = this.state.placeOption\n        let price = null\n        let actionBtn = null\n        let name = null\n        let address = null\n        let phone = null\n        if (placeOption.category == 'private') {\n            name = (<tr>\n                <td>Place</td>\n                <td><input onChange={this.handleName} value={this.state.name} /></td>\n            </tr>)\n            address = (<tr>\n                <td>Address</td>\n                <td><input onChange={this.handleAddress} value={this.state.address} /></td>\n            </tr>)\n            phone = (<tr>\n                <td>Phone</td>\n                <td><input onChange={this.handlePhone} value={this.state.phone} /></td>\n            </tr>)\n        } else {\n            name = (<tr>\n                <td>Address</td>\n                <td>{placeOption.name}</td>\n            </tr>)\n            address = (<tr>\n                <td>Address</td>\n                <td>{placeOption.address}</td>\n            </tr>)\n            address = (<tr>\n                <td>Phone</td>\n                <td>{placeOption.phone}</td>\n            </tr>)\n\n        }\n        // User is either a client or an organiser\n        if (this.props.eventsStore.userType == 'client') {\n            price = (<tr>\n                <td>Price</td>\n                <td>{placeOption.price} ₪</td>\n            </tr>)\n            if (this.state.isChosen) {\n                actionBtn = <Button className='tabBtn' onClick={this.removePlace}>Remove</Button>\n            } else {\n                actionBtn = <Button className='tabBtn' onClick={this.addPlace}>Add</Button>\n            }\n        } else {\n            price = (<tr>\n                <td>Price</td>\n                <td><TextField InputLabelProps={{ shrink: true }} type=\"number\" onChange={this.handlePrice} value={this.state.price} /></td>\n            </tr>)\n        }\n        return (\n            <table class=\"food-option\" data-id={placeOption.id}>\n                <tr>\n                    <td class='food-details'>\n                        <table>\n                            <tbody>\n                                {name}\n                                {address}\n                                {phone}\n                                {price}\n                                <tr>\n                                    <td>Special comments</td>\n                                    <td><textarea value={this.state.specialComment} onChange={this.handleSpecialComments}></textarea></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </td>\n                    <td class='food-image'>\n                        <img src={placeOption.img}></img>\n                    </td>\n                    <td class='food-actions'>\n                        {actionBtn}\n                    </td>\n                </tr>\n            </table>\n        )\n    }\n}\nexport default inject(\"eventsStore\")(observer(EditMusicOption))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EditFlowersSection.jsx",["262","263","264","265"],"\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass EditFlowersSection extends Component {\n    constructor() {\n        super()\n        this.state = {\n            savedRosesData: null,\n            flowersType: '',\n            flowersOnTable: false,\n            flowersOnTablePrice: 0,\n            flowersOnEntryDoor: false,\n            flowersOnEntryDoorPrice: 0,\n            NumberOfFlowersStands: 0,\n            flowersStandsPRice: 0\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.event.flowers.category)\n        if (this.props.event.flowers != null && this.props.event.flowers != undefined) {\n            this.setState({\n                savedRosesData: {...this.props.event.flowers},\n                flowersType: this.props.event.flowers.category,\n                flowersOnTable: this.props.event.flowers.table.onTable,\n                flowersOnTablePrice: this.props.event.flowers.table.price,\n                flowersOnEntryDoor: this.props.event.flowers.entry.onEntry,\n                flowersOnEntryDoorPrice: this.props.event.flowers.entry.price,\n                NumberOfFlowersStands: this.props.event.flowers.stands.numOfStands,\n                flowersStandsPRice: this.props.event.flowers.stands.price\n            })\n        }\n    }\n\n    handleFlowersType = (e) => {\n        this.setState({ flowersType: e.target.value}, ()=> {\n            let newFlowersDetails\n            if (e.target.value == this.state.savedRosesData.category){\n                newFlowersDetails = {...this.state.savedRosesData}\n                this.setState({\n                    flowersOnTablePrice: this.state.savedRosesData.table.price,\n                    flowersOnEntryDoorPrice: this.state.savedRosesData.entry.price,\n                    flowersStandsPRice: this.state.savedRosesData.stands.price\n                }, this.updateFlowersDetails(newFlowersDetails))\n            }else{\n                const element = this.props.eventsStore.flowers.filter(element => { return e.target.value == element.category})\n                if(element.length!=0){\n                    newFlowersDetails = {\n                        //'Rose', {onTable: true, price: 50}, {onEntry: true, price: 1500}, {numOfStands: 6, price: 150}\n                        category: this.state.flowersType,\n                        table: {\n                            onTable: this.state.flowersOnTable,\n                            price: this.state.flowersOnTablePrice\n                        },\n                        entry: {\n                            onEntry: this.state.flowersOnEntryDoor,\n                            price: this.state.flowersOnEntryDoorPrice\n                        },\n                        stands: {\n                            numOfStands: this.state.NumberOfFlowersStands,\n                            price: this.state.flowersStandsPRice\n                        }\n                    }\n                    this.setState({\n                        flowersOnTablePrice: element[0].onTablePrice,\n                        flowersOnEntryDoorPrice: element[0].onEntryPrice,\n                        flowersStandsPRice: element[0].standPrice\n                    }, this.updateFlowersDetails(newFlowersDetails))\n                }\n                }\n            })\n        \n    }\n\n    updateFlowersDetails = (flowersDetails) => {\n        let newEvent = { ...this.props.event }\n        newEvent.flowers = { ...flowersDetails }\n        this.props.updateEventState(newEvent)\n    }\n\n    handleOnTable= (e) => {\n        const newFlowersDetails = {\n            category: this.state.flowersType,\n            table: {\n                onTable: !(this.state.flowersOnTable),\n                price: this.state.flowersOnTablePrice\n            },\n            entry: {\n                onEntry: this.state.flowersOnEntryDoor,\n                price: this.state.flowersOnEntryDoorPrice\n            },\n            stands: {\n                numOfStands: this.state.NumberOfFlowersStands,\n                price: this.state.flowersStandsPRice\n            }\n        }\n        this.setState({ flowersOnTable: !this.state.flowersOnTable }, this.updateFlowersDetails(newFlowersDetails))\n    }\n    handleOnEntry= (e) => {\n        const newFlowersDetails = {\n            category: this.state.flowersType,\n            table: {\n                onTable: this.state.flowersOnTable,\n                price: this.state.flowersOnTablePrice\n            },\n            entry: {\n                onEntry: !this.state.flowersOnEntryDoor,\n                price: this.state.flowersOnEntryDoorPrice\n            },\n            stands: {\n                numOfStands: this.state.NumberOfFlowersStands,\n                price: this.state.flowersStandsPRice\n            }\n        }\n        this.setState({ flowersOnEntryDoor: !this.state.flowersOnEntryDoor }, this.updateFlowersDetails(newFlowersDetails))\n    }\n\n    handleStandsNumber = (e) =>{\n        const newFlowersDetails = {\n            category: this.state.flowersType,\n            table: {\n                onTable: this.state.flowersOnTable,\n                price: this.state.flowersOnTablePrice\n            },\n            entry: {\n                onEntry: !this.state.flowersOnEntryDoor,\n                price: this.state.flowersOnEntryDoorPrice\n            },\n            stands: {\n                numOfStands: e.target.value,\n                price: this.state.flowersStandsPRice\n            }\n        }\n        this.setState({NumberOfFlowersStands: e.target.value}, this.updateFlowersDetails(newFlowersDetails))\n    }\n\n    render() {\n        let options = null\n        if(this.props.eventsStore.flowers){\n             options = this.props.eventsStore.flowers.map(element => {\n                return <option value={element.category} data-id={element.id}>{element.category}</option>\n            })\n        }\n        \n        return (\n            <table className='flowersSection'>\n                <tbody>\n                    <tr>\n                        <td>Main flowers type in decoration</td>\n                        <td><select value={this.state.flowersType} onChange={this.handleFlowersType}>\n                            {options}\n                        </select></td>\n                    </tr>\n                    <tr>\n                        <td>Flowers on table</td>\n                        <td><FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.flowersOnTable}\n                                    onChange={this.handleOnTable}\n                                    name=\"checkedOnTable\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Primary\"\n                        /></td>\n                        <td>price/table</td>\n                        <td>{this.state.flowersOnTablePrice}₪</td>\n                    </tr>\n                    <tr>\n                        <td>Flowers on entry door</td>\n                        <td><FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.flowersOnEntryDoor}\n                                    onChange={this.handleOnEntry}\n                                    name=\"checkedOnEntry\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Primary\"\n                        /></td>\n                        <td>price</td>\n                        <td>{this.state.flowersOnEntryDoorPrice}₪</td>\n                    </tr>\n                    <tr>\n                        <td>Number of flowers stands</td>\n                        <td><TextField InputLabelProps={{ shrink: true}} type=\"number\" onChange={this.handleStandsNumber} value={this.state.NumberOfFlowersStands} /></td>\n                        <td>price/stand</td>\n                        <td>{this.state.flowersStandsPRice}₪</td>\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n\n}\nexport default inject(\"eventsStore\")(observer(EditFlowersSection))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/MarketplaceStore.js",["266","267","268","269","270","271","272","273","274","275","276"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/classes/AssignmentRequest.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/MarketPlace.jsx",["277","278","279","280","281"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EventCard.jsx",["282","283","284"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { Button } from '@material-ui/core';\nimport { Route, withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nexport default function EventCard(props) {\n    const classes = useStyles();\n\n    const viewEvent = () => {\n        // Route to view event page\n        props.viewEvent(props.event)\n    }\n\n    const assignEventRequest = () => {\n        props.assignEventRequest(props.event)\n    }\n\n    let photoSrc\n    const occasion = props.event.occasion.toLowerCase()\n    switch (occasion) {\n        case 'wedding': photoSrc = '/images/wedding.jpg'\n            break\n        case 'birthday': photoSrc = '/images/birthday.jpg'\n            break\n        case 'baptism': photoSrc = '/images/baptism.png'\n            break\n        case 'engagement': photoSrc = '/images/engagement.jpg'\n            break\n        case 'graduation': photoSrc = '/images/graduation.png'\n            break\n        default: photoSrc = ''\n    }\n    if(!props.display){\n            return null\n    }\n    let requestBtn = null\n    if(props.userType== 'organiser' && props.showAssignmentBtn){\n        requestBtn = <Button onClick={assignEventRequest}>Request for assignment</Button>\n    }\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                title={props.event.title}\n                subheader={props.event.date}\n            />\n            <CardMedia\n                className={classes.media}\n                image={photoSrc}\n                title={occasion}\n            />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Client's address: {props.event.client.address}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Start hour: {props.event.startHour} - End hour: {props.event.endHour}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Number of guests: {props.event.numOfGuests}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <Button onClick={viewEvent}>View</Button>\n                {requestBtn}\n            </CardActions>\n        </Card>\n    );\n}","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/EventsPage.jsx",["285","286","287","288","289"],"import React, { Component } from \"react\";\nimport { observer, inject } from 'mobx-react'\nimport EventCard from \"./EventCard\";\nimport { Button } from \"@material-ui/core\";\nimport Event from '../classes/Event'\nimport Flowers from \"../classes/Flowers\";\nimport { Route, withRouter } from 'react-router-dom';\n\n\nclass EventsPage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            occasionFilter: 'All',\n            searchStr: '',\n            cardsToShow: [],\n            createBtn: null\n        }\n    }\n    \n    componentWillMount() {\n        // this.props.eventsStore.loadDummyDataToStore()   // data is already loaded in the app.js file\n        console.log('userType: '+this.props.eventsStore.userType)\n        if (this.props.eventsStore.userType == 'client') {\n            console.log('create button should appear')\n            this.setState({\n                cardsToShow: this.props.eventsStore.events,\n                createBtn: <Button className='tabBtn' onClick={this.createNewEvent}>Create</Button>\n            })\n        } else {\n            console.log('create button should not appear')\n            this.setState({\n                cardsToShow: this.props.eventsStore.events\n            })\n        }\n    }\n\n    viewEvent = (event) => {\n        // Route to view event page\n        console.log(event)\n        this.props.history.push({\n            pathname: '/viewEvent',\n            state: { eventId: event.id}\n        });\n    }\n\n    createNewEvent = () => {\n        // route to EditEvent component\n        this.props.history.push({\n            pathname: '/createEvent'\n        });\n    }\n\n    render() {\n        const cards = this.state.cardsToShow.map(element => {\n            if (element == null || element == undefined) {\n                return null\n            }\n            return <div className='card' key={'div-' + element.id}><EventCard display={true} key={element.id} event={element} userType={this.props.eventsStore.userType} showAssignmentBtn={false} viewEvent={this.viewEvent}/></div>\n        })\n        return (\n            <div class='pageContent'>\n                {this.state.createBtn}\n                <hr></hr>\n                {cards}\n            </div>)\n    }\n}\n\nexport default withRouter(inject(\"eventsStore\")(observer(EventsPage)))","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/event.js",["290","291"],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/Details.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/theme.js",["292","293"],"import React, { Component } from 'react';\n\nclass Theme extends Component {\n    render() {\n        const theme = this.props.theme\n        return(\n            <div className=\"themes\">\n                <h1>Theme</h1>\n                <div className=\"themes-details\">\n                <div>\n                <h2>{theme.title}</h2>\n                <div className=\"main-img\">\n                    <img src={theme.mainImg}></img>\n                    \n                </div>\n                </div>\n                <div className=\"images\">\n                    {theme.images.map(i => {return <img src={i}/>})}\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Theme;","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/food.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/flowers.js",["294"],"import React, { Component } from 'react';\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\n\nclass Flowers extends Component {\n  render() {\n    const flowers = this.props.flowers\n    const onTable = flowers.table.onTable\n    const onEntry = flowers.entry.onEntry\n    let yes = <FaCheck /> \n    let no = <FaTimes />\n    let onTableIcon, onEntryIcon\n    onTable ? onTableIcon = yes : onTableIcon = no\n    onEntry ? onEntryIcon = yes : onEntryIcon = no\n    return(\n      <div className=\"flowers\">\n        <h1>Flowers</h1>\n        <div className=\"flowers-item\">\n               <div>\n                   <span>Flowers on entry door {onEntryIcon}</span>\n                   <span>Flowers on tables {onTableIcon}</span>\n                   <span>Number of flower Stands {flowers.stands.numOfStands}</span>\n               </div>\n               <div>\n                   <span>Price: {flowers.entry.price}</span>\n                   <span>Price: {flowers.table.price}</span>\n                   <span>Price/stand: {flowers.stands.price}</span>\n\n               </div>\n               <div>\n                   <img src={flowers.Img} />\n               </div>\n            \n        </div>\n        </div>\n    )\n}\n}\n\nexport default Flowers;","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/music.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/place.js",["295"],"import React, { Component } from 'react';\n\nclass Place extends Component {\n    render() {\n        const place = this.props.place\n        return(\n            <div className=\"place\">\n                <h1>Place</h1>\n                <div className=\"place-details\">\n                <div>\n                    <div>\n                        <h3>Type: </h3>\n                        <span>{place.category}</span>\n                    </div>\n                    <div>\n                        <h3>Name: </h3>\n                        <span>{place.name}</span>\n                    </div>\n                    <div>\n                        <h3>Phone: </h3>\n                        <span>{place.phone}</span>\n                    </div>\n                    <div>\n                        <h3>Address: </h3>\n                        <span>{place.address}</span>\n                    </div>\n                    <div>\n                        <h3>Price: </h3>\n                        <span>{place.price}</span>\n                    </div>\n                    <div>\n                    <h3>special comments: </h3>\n                    <span>{place.specialComments}</span>\n                </div>\n                </div>\n                    <img src={place.img} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Place;","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/tabs.js",[],"/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/foodItem.js",["296"],"import React, { Component } from 'react';\n\nclass FoodItem extends Component {\n    render() {\n        const item = this.props.item\n        return(\n            <div className=\"food-item\">\n                <div>\n                <h2>{item.name}</h2>\n                <div>\n                    <h3>Ingredients: </h3>\n                    <span>{item.ingredients}</span>\n                </div>\n                <div>\n                    <div>\n                        <h3>Quantity/Dish: </h3>\n                        <span>{item.quantity}</span>\n                    </div>\n                    <div>\n                        <h3>Price/Dish: </h3>\n                        <span>{item.price}</span>\n                    </div>\n                </div>\n                <div>\n                    <h3>special comments: </h3>\n                    <span>{item.specialComments}</span>\n                </div>\n                </div>\n                <div>\n                    <img src={item.img}></img>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default FoodItem;","/Users/aseel/elevation/code/elevation-exercises/project/event-organizer/src/components/viewEventComponents/tab.js",[],{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":9,"column":34,"nodeType":"303","messageId":"304","endLine":9,"endColumn":41},{"ruleId":"301","severity":1,"message":"305","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":13},{"ruleId":"301","severity":1,"message":"306","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":12},{"ruleId":"301","severity":1,"message":"307","line":7,"column":8,"nodeType":"303","messageId":"304","endLine":7,"endColumn":15},{"ruleId":"301","severity":1,"message":"308","line":8,"column":8,"nodeType":"303","messageId":"304","endLine":8,"endColumn":13},{"ruleId":"301","severity":1,"message":"309","line":9,"column":8,"nodeType":"303","messageId":"304","endLine":9,"endColumn":13},{"ruleId":"310","severity":1,"message":"311","line":56,"column":71,"nodeType":"312","messageId":"313","endLine":56,"endColumn":73},{"ruleId":"310","severity":1,"message":"311","line":147,"column":26,"nodeType":"312","messageId":"313","endLine":147,"endColumn":28},{"ruleId":"310","severity":1,"message":"311","line":170,"column":37,"nodeType":"312","messageId":"313","endLine":170,"endColumn":39},{"ruleId":"310","severity":1,"message":"311","line":193,"column":88,"nodeType":"312","messageId":"313","endLine":193,"endColumn":90},{"ruleId":"310","severity":1,"message":"314","line":209,"column":20,"nodeType":"312","messageId":"313","endLine":209,"endColumn":22},{"ruleId":"310","severity":1,"message":"311","line":219,"column":88,"nodeType":"312","messageId":"313","endLine":219,"endColumn":90},{"ruleId":"310","severity":1,"message":"311","line":299,"column":80,"nodeType":"312","messageId":"313","endLine":299,"endColumn":82},{"ruleId":"310","severity":1,"message":"311","line":300,"column":96,"nodeType":"312","messageId":"313","endLine":300,"endColumn":98},{"ruleId":"310","severity":1,"message":"311","line":305,"column":75,"nodeType":"312","messageId":"313","endLine":305,"endColumn":77},{"ruleId":"310","severity":1,"message":"311","line":310,"column":75,"nodeType":"312","messageId":"313","endLine":310,"endColumn":77},{"ruleId":"310","severity":1,"message":"311","line":315,"column":80,"nodeType":"312","messageId":"313","endLine":315,"endColumn":82},{"ruleId":"310","severity":1,"message":"311","line":316,"column":102,"nodeType":"312","messageId":"313","endLine":316,"endColumn":104},{"ruleId":"310","severity":1,"message":"311","line":323,"column":73,"nodeType":"312","messageId":"313","endLine":323,"endColumn":75},{"ruleId":"310","severity":1,"message":"311","line":324,"column":76,"nodeType":"312","messageId":"313","endLine":324,"endColumn":78},{"ruleId":"310","severity":1,"message":"311","line":326,"column":74,"nodeType":"312","messageId":"313","endLine":326,"endColumn":76},{"ruleId":"310","severity":1,"message":"311","line":329,"column":74,"nodeType":"312","messageId":"313","endLine":329,"endColumn":76},{"ruleId":"301","severity":1,"message":"315","line":12,"column":10,"nodeType":"303","messageId":"304","endLine":12,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":27,"column":30,"nodeType":"312","messageId":"313","endLine":27,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":27,"column":72,"nodeType":"312","messageId":"313","endLine":27,"endColumn":74},{"ruleId":"310","severity":1,"message":"311","line":113,"column":30,"nodeType":"312","messageId":"313","endLine":113,"endColumn":32},{"ruleId":"310","severity":1,"message":"314","line":86,"column":76,"nodeType":"312","messageId":"313","endLine":86,"endColumn":78},{"ruleId":"310","severity":1,"message":"314","line":95,"column":70,"nodeType":"312","messageId":"313","endLine":95,"endColumn":72},{"ruleId":"310","severity":1,"message":"311","line":19,"column":36,"nodeType":"312","messageId":"313","endLine":19,"endColumn":38},{"ruleId":"310","severity":1,"message":"314","line":38,"column":30,"nodeType":"312","messageId":"313","endLine":38,"endColumn":32},{"ruleId":"310","severity":1,"message":"314","line":45,"column":30,"nodeType":"312","messageId":"313","endLine":45,"endColumn":32},{"ruleId":"316","severity":1,"message":"317","line":40,"column":13,"nodeType":"318","endLine":40,"endColumn":74},{"ruleId":"316","severity":1,"message":"317","line":64,"column":60,"nodeType":"318","endLine":64,"endColumn":100},{"ruleId":"301","severity":1,"message":"319","line":64,"column":7,"nodeType":"303","messageId":"304","endLine":64,"endColumn":15},{"ruleId":"301","severity":1,"message":"320","line":67,"column":7,"nodeType":"303","messageId":"304","endLine":67,"endColumn":19},{"ruleId":"310","severity":1,"message":"311","line":24,"column":29,"nodeType":"312","messageId":"313","endLine":24,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":26,"column":29,"nodeType":"312","messageId":"313","endLine":26,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":43,"column":76,"nodeType":"312","messageId":"313","endLine":43,"endColumn":78},{"ruleId":"310","severity":1,"message":"314","line":46,"column":19,"nodeType":"312","messageId":"313","endLine":46,"endColumn":21},{"ruleId":"310","severity":1,"message":"314","line":55,"column":28,"nodeType":"312","messageId":"313","endLine":55,"endColumn":30},{"ruleId":"310","severity":1,"message":"314","line":76,"column":28,"nodeType":"312","messageId":"313","endLine":76,"endColumn":30},{"ruleId":"310","severity":1,"message":"311","line":92,"column":30,"nodeType":"312","messageId":"313","endLine":92,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":95,"column":35,"nodeType":"312","messageId":"313","endLine":95,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":98,"column":35,"nodeType":"312","messageId":"313","endLine":98,"endColumn":37},{"ruleId":"310","severity":1,"message":"314","line":76,"column":58,"nodeType":"312","messageId":"313","endLine":76,"endColumn":60},{"ruleId":"310","severity":1,"message":"314","line":82,"column":47,"nodeType":"312","messageId":"313","endLine":82,"endColumn":49},{"ruleId":"310","severity":1,"message":"311","line":97,"column":45,"nodeType":"312","messageId":"313","endLine":97,"endColumn":47},{"ruleId":"316","severity":1,"message":"317","line":138,"column":21,"nodeType":"318","endLine":138,"endColumn":41},{"ruleId":"310","severity":1,"message":"311","line":24,"column":29,"nodeType":"312","messageId":"313","endLine":24,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":26,"column":29,"nodeType":"312","messageId":"313","endLine":26,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":43,"column":81,"nodeType":"312","messageId":"313","endLine":43,"endColumn":83},{"ruleId":"310","severity":1,"message":"314","line":46,"column":19,"nodeType":"312","messageId":"313","endLine":46,"endColumn":21},{"ruleId":"310","severity":1,"message":"314","line":56,"column":28,"nodeType":"312","messageId":"313","endLine":56,"endColumn":30},{"ruleId":"310","severity":1,"message":"314","line":77,"column":28,"nodeType":"312","messageId":"313","endLine":77,"endColumn":30},{"ruleId":"310","severity":1,"message":"311","line":93,"column":30,"nodeType":"312","messageId":"313","endLine":93,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":96,"column":35,"nodeType":"312","messageId":"313","endLine":96,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":99,"column":35,"nodeType":"312","messageId":"313","endLine":99,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":53,"column":35,"nodeType":"312","messageId":"313","endLine":53,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":60,"column":45,"nodeType":"312","messageId":"313","endLine":60,"endColumn":47},{"ruleId":"316","severity":1,"message":"317","line":99,"column":21,"nodeType":"318","endLine":99,"endColumn":48},{"ruleId":"301","severity":1,"message":"321","line":5,"column":10,"nodeType":"303","messageId":"304","endLine":5,"endColumn":22},{"ruleId":"310","severity":1,"message":"311","line":33,"column":30,"nodeType":"312","messageId":"313","endLine":33,"endColumn":32},{"ruleId":"310","severity":1,"message":"311","line":36,"column":35,"nodeType":"312","messageId":"313","endLine":36,"endColumn":37},{"ruleId":"310","severity":1,"message":"311","line":36,"column":71,"nodeType":"312","messageId":"313","endLine":36,"endColumn":73},{"ruleId":"310","severity":1,"message":"311","line":39,"column":35,"nodeType":"312","messageId":"313","endLine":39,"endColumn":37},{"ruleId":"310","severity":1,"message":"314","line":58,"column":70,"nodeType":"312","messageId":"313","endLine":58,"endColumn":72},{"ruleId":"310","severity":1,"message":"314","line":63,"column":62,"nodeType":"312","messageId":"313","endLine":63,"endColumn":64},{"ruleId":"310","severity":1,"message":"311","line":70,"column":36,"nodeType":"312","messageId":"313","endLine":70,"endColumn":38},{"ruleId":"310","severity":1,"message":"311","line":79,"column":34,"nodeType":"312","messageId":"313","endLine":79,"endColumn":36},{"ruleId":"310","severity":1,"message":"311","line":108,"column":45,"nodeType":"312","messageId":"313","endLine":108,"endColumn":47},{"ruleId":"316","severity":1,"message":"317","line":142,"column":25,"nodeType":"318","endLine":142,"endColumn":52},{"ruleId":"310","severity":1,"message":"314","line":26,"column":74,"nodeType":"312","messageId":"313","endLine":26,"endColumn":76},{"ruleId":"310","severity":1,"message":"311","line":43,"column":32,"nodeType":"312","messageId":"313","endLine":43,"endColumn":34},{"ruleId":"310","severity":1,"message":"311","line":51,"column":106,"nodeType":"312","messageId":"313","endLine":51,"endColumn":108},{"ruleId":"310","severity":1,"message":"314","line":52,"column":34,"nodeType":"312","messageId":"313","endLine":52,"endColumn":36},{"ruleId":"301","severity":1,"message":"322","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":14},{"ruleId":"301","severity":1,"message":"305","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":13},{"ruleId":"301","severity":1,"message":"306","line":7,"column":8,"nodeType":"303","messageId":"304","endLine":7,"endColumn":12},{"ruleId":"301","severity":1,"message":"307","line":8,"column":8,"nodeType":"303","messageId":"304","endLine":8,"endColumn":15},{"ruleId":"301","severity":1,"message":"308","line":9,"column":8,"nodeType":"303","messageId":"304","endLine":9,"endColumn":13},{"ruleId":"301","severity":1,"message":"309","line":10,"column":8,"nodeType":"303","messageId":"304","endLine":10,"endColumn":13},{"ruleId":"310","severity":1,"message":"311","line":41,"column":27,"nodeType":"312","messageId":"313","endLine":41,"endColumn":29},{"ruleId":"310","severity":1,"message":"311","line":105,"column":81,"nodeType":"312","messageId":"313","endLine":105,"endColumn":83},{"ruleId":"310","severity":1,"message":"314","line":109,"column":24,"nodeType":"312","messageId":"313","endLine":109,"endColumn":26},{"ruleId":"310","severity":1,"message":"311","line":121,"column":41,"nodeType":"312","messageId":"313","endLine":121,"endColumn":43},{"ruleId":"301","severity":1,"message":"323","line":133,"column":23,"nodeType":"303","messageId":"304","endLine":133,"endColumn":29},{"ruleId":"301","severity":1,"message":"315","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":50,"column":43,"nodeType":"312","messageId":"313","endLine":50,"endColumn":45},{"ruleId":"310","severity":1,"message":"311","line":53,"column":48,"nodeType":"312","messageId":"313","endLine":53,"endColumn":50},{"ruleId":"310","severity":1,"message":"311","line":53,"column":121,"nodeType":"312","messageId":"313","endLine":53,"endColumn":123},{"ruleId":"310","severity":1,"message":"311","line":53,"column":239,"nodeType":"312","messageId":"313","endLine":53,"endColumn":241},{"ruleId":"301","severity":1,"message":"315","line":11,"column":10,"nodeType":"303","messageId":"304","endLine":11,"endColumn":15},{"ruleId":"301","severity":1,"message":"324","line":11,"column":17,"nodeType":"303","messageId":"304","endLine":11,"endColumn":27},{"ruleId":"310","severity":1,"message":"311","line":67,"column":22,"nodeType":"312","messageId":"313","endLine":67,"endColumn":24},{"ruleId":"301","severity":1,"message":"325","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":13},{"ruleId":"301","severity":1,"message":"307","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":15},{"ruleId":"301","severity":1,"message":"315","line":7,"column":10,"nodeType":"303","messageId":"304","endLine":7,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":24,"column":45,"nodeType":"312","messageId":"313","endLine":24,"endColumn":47},{"ruleId":"310","severity":1,"message":"311","line":56,"column":44,"nodeType":"312","messageId":"313","endLine":56,"endColumn":46},{"ruleId":"301","severity":1,"message":"315","line":11,"column":10,"nodeType":"303","messageId":"304","endLine":11,"endColumn":15},{"ruleId":"310","severity":1,"message":"311","line":40,"column":29,"nodeType":"312","messageId":"313","endLine":40,"endColumn":31},{"ruleId":"316","severity":1,"message":"317","line":13,"column":21,"nodeType":"318","endLine":13,"endColumn":46},{"ruleId":"316","severity":1,"message":"317","line":18,"column":52,"nodeType":"318","endLine":18,"endColumn":66},{"ruleId":"316","severity":1,"message":"317","line":30,"column":20,"nodeType":"318","endLine":30,"endColumn":45},{"ruleId":"316","severity":1,"message":"317","line":36,"column":21,"nodeType":"318","endLine":36,"endColumn":44},{"ruleId":"316","severity":1,"message":"317","line":30,"column":21,"nodeType":"318","endLine":30,"endColumn":41},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'Food' is defined but never used.","'Flowers' is defined but never used.","'Music' is defined but never used.","'Place' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'tabIndex' is assigned a value but never used.","'contentIndex' is assigned a value but never used.","'elementRoles' is defined but never used.","'Client' is defined but never used.","'result' is assigned a value but never used.","'withRouter' is defined but never used.","'Event' is defined but never used.","no-global-assign","no-unsafe-negation"]